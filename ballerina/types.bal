// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

import ballerina/constraint;
import ballerina/data.jsondata;
import ballerina/http;

# AlertSubscriptionResponse
public type AlertSubscriptionResponse record {
    ScreenHeader header?;
    AlertSubscriptionResponseBody body?;
};

public type SubscribedAlertsResponseBody SubscribedAlertsResponseBodyInner[];

# Represents the Headers record for the operation: getEligibleEvents
public type GetEligibleEventsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# EligibleEventsResponse
public type EligibleEventsResponse record {
    QueryHeader header?;
    EligibleEventsResponseBody body?;
};

# Represents the Queries record for the operation: createAlertSubscription
public type CreateAlertSubscriptionQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type QueryHeader record {
    QueryHeaderAudit audit?;
    # The record from which the response should be displayed
    @jsondata:Name {value: "page_start"}
    int:Signed32 pageStart?;
    # The total number of records present
    @jsondata:Name {value: "total_size"}
    int:Signed32 totalSize?;
    # Unique id expected to get as part of response from t24 on every enquiry request
    @jsondata:Name {value: "page_token"}
    string pageToken?;
    # Status of the API(success/failed)
    string status?;
    # The total number of records per page
    @jsondata:Name {value: "page_size"}
    int:Signed32 pageSize?;
};

# Represents the Queries record for the operation: getEligibleEvents
public type GetEligibleEventsQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from t24 on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type QueryHeaderAudit record {
    # Time taken to response by T24
    @jsondata:Name {value: "T24_time"}
    int:Signed32 t24Time?;
    # Time taken to parse the response by IRIS
    @jsondata:Name {value: "responseParse_time"}
    decimal responseParseTime?;
    # The CURR.NO. of the record
    string versionNumber?;
    # Time taken to parse the request by IRIS
    @jsondata:Name {value: "requestParse_time"}
    decimal requestParseTime?;
};

# SubscribedAlertsResponse
public type SubscribedAlertsResponse record {
    QueryHeader header?;
    SubscribedAlertsResponseBody body?;
};

public type AlertSubscriptionBodyAccountOfficers record {
    # Identifier of Department Account Officer
    @constraint:String {maxLength: 35}
    string accountOfficer?;
};

# Represents the Headers record for the operation: getExternalSubscribersAlertRequests
public type GetExternalSubscribersAlertRequestsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: getExternalSubscribersAlertRequests
public type GetExternalSubscribersAlertRequestsQueries record {
    # Event identifier
    string eventId?;
    # Identifier of the external customer
    string externalCustomerId?;
    # Contains the external user identifier for which the consent is created
    string externalUserId?;
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Identifier of the customer
    string customerId?;
    # Unique id expected to get as part of response from t24 on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # Contains the contract reference
    string contractReference?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type EligibleEventsResponseBodyInner record {
    # The condition which must be pulled from the record for which the response should be displayed
    string displayCondition?;
    # Contains the starting message id of the conversation
    string messageGroupId?;
    # Event identifier
    string eventId?;
    # Extra filtering and validation at the subscription level to indicate if this event can be subscribed by a customer or department or both.  If defined as GLOBAL, then the customer cannot subscribe or un-subscribe to this event.  Allowed values: - INTERNAL - EXTERNAL - BOTH - GLOBAL
    string subscriptionLevel?;
    # Contains the name used for display or enrichment purposes
    string displayName?;
    # Input is the valid field name for the metrics evaluation of alerts
    EligibleEventsResponseBodyInner_fields[] fields?;
};

public type SubscribedAlertsResponseBodyInner record {
    # Contains the starting message id of the conversation
    @constraint:String {maxLength: 35}
    string messageGroupId?;
    # Event identifier
    @constraint:String {maxLength: 35}
    string eventId?;
    # Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN
    string accountId?;
    # Contains the name used for display or enrichment purposes
    @constraint:String {maxLength: 35}
    string displayName?;
    # Input is the valid field name for the metrics evaluation of alerts
    SubscribedAlertsResponseBodyInner_fields[] fields?;
    # Contains the contract reference
    @constraint:String {maxLength: 35}
    string contractReference?;
    # The unique identifier of the alert request
    @constraint:String {maxLength: 35}
    string alertRequestId?;
    # Current number of the record
    @constraint:String {maxLength: 4}
    string versionNumber?;
    # Indicates the description of the Product
    string productDescription?;
};

# Represents the Queries record for the operation: getSubscribedAlerts
public type GetSubscribedAlertsQueries record {
    # Enables an alert service
    string subscribe?;
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Identifier of the customer
    string customerId?;
    # Unique id expected to get as part of response from t24 on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The unique identifier of the alert request
    string alertRequestId?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

# Provides a set of configurations for controlling the behaviours when communicating with a remote HTTP endpoint.
@display {label: "Connection Config"}
public type ConnectionConfig record {|
    # Provides Auth configurations needed when communicating with a remote HTTP endpoint.
    http:CredentialsConfig|ApiKeysConfig auth;
    # The HTTP version understood by the client
    http:HttpVersion httpVersion = http:HTTP_2_0;
    # Configurations related to HTTP/1.x protocol
    http:ClientHttp1Settings http1Settings = {};
    # Configurations related to HTTP/2 protocol
    http:ClientHttp2Settings http2Settings = {};
    # The maximum time to wait (in seconds) for a response before closing the connection
    decimal timeout = 30;
    # The choice of setting `forwarded`/`x-forwarded` header
    string forwarded = "disable";
    # Configurations associated with Redirection
    http:FollowRedirects followRedirects?;
    # Configurations associated with request pooling
    http:PoolConfiguration poolConfig?;
    # HTTP caching related configurations
    http:CacheConfig cache = {};
    # Specifies the way of handling compression (`accept-encoding`) header
    http:Compression compression = http:COMPRESSION_AUTO;
    # Configurations associated with the behaviour of the Circuit Breaker
    http:CircuitBreakerConfig circuitBreaker?;
    # Configurations associated with retrying
    http:RetryConfig retryConfig?;
    # Configurations associated with cookies
    http:CookieConfig cookieConfig?;
    # Configurations associated with inbound response size limits
    http:ResponseLimitConfigs responseLimits = {};
    # SSL/TLS-related options
    http:ClientSecureSocket secureSocket?;
    # Proxy server related options
    http:ProxyConfig proxy?;
    # Provides settings related to client socket configuration
    http:ClientSocketConfig socketConfig = {};
    # Enables the inbound payload validation functionality which provided by the constraint package. Enabled by default
    boolean validation = true;
    # Enables relaxed data binding on the client side. When enabled, `nil` values are treated as optional, 
    # and absent fields are handled as `nilable` types. Enabled by default.
    boolean laxDataBinding = true;
|};

public type EligibleEventsResponseBody EligibleEventsResponseBodyInner[];

public type ExternalSubscribersAlertRequestsResponseBodyInner record {
    # Event identifier
    @constraint:String {maxLength: 35}
    string eventId?;
    # Identifier of the external customer
    @constraint:Number {maxValue: 35}
    decimal externalCustomerId?;
    # Contains the external user identifier for which the consent is created
    @constraint:String {maxLength: 35}
    string externalUserId?;
    # Contains the name used for display or enrichment purposes
    @constraint:String {maxLength: 35}
    string displayName?;
    # Identifier of the customer
    @constraint:Number {maxValue: 35}
    decimal customerId?;
    # Event Type of the corporate action
    @constraint:String {maxLength: 35}
    string eventType?;
    # Input is the valid field name for the metrics evaluation of alerts
    ExternalSubscribersAlertRequestsResponseBodyInner_fields[] fields?;
    # Contains the contract reference
    @constraint:String {maxLength: 35}
    string contractReference?;
    # The unique identifier of the alert request
    @constraint:String {maxLength: 35}
    string alertRequestId?;
};

# Represents the Headers record for the operation: getSubscribedAlerts
public type GetSubscribedAlertsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type ScreenHeader record {
    # The status of the transaction
    string transactionStatus?;
    QueryHeaderAudit audit?;
    # The Identifier of the record created
    string id?;
    # Status of the API(success/failed)
    string status?;
    # The unique identifier/Message Reference of the record created
    string uniqueIdentifier?;
};

# Represents the Queries record for the operation: updateAlertSubscription
public type UpdateAlertSubscriptionQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type ExternalSubscribersAlertRequestsResponseBodyInner_fields record {
    # The name of the field
    @constraint:String {maxLength: 35}
    string fieldName?;
    # Contains the name used for display or enrichment purposes
    @constraint:String {maxLength: 50}
    string displayName?;
    # This field along with fieldName and value, defines the conditions for the alert to be triggered.
    @constraint:String {maxLength: 35}
    string operand?;
    # The value of the field on which the Alert criteria is based
    @constraint:String {maxLength: 35}
    string value?;
};

public type AlertSubscriptionBodyFields record {
    # The name of the field
    @constraint:String {maxLength: 35}
    string fieldName?;
    # Contains the name used for display or enrichment purposes
    @constraint:String {maxLength: 35}
    string displayName?;
    # The position of the given field
    @constraint:String {maxLength: 35}
    string position?;
    # The value of the field on which the Alert criteria is based
    @constraint:String {maxLength: 35}
    string value?;
    # This field along with fieldName and value, defines the conditions for the alert to be triggered
    @constraint:String {maxLength: 35}
    string operand?;
};

public type EligibleEventsResponseBodyInner_fields record {
    # Contains the name of the display for enrichment purposes
    string fieldDisplayName?;
    # This field along with fieldName and value, defines the conditions for the alert to be triggered.
    string operand?;
    # Value of the field
    string fieldValue?;
};

public type ExternalSubscribersAlertRequestsResponseBody ExternalSubscribersAlertRequestsResponseBodyInner[];

public type SubscribedAlertsResponseBodyInner_fields record {
    # Contains the name of the display for enrichment purposes
    @constraint:String {maxLength: 50}
    string fieldDisplayName?;
    # This field along with fieldName and value, defines the conditions for the alert to be triggered.
    @constraint:String {maxLength: 35}
    string operand?;
    # The value of the field on which the Alert criteria is based
    @constraint:String {maxLength: 35}
    string value?;
};

public type AlertSubscriptionResponseBody record {
    # Event identifier
    @constraint:String {maxLength: 35}
    string eventId?;
    # Identifier of the external customer
    @constraint:String {maxLength: 35}
    string externalCustomerId?;
    # Enables an alert service
    @constraint:String {maxLength: 35}
    string subscribe?;
    # Contains the external user identifier for which the consent is created
    @constraint:String {maxLength: 35}
    string externalUserId?;
    # Identifier of Department Account Officer
    AlertSubscriptionBodyAccountOfficers[] accountOfficers?;
    # Identifier of the customer
    @constraint:String {maxLength: 35}
    string customerId?;
    # Input is the valid field name for the metrics evaluation of alerts
    AlertSubscriptionBodyFields[] fields?;
    # Contains the contract reference
    @constraint:String {maxLength: 35}
    string contractReference?;
};

# Represents the Headers record for the operation: createAlertSubscription
public type CreateAlertSubscriptionHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Headers record for the operation: updateAlertSubscription
public type UpdateAlertSubscriptionHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# ExternalSubscribersAlertRequestsResponse
public type ExternalSubscribersAlertRequestsResponse record {
    QueryHeader header?;
    ExternalSubscribersAlertRequestsResponseBody body?;
};

# Provides API key configurations needed when communicating with a remote HTTP endpoint.
public type ApiKeysConfig record {|
    string authorization;
|};
