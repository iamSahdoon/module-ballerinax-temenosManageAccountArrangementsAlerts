{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Customer management",
    "description" : "API to create, update and manage customer details such as delivery preferences, joint customer details, party relationships, KYC details, alert subscriptions, customer exit status, customer address formats & posting restrictions",
    "version" : "v5.7.0"
  },
  "servers" : [ {
    "url" : "https://api.temenos.com/api/v5.7.0//party"
  } ],
  "security" : [ {
    "apiKey" : [ ]
  } ],
  "tags" : [ {
    "name" : "RETAIL"
  }, {
    "name" : "OTHERS"
  } ],
  "paths" : {
    "/customers/{customerId}" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves customer details",
        "description" : "Retrieves the customer details such as customer contact information, residence details, legal document details, occupation details and relationship details for the specific customer",
        "operationId" : "getCustomer",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Update customer details",
        "description" : "Update customer details with the information such as customer contact information, residence details, legal document details, occupation details and relationship details, etc provided by the user",
        "operationId" : "updateCustomer",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "CustomerResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Create a customer by providing an Id",
        "description" : "Create a customer with the information such as customer contact information, residence details, legal document details, occupation details and relationship details, etc provided by the user. It allows to create a customer with the provided id.",
        "operationId" : "createCustomerWithId",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "CustomerWithIdResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/customers" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves list of customer basic details",
        "description" : "Retrieves the customer details such as delivery or postal details, contact information, residence details, customer profile, legal document details, occupation details and status of customer",
        "operationId" : "getCustomerInformation",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "query",
          "description" : "Identifier of the customer",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerName",
          "in" : "query",
          "description" : "Indicates the name of the customer. Originator is the party who requests the payment cancellation",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "street",
          "in" : "query",
          "description" : "Contains the street name of the customer or the property",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addressCity",
          "in" : "query",
          "description" : "The town and/or city component of the base address of a customer",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "countryId",
          "in" : "query",
          "description" : "ISO country code of the financial institution. ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "postCode",
          "in" : "query",
          "description" : "Identifies the address postal code for the customer or the property",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dateOfBirth",
          "in" : "query",
          "description" : "The date of birth of an individual customer",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerStatus",
          "in" : "query",
          "description" : "The internal bank status of a customer",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sectorId",
          "in" : "query",
          "description" : "An institution-defined identifier of the type of customer",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountOfficerId",
          "in" : "query",
          "description" : "The identifier of the department head or specific account officer responsible for the customer",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "industryId",
          "in" : "query",
          "description" : "An institution-defined identifier of the industry in which the customer is trading, operating or is associated with",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nationalityId",
          "in" : "query",
          "description" : "The identifier of the nationality of a customer",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "residenceId",
          "in" : "query",
          "description" : "The identifier of the country of residence of a customer",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastName",
          "in" : "query",
          "description" : "The last name of an individual customer",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "phoneNumber",
          "in" : "query",
          "description" : "The phone number of the customer or prospect",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerMnemonic",
          "in" : "query",
          "description" : "Specifies an alternative easy means of referencing the Customer",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "firstName",
          "in" : "query",
          "description" : "Specifies customer's first name",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerType",
          "in" : "query",
          "description" : "Identifies the type of customers. Example Personal, Business, Corporate, etc",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "Email Identifier of the Customer",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mobilePhoneNumber",
          "in" : "query",
          "description" : "Represents the phone number of a customer",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taxId",
          "in" : "query",
          "description" : "Holds the Customer's TAX/SSN Id",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "shortName",
          "in" : "query",
          "description" : "Contains the name of the account, basically the short title of the account",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "officePhoneNumber",
          "in" : "query",
          "description" : "The office phone number of the customer",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "faxId",
          "in" : "query",
          "description" : "The fax (facsimile) number of the customer",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "address",
          "in" : "query",
          "description" : "Contains the communication address of the customer or full address of the property",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "relCustomer",
          "in" : "query",
          "description" : "Customers linked or related to the arrangement owner",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "relationshipCode",
          "in" : "query",
          "description" : "Relationship identifier between the partyType and relatedPartyType",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "legalId",
          "in" : "query",
          "description" : "Unique reference number of the legal documents submitted as identification proof",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "legalDocumentName",
          "in" : "query",
          "description" : "Name of the legal documents such as passport, driving licence etc., provided as identification proof",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "birthIncorpDate",
          "in" : "query",
          "description" : "Date on which the entity is incorporated",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerNameAdditional",
          "in" : "query",
          "description" : "Continuation/Extension to the Customer Name",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerInformationResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerInformationResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Create a customer",
        "description" : "Create a customer with the information such as customer contact information, residence details, legal document details, occupation details and relationship details, etc provided by the user. It allows to create a customer with system generated id.",
        "operationId" : "createCustomer",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "CustomerResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/customers/relationships" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves list of customer relationships",
        "description" : "Retrieves customer relationship details such as type of relationship, party information, related as, owning details, role & purpose of relationship for specific party or customer",
        "operationId" : "getCustomerRelationship",
        "parameters" : [ {
          "name" : "customerRelationGroupId",
          "in" : "query",
          "description" : "Identifies the key to Customer Relationship Group to form a relation",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partyId",
          "in" : "query",
          "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "relatedPartyId",
          "in" : "query",
          "description" : "Identifier of the Related Party",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "relationId",
          "in" : "query",
          "description" : "Identifier of the Customer Relationship and Party Relationship",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerRelationshipResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerRelationshipResponse1"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Create customer relationship with other customers",
        "description" : "Create a customer relationship for a customer with details such as type of relationship, party information, related as, owning details, role & purpose of relationship",
        "operationId" : "createCustomerRelationship",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerRelationship"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "CustomerRelationshipResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerRelationshipResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/customers/relationships/{relationId}" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Update customer relationship",
        "description" : "Update customer relationship for a customer with details such as type of relationship, party information, related as, owning details, role & purpose of relationship",
        "operationId" : "updateCustomerRelationship",
        "parameters" : [ {
          "name" : "relationId",
          "in" : "path",
          "description" : "Identifier of the Customer Relationship and Party Relationship",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerRelationship"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "CustomerRelationshipResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerRelationshipResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/customers/reportingStatus" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves reporting status of the customer",
        "description" : "Retrieves the FATCA/CRS reporting status and reporting jurisdiction of the customer",
        "operationId" : "getCustomerReportingStatus",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "query",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerReportingStatusResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerReportingStatusResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/sweeps" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves account sweep details of the specific customer",
        "description" : "Retrieves account sweep details such as sweep reference, type, balance requirements for sweep and frequency of sweep for the list of accounts available to a customer",
        "operationId" : "getCustomerSweeps",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerSweepsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerSweepsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/deliveryOptions" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves delivery preferences of the customer",
        "description" : "Retrieves the delivery preferences of the customer such as the message group, carrier and address.",
        "operationId" : "getCustomerDeliveryOptions",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerDeliveryOptionsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerDeliveryOptionsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/channels" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves list of message channels",
        "description" : "Retrieves the list of message channels such as internet banking, mobile banking, ATM, etc available for the specific customer",
        "operationId" : "getCustomerDigitalChannels",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "query",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerDigitalChannelsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerDigitalChannelsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/messages" : {
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Create a new secure message for a customer",
        "description" : "Create a new secure message for a customer to be sent by bank",
        "operationId" : "createMessages",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Messages"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "MessagesResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagesResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/customers/{customerId}/jointCustomers" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves joint customer details for a specific customer",
        "description" : "Retrieves details such as joint relation code, name, joint customer details and reverse relationships for a specific customer",
        "operationId" : "getJointCustomerDetails",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "JointCustomerDetailsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JointCustomerDetailsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/KYC" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves KYC details for a specific customer",
        "description" : "Retrieves the KYC details such as contact date, introducer, last and next review date, KYC and AML status of a customer",
        "operationId" : "getCustomerKYCDetails",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerKYCDetailsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerKYCDetailsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/personalProfiles" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves personal details of customer",
        "description" : "Retrieves personal details such as residence, communication details, occupation details, asset and liability information",
        "operationId" : "getCustomerPersonalDetails",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerPersonalDetailsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerPersonalDetailsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/postingRestrictions" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves posting restriction details",
        "description" : "Retrieves the credit and debit posting restriction details such as restriction reference and name of restriction set for a customer",
        "operationId" : "getCustomerPostingRestrictions",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "query",
          "description" : "Identifier of the customer",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerPostingRestrictionsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerPostingRestrictionsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/relationships/{relationId}" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Update party relationship details",
        "description" : "Update party relationship between a person, entity or customer with details such as party name, relation type, related as, relation code and owning details",
        "operationId" : "updatePartyRelationship",
        "parameters" : [ {
          "name" : "relationId",
          "in" : "path",
          "description" : "Identifier of the Customer Relationship and Party Relationship",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/PartyRelationship"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "PartyRelationshipResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PartyRelationshipResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Create party relationship details",
        "description" : "Create a party relationship between a person, entity or customer with details such as party name, relation type, related as, relation code and owning details",
        "operationId" : "createPartyRelationship",
        "parameters" : [ {
          "name" : "relationId",
          "in" : "path",
          "description" : "Identifier of the Customer Relationship and Party Relationship",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/PartyRelationship"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "PartyRelationshipResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PartyRelationshipResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/customers/{customerId}/cards" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves card details of a customer",
        "description" : "Retrieves the card details such as card number, card type and status, linked account and its balances of a customer",
        "operationId" : "getCustomerCreditCards",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerCreditCardsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerCreditCardsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/standingOrders" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves standing instruction details of a customer",
        "description" : "Retrieves the list of standing instructions for a customer with details such as instruction reference, order type, frequency of payments, mode of payment and credit & debit parties involved",
        "operationId" : "getStandingOrders",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "standingOrderId",
          "in" : "query",
          "description" : "The unique standing order identifier",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountId",
          "in" : "query",
          "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderingCustomerId",
          "in" : "query",
          "description" : "Indicates the customer id for the ordering customer",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "StandingOrdersResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StandingOrdersResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/directDebits" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves direct debits details of a customer",
        "description" : "Retrieves the list of direct debits for a customer with details such as direct debit reference, debit and credit accounts, transaction amount, payment frequency, next payment date and direction of payment",
        "operationId" : "getDirectDebits",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "directDebitId",
          "in" : "query",
          "description" : "The unique identifier of the direct debit mandate. ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "DirectDebitsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DirectDebitsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/deliveryPreferences/{deliveryPreferenceId}" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Update customer delivery preferences",
        "description" : "Update customer delivery preferences with details such as message group, carrier, role, address, email details and format of messages",
        "operationId" : "updateDeliveryPreference",
        "parameters" : [ {
          "name" : "deliveryPreferenceId",
          "in" : "path",
          "description" : "Identifier of the customer delivery preferences",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeliveryPreference"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "DeliveryPreferenceResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeliveryPreferenceResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Create customer delivery preferences",
        "description" : "Create customer delivery preferences with details such as message group, carrier, role, address, email details and format of messages",
        "operationId" : "createDeliveryPreference",
        "parameters" : [ {
          "name" : "deliveryPreferenceId",
          "in" : "path",
          "description" : "Identifier of the customer delivery preferences",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeliveryPreference"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "DeliveryPreferenceResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeliveryPreferenceResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/customers/{customerId}/customerExitStatus" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves customer exit status details of customer",
        "description" : "Retrieves customer exit status details such as customer type, exit date, status and reason",
        "operationId" : "getCustomerExitStatus",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerExitStatusResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerExitStatusResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Update customer exit status details of customers",
        "description" : "Update a customer with exit status and exit reason marking the customer as blocked or rejected or closed",
        "operationId" : "updateCustomerExitStatus",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerExitStatus"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "CustomerExitStatusResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerExitStatusResponse1"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/customers/settings/customerExitStatus/{customerExitStatusId}" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves conditions to update customer exit status of customer",
        "description" : "Retrieves available conditions such as customer exit setup reference, allowed reasons and allowed re-open details to update customer exit status of customers",
        "operationId" : "getCustomerExitStatusParam",
        "parameters" : [ {
          "name" : "customerExitStatusId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerType",
          "in" : "query",
          "description" : "Identifies the type of customers. Example Personal, Business, Corporate, etc",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerExitStatusParamResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerExitStatusParamResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Create conditions to update customer exit status of customer",
        "description" : "Create conditions such as applicable customer type and allowed reasons to update the customer exit status details of customers",
        "operationId" : "createCustomerExitStatusParam",
        "parameters" : [ {
          "name" : "customerExitStatusId",
          "in" : "path",
          "description" : "The field reflects the exit status ID of a customer or prospect from the parameterization table CUSTOMER.EXIT.STATUS",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerExitStatusParam"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "CustomerExitStatusParamResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerExitStatusParamResponse1"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/customers/settings/{customerExitStatusId}/customerExitStatus" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Create conditions to update customer exit status of customer",
        "description" : "Create conditions such as applicable customer type and allowed reasons to update the customer exit status details of customers",
        "operationId" : "updateCustomerExitStatusParam",
        "parameters" : [ {
          "name" : "customerExitStatusId",
          "in" : "path",
          "description" : "The field reflects the exit status ID of a customer or prospect from the parameterization table CUSTOMER.EXIT.STATUS",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerExitStatusParam"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "CustomerExitStatusParamResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerExitStatusParamResponse1"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/customers/{customerId}/addresses" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves structured/ unstructured address format of customer",
        "description" : "Returns structured/unstructured address details of specified customer based on address option in request. When structured format is requested, the values are returned in format of structured data name combined with corresponding customer address value. When unstructured format is requested, the address details are returned based on configured unstructured address format.",
        "operationId" : "getCustomerAddressOutput",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addressOption",
          "in" : "query",
          "description" : "It reflects the preference for the customer address format, respective structured, unstructured or both",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addressOutputFormat",
          "in" : "query",
          "description" : "It identifies the address output format for the unstructured address",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerAddressOutputResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerAddressOutputResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/shortNames" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves customer short name",
        "description" : "Retrieves customer short name that can be used as customer enrichment by any application",
        "operationId" : "getCustomerShortNames",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerShortNamesResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerShortNamesResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/mandates" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves mandate instruction applicable for the requested customer",
        "description" : "Retrieves the mandate instruction details such as application eligible for mandate process and the corresponding mandate rule that is being applied to check mandates for transactions involving the specified customer.",
        "operationId" : "getCustomerMandates",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerMandatesResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerMandatesResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/documents" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves the customer legal document details",
        "description" : "Retrieves the details of legal document provided by the customer such as document name, document id, issue date, expiry date and authority who issued the document.",
        "operationId" : "getCustomerLegalDocuments",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerLegalDocumentsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerLegalDocumentsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/profiles" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves profile details of the requested customer",
        "description" : "Retrieves the customer basic details such as personal information, address location, basic contact details and other general information.",
        "operationId" : "getCustomerProfile",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerProfileResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerProfileResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/alternateReferences/{alternateReference}" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves customer id for the given alternate reference",
        "description" : "Retrieves the customer identifier for the provided alternate reference of the customer",
        "operationId" : "getCustomerId",
        "parameters" : [ {
          "name" : "alternateReference",
          "in" : "path",
          "description" : "If the new Account to be created is a shadow of another Account already exisitng in another system, then the Account reference of that system can be specified here. The value given in this field will be mapped to ALTERNATE.ID field in arrangement activity and ensure that this Account doesn't already exist in T24 with another reference (because ALTERNATE.ID would be configured to be unique across T24)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerIdResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerIdResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/restrictions" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves the restriction details",
        "description" : "Retrieves the transaction restrictions imposed on the customer specified. Restrictions can be post no entries, black listed customer, pending KYC due reasons for restricting transactions on this customer",
        "operationId" : "getCustomerRestrictions",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerRestrictionsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerRestrictionsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/contacts" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves the customer contact details",
        "description" : "Retrieves the contact details such as phone number, mobile numbers, fax and email address specific to the requested customer",
        "operationId" : "getCustomerContacts",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerContactsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerContactsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/relationships" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves the relation customers",
        "description" : "Retrieves the relationship details such as related customer and the relationship that exists with the requested customer",
        "operationId" : "getCustomerRelationships",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerRelationshipsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerRelationshipsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/payments" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves customer details required for payment processing",
        "description" : "Retrieves the customer information that are required for processing or validating the customer involved in a payment transaction. Provides the information such as customer name details, birth details, address details,  market sector, target, nationality, residence country and preferred language for communication.",
        "operationId" : "getPartyBasicDetails",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "PartyBasicDetailsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PartyBasicDetailsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/addresses/swiftAddresses/{addressId}" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves the SWIFT address details for the customer.",
        "description" : "Retrieves the SWIFT address details such as delivery address, short name and tag25 indicator for the customer.",
        "operationId" : "getCustomerSwiftAddress",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addressId",
          "in" : "path",
          "description" : "Reference Id of address record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerSwiftAddressResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerSwiftAddressResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/charges" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves customer charge for a specific customer.",
        "description" : "Retrieves customer charge for a customer with details such as tax type and tax group.",
        "operationId" : "getCustomerCharge",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerChargeResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerChargeResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Updates customer charge for a specific customer.",
        "description" : "Updates customer charge for a customer with details such as tax type and tax group.",
        "operationId" : "updateCustomerCharge",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerCharge"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "CustomerChargeResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerChargeResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Creates customer charge for a specific customer.",
        "description" : "Creates customer charge for a customer with details such as tax type and tax group.",
        "operationId" : "createCustomerCharge",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerCharge"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "CustomerChargeResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerChargeResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/customers/{customerId}/addresses/smsAddresses" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves available list of customer sms communication addresses",
        "description" : "Retrieves the list of customer sms communication address with details such as name, idd prefix and mobile number.",
        "operationId" : "getCustomerPhoneAddress",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addressId",
          "in" : "query",
          "description" : "Reference Id of address record",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerPhoneAddressResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerPhoneAddressResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Creates customer sms communication address",
        "description" : "Create customer sms communication address with details such as name, idd prefix and mobile number.",
        "operationId" : "createCustomerPhoneAddress",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerPhoneAddress"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "CustomerPhoneAddressResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerPhoneAddressResponse1"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/customers/{customerId}/addresses/emailAddresses" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves available list of customer email communication addresses",
        "description" : "Retrieves the list of customer email communication address with details such as customer name and email references.",
        "operationId" : "getCustomerEmailAddress",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addressId",
          "in" : "query",
          "description" : "Reference Id of address record",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerEmailAddressResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerEmailAddressResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Creates customer email communication address",
        "description" : "Create customer email communication address with details such as customer name and email references.",
        "operationId" : "createCustomerEmailAddress",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerEmailAddress"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "CustomerEmailAddressResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerEmailAddressResponse1"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/customers/{customerId}/addresses/printAddresses" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves available list of customer print communication addresses",
        "description" : "Retrieves the list of customer print communication addresses with details such as name, address, postcode and phone number.",
        "operationId" : "getCustomerPrintAddress",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addressId",
          "in" : "query",
          "description" : "Reference Id of address record",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerPrintAddressResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerPrintAddressResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Creates customer print communication address",
        "description" : "Create customer print communication address with details such as name, address, postcode and phone number.",
        "operationId" : "createCustomerPrintAddress",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerPrintAddress"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "CustomerPrintAddressResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerPrintAddressResponse1"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/customers/addresses/{customerAddressId}/smsAddresses" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Updates customer sms communication address",
        "description" : "Update customer sms communication address with details such as name, idd prefix and mobile number.",
        "operationId" : "updateCustomerPhoneAddress",
        "parameters" : [ {
          "name" : "customerAddressId",
          "in" : "path",
          "description" : "Identifier of the customer address table",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerPhoneAddress"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "CustomerPhoneAddressResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerPhoneAddressResponse1"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "delete" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Deletes customer sms communication address",
        "description" : "Delete the specified customer sms communication address that are no longer used.",
        "operationId" : "deleteCustomerPhoneAddress",
        "parameters" : [ {
          "name" : "customerAddressId",
          "in" : "path",
          "description" : "Identifier of the customer address table",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerPhoneAddressDelete"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "CustomerPhoneAddressResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerPhoneAddressResponse1"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/customers/addresses/{customerAddressId}/emailAddresses" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Updates customer email communication address",
        "description" : "Update customer email communication address with details such as customer name and email references.",
        "operationId" : "updateCustomerEmailAddress",
        "parameters" : [ {
          "name" : "customerAddressId",
          "in" : "path",
          "description" : "Identifier of the customer address table",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerEmailAddress"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "CustomerEmailAddressResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerEmailAddressResponse1"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "delete" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Deletes customer email communication address",
        "description" : "Delete the specified customer email communication address that are no longer used.",
        "operationId" : "deleteCustomerEmailAddress",
        "parameters" : [ {
          "name" : "customerAddressId",
          "in" : "path",
          "description" : "Identifier of the customer address table",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerEmailAddressDelete"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "CustomerEmailAddressResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerEmailAddressResponse1"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/customers/addresses/{customerAddressId}/printAddresses" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Updates customer print communication address",
        "description" : "Update customer print communication address with details such as name, address, postcode and phone number.",
        "operationId" : "updateCustomerPrintAddress",
        "parameters" : [ {
          "name" : "customerAddressId",
          "in" : "path",
          "description" : "Identifier of the customer address table",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerPrintAddress"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "CustomerPrintAddressResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerPrintAddressResponse1"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "delete" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Deletes customer print communication address",
        "description" : "Delete the specified customer print communication address that are no longer used.",
        "operationId" : "deleteCustomerPrintAddress",
        "parameters" : [ {
          "name" : "customerAddressId",
          "in" : "path",
          "description" : "Identifier of the customer address table",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerPrintAddressDelete"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "CustomerPrintAddressResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerPrintAddressResponse1"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/customers/{customerId}/consents" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves customer consents details",
        "description" : "Retrieves the list of consent details for specific customer",
        "operationId" : "getCustomerConsents",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "propertyClassId",
          "in" : "query",
          "description" : "The identifier of a condition that is used to build a product",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerConsentsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerConsentsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/fatca" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Update FATCA customer supplementary information details",
        "description" : "Update the FATCA customer supplementary information that stores the related FATCA details for the customer",
        "operationId" : "updateFatcaCustomer",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/FatcaCustomer"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "FatcaCustomerResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FatcaCustomerResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Create FATCA customer supplementary information details",
        "description" : "Creates the FATCA customer supplementary information that stores the related FATCA details for the customer",
        "operationId" : "createFatcaCustomer",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/FatcaCustomer"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "FatcaCustomerResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FatcaCustomerResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/customers/{customerId}/portfolios/{portfolioId}/overdueSettlements" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves overdue settlements of customer or portfolio",
        "description" : "Retrieves overdue settlements of customer or portfolio with details such as transaction reference, instrument reference , instrument name, depository and broker involved, trade date, trade currency, trade quantity, current customer and broker outstandings",
        "operationId" : "getOverdueSettlements",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "portfolioId",
          "in" : "path",
          "description" : "Id of the portfolio or security account",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transactionId",
          "in" : "query",
          "description" : "Unique transaction identifier for retrieving the details of the transaction. For example: FT0102030333 etc",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "brokerId",
          "in" : "query",
          "description" : "The identifier of the broker",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tradeDate",
          "in" : "query",
          "description" : "Standard date field which records trade date of the account",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "valueDate",
          "in" : "query",
          "description" : "Indicates the value date on which the underlying accounting entry is to be given value (for interest purposes)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "depository",
          "in" : "query",
          "description" : "Person designated as depository by the company in or pursuant to this Indenture, and, unless otherwise provided with respect to any security, any successor to such person",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "currency",
          "in" : "query",
          "description" : "Identifies the currency. E.g. USD, GBP etc",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "instrumentId",
          "in" : "query",
          "description" : "The identifier of the instrument",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deliveryInstruction",
          "in" : "query",
          "description" : "Customer's directions to a bank as to the disposition of funds and securities in the customer's account",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transactionType",
          "in" : "query",
          "description" : "Identifies the transaction type applicable to the transaction being processed, i.e. outward or inward payment. For example: ACPX, OTPX etc",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "quantity",
          "in" : "query",
          "description" : "The nominal quantity",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "stockExchange",
          "in" : "query",
          "description" : "Contains the stock exchange details where a particular security is usually dealt",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OverdueSettlementsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OverdueSettlementsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/accountServicingProviders" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves details of third party providers",
        "description" : "Retrieves the third party providers that are allowed to interact with the bank or entity with details such as global unique reference number, provider country,provider name and national competent authority register code",
        "operationId" : "getOtherBanksToConnectTo",
        "parameters" : [ {
          "name" : "openBankingId",
          "in" : "query",
          "description" : "Identifies the open banking number of the customer",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "countryId",
          "in" : "query",
          "description" : "ISO country code of the financial institution. ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "setActive",
          "in" : "query",
          "description" : "Flag to set the connection status to active",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Contains status of the data rights request.Allowed values are INITIATED, INPROGESS, EXTENDED, COMPLETED, REJECTED",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "extSourceProvider",
          "in" : "query",
          "description" : "Contains the name of the external source provider for the customer",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OtherBanksToConnectToResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OtherBanksToConnectToResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/prospects" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves prospect details of customers",
        "description" : "Retrieves the list of prospect customers with details such as contact information, residence details, personal details and prospect legal details",
        "operationId" : "getProspectCustomers",
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ProspectCustomersResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProspectCustomersResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Create a prospect customer",
        "description" : "Create a prospect customer with basic details such as contact information, residence details and prospect legal details",
        "operationId" : "createProspectCustomer",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProspectCustomer"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "ProspectCustomerResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProspectCustomerResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/customers/{customerId}/opportunities" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves the sales opportunities for specific customers",
        "description" : "Retrieves the details of sales opportunities such as score, status and product details which are likely to be of interest to specific customers",
        "operationId" : "getCustomerOpportunities",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerOpportunitiesResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerOpportunitiesResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/requests" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves process workflows for a specific customer",
        "description" : "Retrieves process workflow details such as process name, activity details and status for a specific customer",
        "operationId" : "getCustomerRequests",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerRequestsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerRequestsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/prospects/{prospectId}" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Update a prospect customer",
        "description" : "Update a prospect customer with basic details such as contact information, residence details and prospect legal details",
        "operationId" : "updateProspectCustomer",
        "parameters" : [ {
          "name" : "prospectId",
          "in" : "path",
          "description" : "Indicates the status of an onboarding customer. Status can be PROSPECT while onboarding and ACTIVE when the prospect becomes a Customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProspectCustomer"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "ProspectCustomerResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProspectCustomerResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/customers/{customerId}/alertRequests" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves alert requests details",
        "description" : "Retrieves the alert subscription details such as alert reference, alert name and condition for alerts of a customer",
        "operationId" : "getAlertRequests",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contractReference",
          "in" : "query",
          "description" : "Contains the contract reference",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscribe",
          "in" : "query",
          "description" : "Enables an alert service",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "alertRequestId",
          "in" : "query",
          "description" : "The unique identifier of the alert request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "AlertRequestsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AlertRequestsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/relationships/{partyId}/relations" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves list of party relationship details",
        "description" : "Retrieves the relationship details such as party name, type, relation code, status and owning percentage of customers involved in a relationship",
        "operationId" : "getPartyRelationship",
        "parameters" : [ {
          "name" : "partyId",
          "in" : "path",
          "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "PartyRelationshipResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PartyRelationshipResponse1"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/staticDataUpdateEvents" : {
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Create log of customer static data update event from external party systems",
        "description" : "Create data log with details such as event name, event creation date and time for customer that has undergone static data updates from external party systems",
        "operationId" : "createCustomerStaticChange",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerStaticChange"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "CustomerStaticChangeResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerStaticChangeResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/customers/bankCodes/BICs/{bicId}/owners" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Returns the owner of the BIC and the channel through which this BIC is used.",
        "description" : "Returns the owner of the BIC and the channel through which this BIC is used. If a company code is returned without a customer ID this indicates the entity of the current financial institution. If a company code is returned along with a customer number, this indicates the customer identified by the respective BIC and the entity of the current financial institution that maintains the main relationship with the customer. The address type returned represent the context in which the BIC can be used.",
        "operationId" : "getBicOwners",
        "parameters" : [ {
          "name" : "bicId",
          "in" : "path",
          "description" : "Bank Identifier Code (BIC) of the financial institution",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "BicOwnersResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BicOwnersResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/groupPurposes/{groupPurposeId}" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Allows amendment of customer group purpose",
        "description" : "Allows amendment of customer group purpose with details such as group purpose, type of group relationships - individual or group, allowed list of individual, aggregate and group relationships",
        "operationId" : "updateCustomerGroupPurpose",
        "parameters" : [ {
          "name" : "groupPurposeId",
          "in" : "path",
          "description" : "Identifier of customer group purpose",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerGroupPurpose"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "CustomerGroupPurposeResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerGroupPurposeResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Allows creation of customer group purpose.",
        "description" : "Allows creation of customer group purpose with details such as group purpose, type of group relationships - individual or group, allowed list of individual, aggregate and group relationships.",
        "operationId" : "createCustomerGroupPurpose",
        "parameters" : [ {
          "name" : "groupPurposeId",
          "in" : "path",
          "description" : "Identifier of customer group purpose",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerGroupPurpose"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "CustomerGroupPurposeResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerGroupPurposeResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "delete" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Allows deletion of unapproved customer group purpose",
        "description" : "Allows deletion of unapproved customer group purpose that is no longer required",
        "operationId" : "deleteCustomerGroupPurpose",
        "parameters" : [ {
          "name" : "groupPurposeId",
          "in" : "path",
          "description" : "Identifier of customer group purpose",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerGroupPurposeDelete"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "CustomerGroupPurposeResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerGroupPurposeResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/customers/groupPurposes/{groupPurposeId}/approvals" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Allows authorization of customer group purpose",
        "description" : "Allows authorization of customer group purpose with modified details such as type of group relationships - individual or group, allowed list of individual, aggregate and group relationships",
        "operationId" : "approveCustomerGroupPurpose",
        "parameters" : [ {
          "name" : "groupPurposeId",
          "in" : "path",
          "description" : "Identifier of customer group purpose",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerGroupPurposeResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerGroupPurposeResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/groupPurposes/{groupPurposeId}/cancellations" : {
      "delete" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Allows cancellation of customer group purpose",
        "description" : "Allows cancellations of approved customer group purpose that is no longer required",
        "operationId" : "cancelCustomerGroupPurpose",
        "parameters" : [ {
          "name" : "groupPurposeId",
          "in" : "path",
          "description" : "Identifier of customer group purpose",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerGroupPurposeDelete"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "CustomerGroupPurposeResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerGroupPurposeResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/customers/groups/{groupId}" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Allows amendment of customer group",
        "description" : "Allows amendment of customer group with details such as group name, purpose, group type, company reference, account officer, closure date, customer and their relationships that can be either individual or group, liability customer and the ownership percentage of each customers in the group",
        "operationId" : "updateCustomerGroup",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "description" : "Unique ID of the group",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerGroup"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "CustomerGroupResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerGroupResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Allows creation of customer group",
        "description" : "Allows creation of customer group with details such as group name, purpose, group type, company reference, account officer, closure date, customer and their relationships that can be either individual or group, liability customer and the ownership percentage of each customers in the group",
        "operationId" : "createCustomerGroup",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "description" : "Unique ID of the group",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerGroup"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "CustomerGroupResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerGroupResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "delete" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Allows deletion of unapproved customer group",
        "description" : "Allows deletion of unapproved customer group that is no longer required",
        "operationId" : "deleteCustomerGroup",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "description" : "Unique ID of the group",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerGroupDelete"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "CustomerGroupResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerGroupResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/customers/groups/{groupId}/approvals" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Allows authorization of customer group",
        "description" : "Allows authorization of customer group with details such as group name, purpose, group type, company reference, account officer, closure date, customer and their relationships that can be either individual or group, liability customer and the ownership percentage of each customers in the group",
        "operationId" : "approveCustomerGroup",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "description" : "Unique ID of the group",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerGroupResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerGroupResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/groupPurposes/pendingApprovals" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves the list of unapproved customer group purposes",
        "description" : "Retrieves the list of unapproved customer group purposes with details such as group purpose, type of group relationships - individual or group, allowed list of individual, aggregate and group relationships",
        "operationId" : "getUnapprovedCustomerGroupPurpose",
        "parameters" : [ {
          "name" : "groupPurposeId",
          "in" : "query",
          "description" : "Identifier of customer group purpose",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupPurpose",
          "in" : "query",
          "description" : "Indicates the type of customer group. Allowed values are RISK ,LIABILITY or Blank",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupLevelUniqueCustomer",
          "in" : "query",
          "description" : "Indicates whether customers in a group are to be restricted from being defined in another customer group with same group purpose. YES - will restrict the customer from being defined in another group, NO/Blank - will allow customers to be defined in other groups",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "allowGroupRelationship",
          "in" : "query",
          "description" : "Indicates whether group relations have to be defaulted in customer group from party relationship. Allowed values are YES, NO or Blank",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "allowRelationship",
          "in" : "query",
          "description" : "Indicates whether customer relations have to be defaulted in customer group from party relationship. Allowed values are YES, NO or Blank",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subGroupLevelUniqueCustomer",
          "in" : "query",
          "description" : "Indicates whether a customer is allowed to be part of multiple sub groups. Allowed values are UNIQUE, MULTIPLE, NONE or Blank",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "UnapprovedCustomerGroupPurposeResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnapprovedCustomerGroupPurposeResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/groupPurposes" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves the list of customer group purposes",
        "description" : "Retrieves the list of customer group purposes with details such as group purpose, type of group relationships - individual or group, allowed list of individual, aggregate and group relationships",
        "operationId" : "getCustomerGroupPurpose",
        "parameters" : [ {
          "name" : "groupPurposeId",
          "in" : "query",
          "description" : "Identifier of customer group purpose",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupPurpose",
          "in" : "query",
          "description" : "Indicates the type of customer group. Allowed values are RISK ,LIABILITY or Blank",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupLevelUniqueCustomer",
          "in" : "query",
          "description" : "Indicates whether customers in a group are to be restricted from being defined in another customer group with same group purpose. YES - will restrict the customer from being defined in another group, NO/Blank - will allow customers to be defined in other groups",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "allowGroupRelationship",
          "in" : "query",
          "description" : "Indicates whether group relations have to be defaulted in customer group from party relationship. Allowed values are YES, NO or Blank",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "allowRelationship",
          "in" : "query",
          "description" : "Indicates whether customer relations have to be defaulted in customer group from party relationship. Allowed values are YES, NO or Blank",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subGroupLevelUniqueCustomer",
          "in" : "query",
          "description" : "Indicates whether a customer is allowed to be part of multiple sub groups. Allowed values are UNIQUE, MULTIPLE, NONE or Blank",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerGroupPurposeResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerGroupPurposeResponse1"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/groups/pendingApprovals" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves the list of unapproved customer groups",
        "description" : "Retrieves the list of unapproved customer group with details such as group name, purpose, group type, company reference, account officer, closure date, customer and their relationships that can be either individual or group, liability customer and the ownership percentage of each customers in the group",
        "operationId" : "getUnapprovedCustomerGroup",
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "UnapprovedCustomerGroupResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnapprovedCustomerGroupResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/groups" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves the details of customer group",
        "description" : "Retrieves list of customer groups or specified customer group with details such as group name, purpose, group type, company reference, account officer, closure date, customer and their relationships that can be either individual or group, liability customer and the ownership percentage of each customers in the group",
        "operationId" : "getCustomerGroups",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "query",
          "description" : "Unique ID of the group",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerGroupsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerGroupsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/customerClosures" : {
      "get" : {
        "tags" : [ "OTHERS" ],
        "summary" : "Retrieves customer closure request.",
        "description" : "Retrieves customer closure request with information such as customer id, exit status, exit reason , remarks, closure date and reopened date.",
        "operationId" : "getCustomerClosure",
        "parameters" : [ {
          "name" : "customerClosureId",
          "in" : "query",
          "description" : "Identifier of customer closure request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerId",
          "in" : "query",
          "description" : "Identifier of the customer",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "requestStatus",
          "in" : "query",
          "description" : "The current status of the request. The possible values includes New, send to printer, cancelled and processed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerClosureResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerClosureResponse1"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "OTHERS" ],
        "summary" : "Creates customer closure request",
        "description" : "Creates customer closure request with information such as customer id, exit status, exit reason and remarks.",
        "operationId" : "createCustomerClosure",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerClosure"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "CustomerClosureResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerClosureResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/customers/customerClosures/{customerClosureId}" : {
      "put" : {
        "tags" : [ "OTHERS" ],
        "summary" : "Allows amendment of customer closure request",
        "description" : "Update customer closure request with information such as exit status, exit reason and remarks.",
        "operationId" : "updateCustomerClosure",
        "parameters" : [ {
          "name" : "customerClosureId",
          "in" : "path",
          "description" : "Identifier of customer closure request",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "validateOnly"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "body Payload",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerClosure"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "CustomerClosureResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerClosureResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessScreenErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemScreenErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    }
  },
  "components" : {
    "schemas" : {
      "FatcaCustomer" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/FatcaCustomerBody"
          }
        },
        "description" : "FatcaCustomer"
      },
      "CustomerGroupPurposeResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ScreenHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerGroupPurposeResponseBody"
          }
        },
        "description" : "CustomerGroupPurposeResponse"
      },
      "ErrorHeader" : {
        "type" : "object",
        "properties" : {
          "transactionStatus" : {
            "type" : "string",
            "description" : "The status of the transaction"
          },
          "audit" : {
            "$ref" : "#/components/schemas/ScreenHeaderAudit"
          },
          "id" : {
            "type" : "string",
            "description" : "The Identifier of the record created"
          },
          "status" : {
            "type" : "string",
            "description" : "Status of the API(success/failed)"
          },
          "uniqueIdentifier" : {
            "type" : "string",
            "description" : "The unique identifier/Message Reference of the record created"
          }
        }
      },
      "PayloadHeaderAudit" : {
        "type" : "object",
        "properties" : {
          "versionNumber" : {
            "type" : "string",
            "description" : "The CURR.NO. of the record"
          }
        }
      },
      "Customer" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerBody"
          }
        },
        "description" : "Customer"
      },
      "CustomerRestrictionsResponseBodyPostingRestrictIds" : {
        "type" : "object",
        "properties" : {
          "postingRestrictId" : {
            "maxLength" : 2,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies any restrictions for posting entries that are imposed on a Customer"
          }
        }
      },
      "CustomerSweepsResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CustomerSweepsResponseBodyInner"
        }
      },
      "StandingOrdersResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "orderType" : {
            "maxLength" : 5,
            "type" : "string",
            "description" : "Identifies the type of the order. Possible values are Single, Ifdone, Revol, oco. Single order - only one order item may be input. If done order -  If one order gets executed, the other order is also executed immediately. Revolving order -  based on the condition specified, it will wait for both the deals to be executed simultaneously. OCO -If one order gets executed, then the other order gets cancelled"
          },
          "creditAccountName" : {
            "type" : "string",
            "description" : "Account name details of the creditor"
          },
          "percentageOverCurrentBalance" : {
            "maxLength" : 6,
            "type" : "string",
            "description" : "This is used to specify a percentage value, which would be applied on the accounts excess amount(Accounts cleared balance - CURRENT.AMOUNT) to arrive at "
          },
          "beneficiaryCountryId" : {
            "maxLength" : 2,
            "type" : "string",
            "description" : "Country of the beneficiary account number. For example: US, IN, EU"
          },
          "accountName" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Display name or short name of the account specified"
          },
          "paymentOrderProductName" : {
            "maxLength" : 10,
            "type" : "string",
            "description" : "Indicates the name of payment order product "
          },
          "accountWithBanks" : {
            "type" : "array",
            "description" : "Identifies the bank where the beneficiary maintains his account",
            "items" : {
              "type" : "object",
              "properties" : {
                "accountWithBank" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Identifies the bank where the beneficiary maintains his account"
                }
              }
            }
          },
          "currentFrequencyDate" : {
            "type" : "string",
            "description" : "Indicates the date based on current frequency",
            "format" : "date"
          },
          "beneficiaryOurCharges" : {
            "maxLength" : 3,
            "type" : "string",
            "description" : "Indicates the bearer of the charges. For example: BEN( All transaction charges are to be borne by the beneficiary customer.), OUR (All transaction charges are to be borne by the ordering customer.), SHA (Transaction charges on the Sender's side are to be borne by the ordering customer, transaction charges on the Receiver's side are to be borne by the beneficiary customer.)"
          },
          "frequency" : {
            "maxLength" : 50,
            "type" : "string",
            "description" : "Specifies the frequency in which the payment application(periodic payments) execute the payment instruction"
          },
          "beneficiaryBIC" : {
            "maxLength" : 11,
            "type" : "string",
            "description" : "BIC (Bank Identifier Code) of the beneficiary customer "
          },
          "currentFrequency" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Indicates the current frequency of the standing order"
          },
          "currentEndDate" : {
            "type" : "string",
            "description" : "Identifies the current end date of the standing order for the currency, amount and frequency specified. When the bank has received from the customer clear instructions which stipulate that the standing order must  only be executed during a determined period of time.  This is the date of the last execution of the standing order or when the customer has requested the bank to pay a certain amount during a determined period of time and then another amount starting from that date. In this case, this field specifies the end date of the first standing order amount.  After that date the second amount will then be executed",
            "format" : "date"
          },
          "futureNotice" : {
            "maxLength" : 10,
            "type" : "string",
            "description" : "Flag to indicate that the standing order should execute until future notice, i.e. until an end date is provided"
          },
          "standingOrderId" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "The unique standing order identifier"
          },
          "payTo" : {
            "type" : "string",
            "description" : "This field holds the reason for change in IB.STATUS field"
          },
          "currencyId" : {
            "maxLength" : 3,
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency"
          },
          "amount" : {
            "maximum" : 18,
            "type" : "number",
            "description" : "This is the payment amount"
          },
          "stoStartDate" : {
            "type" : "string",
            "description" : "STO initiation start date",
            "format" : "date"
          },
          "displayNames" : {
            "type" : "array",
            "description" : "Contains the name used for display or enrichment purposes",
            "items" : {
              "type" : "object",
              "properties" : {
                "displayName" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Contains the name used for display or enrichment purposes"
                }
              }
            }
          },
          "beneficiaryIBAN" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "International Bank Account Number (IBAN) of the beneficiary account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189"
          },
          "versionNumber" : {
            "maxLength" : 6,
            "type" : "string",
            "description" : "Current number of the record"
          },
          "counterPartyAccountId" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "The identifier of the counter party's account"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "recordStatus" : {
            "maxLength" : 6,
            "type" : "string",
            "description" : "General status of the record. Possible values: - null - authorised - IHLD - input, on hold - INAU - input, not authorised - INA2 - input, authorised, pending second authorisation - INAO - input, not authorised with blocking overrides - RNAU - reversed, not authorised - RNAO - reversed, not authorised with blocking overrides"
          },
          "bankSortCode" : {
            "type" : "string",
            "description" : "The sort code or the national clearing code of the beneficiary bank. "
          },
          "paymentMethod" : {
            "maxLength" : 4,
            "type" : "string",
            "description" : "Method chosen to make the payment"
          },
          "creditAccountId" : {
            "type" : "string",
            "description" : "Credit account identifier of the payment or transaction"
          },
          "startDate" : {
            "type" : "string",
            "description" : "Contains the date on which the transaction or payment gets initiated",
            "format" : "date"
          },
          "beneficiaryId" : {
            "maxLength" : 17,
            "type" : "string",
            "description" : "Indicates the reference of the financial institution that allows access to the beneficiary information"
          }
        }
      },
      "CustomerEmailAddressResponse1Body" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "customerShortNames" : {
            "type" : "array",
            "description" : "Denotes the Short name registered for a customer",
            "items" : {
              "$ref" : "#/components/schemas/CustomerProfileResponseBodyCustomerShortNames"
            }
          },
          "email" : {
            "maxLength" : 254,
            "minLength" : 0,
            "type" : "string",
            "description" : "Email Identifier of the Customer"
          }
        }
      },
      "CustomerGroupsResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CustomerGroupsResponseBodyInner"
        }
      },
      "CustomerGroupPurposeBodyAggregateRelationships" : {
        "type" : "object",
        "properties" : {
          "allowedAggregateRelationship" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the relations that must be considered for aggregating under a primary customer within the customer group. List of relations can be retrieved using /reference/relationships"
          }
        }
      },
      "CustomerPhoneAddressResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "customerAddressId" : {
            "maxLength" : 1000,
            "type" : "string",
            "description" : "Identifier of the customer address table"
          },
          "iddPrefixMobile" : {
            "maxLength" : 16,
            "type" : "string",
            "description" : "Identifies the international calling prefix code of the mobile"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "mobileNumber" : {
            "maxLength" : 100,
            "type" : "string",
            "description" : "Mobile number of the customer"
          },
          "customerShortNames" : {
            "type" : "array",
            "description" : "Denotes the Short name registered for a customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "customerShortName" : {
                  "maxLength" : 50,
                  "type" : "string",
                  "description" : "Indicates the short name of Customer"
                }
              }
            }
          }
        }
      },
      "CustomerRelationshipsResponseBodyRelations" : {
        "type" : "object",
        "properties" : {
          "relationship" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Details about the Customer Relationships and Party Relationships"
          },
          "relatedCustomerId" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the Customer id details of the Related Customer"
          }
        }
      },
      "CustomerExitStatusParamResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerExitStatusParamResponseBody"
          }
        },
        "description" : "CustomerExitStatusParamResponse"
      },
      "BicOwnersResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/BicOwnersResponseBody"
          }
        },
        "description" : "BicOwnersResponse"
      },
      "CustomerStaticChangeBody" : {
        "type" : "object",
        "properties" : {
          "requestTime" : {
            "maxLength" : 5,
            "minLength" : 0,
            "type" : "string",
            "description" : "This will capture the request time"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "customerId" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the customer"
          },
          "eventName" : {
            "maxLength" : 90,
            "minLength" : 0,
            "type" : "string",
            "description" : "The name that is displayed for the event"
          },
          "creationDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the creation date"
          }
        }
      },
      "CustomerGroupBodySubGroupDetails" : {
        "type" : "object",
        "properties" : {
          "groupName" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "The name that is displayed for the group"
          },
          "companyId" : {
            "maxLength" : 9,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001"
          },
          "accountOfficer" : {
            "maxLength" : 6,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of Department Account Officer"
          },
          "groupId" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "Unique ID of the group"
          },
          "partyDetails" : {
            "type" : "array",
            "description" : "Indicates the identifier for party details in which party id and party owner are defined",
            "items" : {
              "$ref" : "#/components/schemas/CustomerGroupBodyPartyDetails"
            }
          }
        }
      },
      "CustomerProfileResponseBodyCustomerNameAdditionals" : {
        "type" : "object",
        "properties" : {
          "customerNameAdditional" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Continuation/Extension to the Customer Name"
          }
        }
      },
      "CustomerExitStatusParamResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CustomerExitStatusParamResponseBodyInner"
        }
      },
      "CustomerExitStatusParamResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "exitStatusDescription" : {
            "maxLength" : 70,
            "type" : "string",
            "description" : "The field reflects the description of, respective customer exit status"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "allowRemoveExitStatus" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Specifies if the bank user will be allowed to re-open a professional relationship with the respective prospect or customer by removing its exit status"
          },
          "allowedExitReasons" : {
            "type" : "array",
            "description" : "The field indicates the reason for exiting a relation with a prospect or customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "allowedExitReason" : {
                  "maxLength" : 70,
                  "type" : "string",
                  "description" : "The field indicates the reason for exiting a relation with a prospect or customer."
                }
              }
            }
          },
          "customerExitStatusId" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "The field reflects the exit status ID of a customer or prospect from the parameterization table CUSTOMER.EXIT.STATUS"
          }
        }
      },
      "ScreenHeader" : {
        "type" : "object",
        "properties" : {
          "transactionStatus" : {
            "type" : "string",
            "description" : "The status of the transaction"
          },
          "audit" : {
            "$ref" : "#/components/schemas/ScreenHeaderAudit"
          },
          "id" : {
            "type" : "string",
            "description" : "The Identifier of the record created"
          },
          "status" : {
            "type" : "string",
            "description" : "Status of the API(success/failed)"
          },
          "uniqueIdentifier" : {
            "type" : "string",
            "description" : "The unique identifier/Message Reference of the record created"
          }
        }
      },
      "PartyRelationshipBodyPartyRelationships" : {
        "type" : "object",
        "properties" : {
          "owningPercent" : {
            "maxLength" : 6,
            "minLength" : 0,
            "type" : "string",
            "description" : "Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership"
          },
          "relatedPartyType" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the related party's customer type. It may be Customer, Person or Entity"
          },
          "relatedAs" : {
            "maxLength" : 13,
            "minLength" : 0,
            "type" : "string",
            "description" : "Entity Relationship with the partyType"
          },
          "relationPartyId" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "description" : "Related customers or persons/entities that are part of the relationship"
          },
          "relationshipCode" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Relationship identifier between the partyType and relatedPartyType"
          },
          "partyType" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Defines the application id, to which the party id belongs to. Example, CUSTOMER/PERSON.ENTITY"
          },
          "partyId" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field"
          }
        }
      },
      "CustomerCreditCardsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerCreditCardsResponseBody"
          }
        },
        "description" : "CustomerCreditCardsResponse"
      },
      "CustomerExitStatus" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerExitStatusBody"
          }
        },
        "description" : "CustomerExitStatus"
      },
      "BusinessScreenErrorResponseBody" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "The identifier of error type: Business"
          },
          "errorDetails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BusinessScreenErrorResponseBodyErrorDetails"
            }
          }
        }
      },
      "CustomerProfileResponseBodyCustomerRatings" : {
        "type" : "object",
        "properties" : {
          "customerRating" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the rating of the customer"
          }
        }
      },
      "ScreenHeaderAudit" : {
        "type" : "object",
        "properties" : {
          "T24_time" : {
            "type" : "integer",
            "description" : "Time taken to response by Transact",
            "format" : "int32",
            "x-ballerina-name" : "t24Time"
          },
          "responseParse_time" : {
            "type" : "number",
            "description" : "Time taken to parse the response by IRIS",
            "x-ballerina-name" : "responseParseTime"
          },
          "versionNumber" : {
            "type" : "string",
            "description" : "The CURR.NO. of the record"
          },
          "requestParse_time" : {
            "type" : "number",
            "description" : "Time taken to parse the request by IRIS",
            "x-ballerina-name" : "requestParseTime"
          }
        }
      },
      "PartyRelationshipResponseBody" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "partyRelationships" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PartyRelationshipBodyPartyRelationships"
            }
          },
          "partyDisplayNames" : {
            "type" : "array",
            "description" : "A description of the Party Relationship",
            "items" : {
              "$ref" : "#/components/schemas/PartyRelationshipBodyPartyDisplayNames"
            }
          }
        }
      },
      "CustomerConsentsResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CustomerConsentsResponseBodyInner"
        }
      },
      "AlertRequestsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AlertRequestsResponseBody"
          }
        },
        "description" : "AlertRequestsResponse"
      },
      "CustomerDigitalChannelsResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CustomerDigitalChannelsResponseBodyInner"
        }
      },
      "CustomerResponseBodyFaxIds" : {
        "type" : "object",
        "properties" : {
          "faxId" : {
            "maxLength" : 17,
            "minLength" : 0,
            "type" : "string",
            "description" : "The fax (facsimile) number of the customer"
          }
        }
      },
      "CustomerGroupPurposeResponse1Body" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/UnapprovedCustomerGroupPurposeResponseBodyInner"
        }
      },
      "CustomerProfileResponseBodyCustomerShortNames" : {
        "type" : "object",
        "properties" : {
          "customerShortName" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the short name of Customer"
          }
        }
      },
      "FatcaCustomerBodyOwner" : {
        "type" : "object",
        "properties" : {
          "formOwner" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the owner of the documents"
          },
          "formDetails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FatcaCustomerBodyFormDetails"
            }
          }
        }
      },
      "MessagesResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ScreenHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/MessagesResponseBody"
          }
        },
        "description" : "MessagesResponse"
      },
      "UnapprovedCustomerGroupResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "groupName" : {
            "maxLength" : 40,
            "type" : "string",
            "description" : "The name that is displayed for the group"
          },
          "groupType" : {
            "maxLength" : 25,
            "type" : "string",
            "description" : "Indicates the type of entity that identifies the group eg. Parent or Member"
          },
          "companyId" : {
            "maxLength" : 9,
            "type" : "string",
            "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "relationshipDetails" : {
            "type" : "array",
            "description" : "Indicates the details of Relationship maintained by the Customer or Entity",
            "items" : {
              "type" : "object",
              "properties" : {
                "partyType" : {
                  "maxLength" : 13,
                  "type" : "string",
                  "description" : "Defines the application id, to which the party id belongs to. Example, CUSTOMER/PERSON.ENTITY."
                },
                "partyId" : {
                  "maxLength" : 10,
                  "type" : "string",
                  "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field."
                },
                "relatedPartyType" : {
                  "maxLength" : 13,
                  "type" : "string",
                  "description" : "Indicates the related party's customer type. It may be Customer, Person or Entity."
                },
                "relatedPartyId" : {
                  "maxLength" : 10,
                  "type" : "string",
                  "description" : "Identifier of the Related Party"
                }
              }
            }
          },
          "subGroupDetails" : {
            "type" : "array",
            "description" : "Contains sub group details such as sub group id, sub group name, sub group customer etc",
            "items" : {
              "type" : "object",
              "properties" : {
                "groupId" : {
                  "maxLength" : 15,
                  "type" : "string",
                  "description" : "Unique ID of the group"
                },
                "groupName" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "The name that is displayed for the group"
                },
                "companyId" : {
                  "maxLength" : 9,
                  "type" : "string",
                  "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001."
                },
                "accountOfficer" : {
                  "maxLength" : 6,
                  "type" : "string",
                  "description" : "Identifier of Department Account Officer"
                },
                "partyDetails" : {
                  "type" : "array",
                  "description" : "Indicates the identifier for party details in which party id and party owner are defined",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "partyType" : {
                        "maxLength" : 13,
                        "type" : "string",
                        "description" : "Defines the application id, to which the party id belongs to. Example, CUSTOMER/PERSON.ENTITY."
                      },
                      "partyId" : {
                        "maxLength" : 10,
                        "type" : "string",
                        "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field."
                      }
                    }
                  }
                }
              }
            }
          },
          "groupId" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Unique ID of the group"
          },
          "description" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Contains the description of purpose of the payment"
          },
          "groupPurposeId" : {
            "maxLength" : 15,
            "type" : "string",
            "description" : "Identifier of customer group purpose"
          }
        }
      },
      "CustomerContactsResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CustomerContactsResponseBodyInner"
        }
      },
      "SystemQueryErrorResponseBody" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The identifier of the error message"
          },
          "message" : {
            "type" : "string",
            "description" : "The actual Transact error message caused by server"
          },
          "type" : {
            "type" : "string",
            "description" : "The identifier of error type: System"
          }
        }
      },
      "CustomerProfileResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ScreenHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerProfileResponseBody"
          }
        },
        "description" : "CustomerProfileResponse"
      },
      "ProspectCustomersResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/ProspectCustomersResponseBodyInner"
        }
      },
      "CustomerGroupResponseBody" : {
        "type" : "object",
        "properties" : {
          "primaryPartyDetails" : {
            "type" : "array",
            "description" : "Contains primary pary details such as primary party id and primary party type",
            "items" : {
              "$ref" : "#/components/schemas/CustomerGroupBodyPrimaryPartyDetails"
            }
          },
          "groupName" : {
            "maxLength" : 40,
            "minLength" : 0,
            "type" : "string",
            "description" : "The name that is displayed for the group"
          },
          "groupType" : {
            "maxLength" : 25,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the type of entity that identifies the group eg. Parent or Member"
          },
          "companyId" : {
            "maxLength" : 9,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001"
          },
          "accountOfficer" : {
            "maxLength" : 6,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of Department Account Officer"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "relationshipDetails" : {
            "type" : "array",
            "description" : "Indicates the details of Relationship maintained by the Customer or Entity",
            "items" : {
              "$ref" : "#/components/schemas/CustomerGroupBodyRelationshipDetails"
            }
          },
          "subGroupDetails" : {
            "type" : "array",
            "description" : "Contains sub group details such as sub group id, sub group name, sub group customer etc",
            "items" : {
              "$ref" : "#/components/schemas/CustomerGroupBodySubGroupDetails"
            }
          },
          "liabilityNumber" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the Liability Customer to the credit limit"
          },
          "closureDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "The date when the Security Account is to be closed"
          },
          "description" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the description of purpose of the payment"
          },
          "groupPurposeId" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of customer group purpose"
          }
        }
      },
      "OverdueSettlementsResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "quantity" : {
            "maxLength" : 19,
            "type" : "string",
            "description" : "The nominal quantity"
          },
          "instrumentId" : {
            "maxLength" : 12,
            "type" : "string",
            "description" : "The identifier of the instrument"
          },
          "accountCurrency" : {
            "maxLength" : 3,
            "type" : "string",
            "description" : "Currency of the account. For example: USD, GBP"
          },
          "tradeDate" : {
            "type" : "string",
            "description" : "Standard date field which records trade date of the account",
            "format" : "date"
          },
          "valueDate" : {
            "type" : "string",
            "description" : "Indicates the value date on which the underlying accounting entry is to be given value (for interest purposes)",
            "format" : "date"
          },
          "broker" : {
            "type" : "array",
            "description" : "Specifies the counterparty with whom the trade is to be effected",
            "items" : {
              "type" : "object",
              "properties" : {
                "brokerId" : {
                  "maxLength" : 10,
                  "type" : "string",
                  "description" : "The identifier of the broker"
                },
                "brokerName" : {
                  "maxLength" : 10,
                  "type" : "string",
                  "description" : "The name that is displayed for the broker"
                },
                "nostro" : {
                  "type" : "string",
                  "description" : "Nostro account id"
                },
                "nostroCurrency" : {
                  "type" : "string",
                  "description" : "Currency of the nostro account"
                },
                "brokerOutstandingAmount" : {
                  "maximum" : 19,
                  "type" : "number",
                  "description" : "The amount outstanding for the broker"
                },
                "brokerOutstandingQuantity" : {
                  "maxLength" : 19,
                  "type" : "string",
                  "description" : "The quantity of the instrument outstanding for the broker"
                }
              }
            }
          },
          "tradeCurrency" : {
            "maxLength" : 3,
            "type" : "string",
            "description" : "The trade currency is the settlement currency for the trade"
          },
          "transactionId" : {
            "maxLength" : 97,
            "type" : "string",
            "description" : "Unique transaction identifier for retrieving the details of the transaction. For example: FT0102030333 etc"
          },
          "instrumentName" : {
            "type" : "string",
            "description" : "The name that is displayed for the instrument, taken from the security master"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "portfolioId" : {
            "maxLength" : 18,
            "type" : "string",
            "description" : "Id of the portfolio or security account"
          },
          "customerOutstandingQuantity" : {
            "maxLength" : 19,
            "type" : "string",
            "description" : "The quantity outstanding from/to the customer"
          },
          "depository" : {
            "maxLength" : 10,
            "type" : "string",
            "description" : "Person designated as depository by the company in or pursuant to this Indenture, and, unless otherwise provided with respect to any security, any successor to such person"
          },
          "depositoryName" : {
            "type" : "string",
            "description" : "The name that is displayed for the depository"
          },
          "portfolioName" : {
            "maxLength" : 10,
            "type" : "string",
            "description" : "The name that is displayed for the portfolio"
          },
          "customerOutstandingAmount" : {
            "maximum" : 19,
            "type" : "number",
            "description" : "The amount outstanding from/to the customer"
          }
        }
      },
      "BusinessScreenErrorResponseBodyErrorDetails" : {
        "type" : "object",
        "properties" : {
          "fieldName" : {
            "type" : "string",
            "description" : "The name of the field"
          },
          "code" : {
            "type" : "string",
            "description" : "The identifier of the error message"
          },
          "message" : {
            "type" : "string",
            "description" : "The actual Transact error message for bad requests"
          }
        }
      },
      "CustomerResponseBodyOfficePhoneNumbers" : {
        "type" : "object",
        "properties" : {
          "officePhoneNumber" : {
            "maxLength" : 17,
            "minLength" : 0,
            "type" : "string",
            "description" : "The office phone number of the customer"
          }
        }
      },
      "CustomerPrintAddress" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerPrintAddressBody"
          }
        },
        "description" : "CustomerPrintAddress"
      },
      "FatcaCustomerBodyFormDetails" : {
        "type" : "object",
        "properties" : {
          "formId" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the form or sheet Id"
          },
          "expiryDate" : {
            "type" : "string",
            "description" : "This indicates the  date  on which the offer or privilege terminates for the event",
            "format" : "date"
          },
          "formType" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the type of the document that are expected from the customer"
          },
          "cutOffDate" : {
            "type" : "string",
            "description" : "Specifies the Cutoff date for document submission. Identifies the end date before which the document has to be submitted. ",
            "format" : "date"
          },
          "requestDate" : {
            "type" : "string",
            "description" : "Date on which the client's request to be classified as professional has been received",
            "format" : "date"
          },
          "receivedDate" : {
            "type" : "string",
            "description" : "Identifies the date on which the document was received",
            "format" : "date"
          }
        }
      },
      "ProspectCustomerBodyProspectLegalDetails" : {
        "type" : "object",
        "properties" : {
          "legalId" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "description" : "Unique reference number of the legal documents submitted as identification proof"
          },
          "legalDocumentName" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Name of the legal documents such as passport, driving licence etc., provided as identification proof"
          }
        }
      },
      "PartyBasicDetailsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/PartyBasicDetailsResponseBody"
          }
        },
        "description" : "PartyBasicDetailsResponse"
      },
      "CustomerGroupBodyPartyDetails" : {
        "type" : "object",
        "properties" : {
          "partyType" : {
            "maxLength" : 13,
            "minLength" : 0,
            "type" : "string",
            "description" : "Defines the application id, to which the party id belongs to. Example, CUSTOMER/PERSON.ENTITY"
          },
          "partyId" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field"
          }
        }
      },
      "ProspectCustomersResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/ProspectCustomersResponseBody"
          }
        },
        "description" : "ProspectCustomersResponse"
      },
      "CustomerIdResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "customerId" : {
            "type" : "string",
            "description" : "Identifier of the customer"
          }
        }
      },
      "CustomerDeliveryOptionsResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CustomerDeliveryOptionsResponseBodyInner"
        }
      },
      "CustomerGroupPurposeResponse1" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerGroupPurposeResponse1Body"
          }
        },
        "description" : "CustomerGroupPurposeResponse1"
      },
      "MessagesBodyMessages" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "maxLength" : 150,
            "minLength" : 0,
            "type" : "string",
            "description" : "The actual Transact error message "
          }
        }
      },
      "CustomerResponseBodyDisplayNames" : {
        "type" : "object",
        "properties" : {
          "displayName" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the name used for display or enrichment purposes"
          }
        }
      },
      "SystemScreenErrorResponseBodyErrorDetails" : {
        "type" : "object",
        "properties" : {
          "fieldName" : {
            "type" : "string",
            "description" : "The name of the field"
          },
          "code" : {
            "type" : "string",
            "description" : "The identifier of the error message"
          },
          "message" : {
            "type" : "string",
            "description" : "The actual Transact error message caused by server"
          }
        }
      },
      "PartyRelationshipBody" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "partyRelationships" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PartyRelationshipBodyPartyRelationships"
            }
          },
          "partyDisplayNames" : {
            "type" : "array",
            "description" : "A description of the Party Relationship",
            "items" : {
              "$ref" : "#/components/schemas/PartyRelationshipBodyPartyDisplayNames"
            }
          }
        }
      },
      "CustomerResponseBodyLegalDetails" : {
        "type" : "object",
        "properties" : {
          "legalIssueDate" : {
            "type" : "string",
            "description" : "Date of Issue of the legal document",
            "format" : "date"
          },
          "legalExpiredDate" : {
            "type" : "string",
            "description" : "Expiry date of the legal document submitted as proof",
            "format" : "date"
          },
          "legalId" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Unique reference number of the legal documents submitted as identification proof"
          },
          "legalDocumentName" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Name of the legal documents such as passport, driving licence etc., provided as identification proof"
          },
          "legalIssueAuthorisedDate" : {
            "maxLength" : 75,
            "minLength" : 0,
            "type" : "string",
            "description" : "Authority who issued the legal document"
          },
          "legalHolderName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Name of the account holder in the Legal Document"
          },
          "legalIssueCountry" : {
            "maxLength" : 2,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the country where the authorized legal document is issued"
          }
        }
      },
      "FatcaCustomerResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ScreenHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/FatcaCustomerResponseBody"
          }
        },
        "description" : "FatcaCustomerResponse"
      },
      "PartyBasicDetailsResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "lastName" : {
            "maxLength" : 50,
            "type" : "string",
            "description" : "The last name of an individual customer"
          },
          "subDepartmentId" : {
            "maxLength" : 70,
            "type" : "string",
            "description" : "Contains a sub-division identifier of a large organisation or building"
          },
          "streets" : {
            "type" : "array",
            "description" : "Contains the street name of the customer or the property",
            "items" : {
              "type" : "object",
              "properties" : {
                "street" : {
                  "maxLength" : 70,
                  "type" : "string",
                  "description" : "Contains the street name of the customer or the property"
                }
              }
            }
          },
          "departmentId" : {
            "maxLength" : 70,
            "type" : "string",
            "description" : "Department identifier"
          },
          "emailId" : {
            "maxLength" : 50,
            "type" : "string",
            "description" : "Contains the email identifier of the customer"
          },
          "smsNumber" : {
            "maxLength" : 17,
            "type" : "string",
            "description" : "The mobile SMS number of the customer"
          },
          "title" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Main menu title or header which the user wants to display on the screen when requesting the display of this main menu. This field can be expanded to allow the user to enter the description of the main menu in various languages"
          },
          "residenceType" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Residence type of the customer like Farmhouse, Independent house, Residential Apartment, Serviced Apartments"
          },
          "townCountries" : {
            "type" : "array",
            "description" : "The town and country associated with the address",
            "items" : {
              "type" : "object",
              "properties" : {
                "townCountry" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "The town and country associated with the address"
                }
              }
            }
          },
          "birthCountry" : {
            "maxLength" : 2,
            "type" : "string",
            "description" : "Indicates the customer's country of birth"
          },
          "floorNumber" : {
            "maxLength" : 70,
            "type" : "string",
            "description" : "Contains the floor number of the customer address"
          },
          "buildingNumber" : {
            "maxLength" : 16,
            "type" : "string",
            "description" : "Identifies the building number where customer resides"
          },
          "state" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Represents a subdivision of a country such as state, region, country"
          },
          "unstructuredAddress" : {
            "maxLength" : 100,
            "type" : "string",
            "description" : "Address output displayed as configured in the address output format in Transact"
          },
          "addressCity" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "The town and/or city component of the base address of a customer"
          },
          "birthProvince" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Indicates the customer birth province"
          },
          "sectorId" : {
            "maxLength" : 4,
            "type" : "string",
            "description" : "An institution-defined identifier of the type of customer"
          },
          "locationName" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Identifies specific location name with in the country or town"
          },
          "addressCountryId" : {
            "maxLength" : 2,
            "type" : "string",
            "description" : "Identifies the country of customer address"
          },
          "nationalityId" : {
            "maxLength" : 2,
            "type" : "string",
            "description" : "The identifier of the nationality of a customer"
          },
          "languageId" : {
            "maxLength" : 2,
            "type" : "string",
            "description" : "Represents the language code of the underlying Entity/Company/Branch"
          },
          "dateOfBirth" : {
            "maxLength" : 11,
            "type" : "string",
            "description" : "The date of birth of an individual customer"
          },
          "birthCity" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Indicates the customer's city of birth"
          },
          "addressVerifier" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Contains the party or service which was used for address confirmation purposes"
          },
          "addressPurpose" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Identifies the purpose or usage of the address. Allowed values are CTC (Communication to Customer), CTICOP(Communication to In Care Of Party) or CTOP(Communication to Other Party)"
          },
          "customerName" : {
            "maxLength" : 100,
            "type" : "string",
            "description" : "Indicates the name of the customer. Originator is the party who requests the payment cancellation"
          },
          "residenceId" : {
            "maxLength" : 2,
            "type" : "string",
            "description" : "The identifier of the country of residence of a customer"
          },
          "target" : {
            "maxLength" : 4,
            "type" : "string",
            "description" : "Specifies how the Customer is considered by the bank and how he fits in with the Account Officer's overall marketing strategy"
          },
          "buildingName" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Identifies the name of the building where customer resides"
          },
          "customerShortName" : {
            "maxLength" : 50,
            "type" : "string",
            "description" : "Indicates the short name of Customer"
          },
          "accountOfficer" : {
            "maxLength" : 4,
            "type" : "string",
            "description" : "Identifier of Department Account Officer"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "postCodes" : {
            "type" : "array",
            "description" : "Identifies the address postal code for the customer or the property",
            "items" : {
              "type" : "object",
              "properties" : {
                "postCode" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Identifies the address postal code for the customer or the property"
                }
              }
            }
          },
          "birthIncorpDate" : {
            "maxLength" : 11,
            "type" : "string",
            "description" : "Date on which the entity is incorporated"
          },
          "postBoxNumber" : {
            "maxLength" : 16,
            "type" : "string",
            "description" : "Post Office Box (POB) number that relates to financial institution"
          },
          "middleName" : {
            "maxLength" : 50,
            "type" : "string",
            "description" : "Indicates the middle name of the customer or prospect"
          },
          "nameAliases" : {
            "type" : "array",
            "description" : "Contains the alias name or additional surname of the customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "nameAlias" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Contains the alias name or additional surname of the customer"
                }
              }
            }
          },
          "salutation" : {
            "maxLength" : 70,
            "type" : "string",
            "description" : "Contains the greeting to be used for communications with the customer"
          },
          "apartmentNumber" : {
            "maxLength" : 70,
            "type" : "string",
            "description" : "Identifies the apartment number of the customer address"
          }
        }
      },
      "UnapprovedCustomerGroupPurposeResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/UnapprovedCustomerGroupPurposeResponseBody"
          }
        },
        "description" : "UnapprovedCustomerGroupPurposeResponse"
      },
      "CustomerRelationshipResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ScreenHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerRelationshipResponseBody"
          }
        },
        "description" : "CustomerRelationshipResponse"
      },
      "DirectDebitsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/DirectDebitsResponseBody"
          }
        },
        "description" : "DirectDebitsResponse"
      },
      "CustomerResponseBodyAddressCities" : {
        "type" : "object",
        "properties" : {
          "addressCity" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "The town and/or city component of the base address of a customer"
          }
        }
      },
      "CustomerChargeResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ScreenHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerChargeResponseBody"
          }
        },
        "description" : "CustomerChargeResponse"
      },
      "CustomerSwiftAddressResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerSwiftAddressResponseBody"
          }
        },
        "description" : "CustomerSwiftAddressResponse"
      },
      "QueryErrorResponseBody" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The identifier of the error message"
          },
          "message" : {
            "type" : "string",
            "description" : "The actual Transact error message "
          },
          "type" : {
            "type" : "string",
            "description" : "The identifier of error type: "
          }
        }
      },
      "CustomerRelationshipResponse1" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerRelationshipResponse1Body"
          }
        },
        "description" : "CustomerRelationshipResponse1"
      },
      "ProspectCustomerResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ScreenHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/ProspectCustomerResponseBody"
          }
        },
        "description" : "ProspectCustomerResponse"
      },
      "CustomerResponseBodyCountries" : {
        "type" : "object",
        "properties" : {
          "country" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the country of the customer or a property or organization"
          }
        }
      },
      "DeliveryPreferenceBodyMessageGroup" : {
        "type" : "object",
        "properties" : {
          "messageGroupId" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the starting message id of the conversation"
          },
          "messageGroupDetail" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeliveryPreferenceBodyMessageGroupDetail"
            }
          }
        }
      },
      "CustomerEmailAddressBody" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "customerShortNames" : {
            "type" : "array",
            "description" : "Denotes the Short name registered for a customer",
            "items" : {
              "$ref" : "#/components/schemas/CustomerProfileResponseBodyCustomerShortNames"
            }
          },
          "email" : {
            "maxLength" : 254,
            "minLength" : 0,
            "type" : "string",
            "description" : "Email Identifier of the Customer"
          }
        }
      },
      "CustomerExitStatusParamBodyAllowedExitReasons" : {
        "type" : "object",
        "properties" : {
          "allowedExitReason" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "The field indicates the reason for exiting a relation with a prospect or customer"
          }
        }
      },
      "CustomerRelationshipBody" : {
        "type" : "object",
        "properties" : {
          "originatingRelation" : {
            "type" : "array",
            "description" : "Details about the Customer Relationships and Party Relationships",
            "items" : {
              "$ref" : "#/components/schemas/CustomerRelationshipBodyOriginatingRelation"
            }
          },
          "customerRelationGroupId" : {
            "maximum" : 15,
            "minimum" : 0,
            "type" : "number",
            "description" : "Identifies the key to Customer Relationship Group to form a relation"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "purposeOfRelationship" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "The purpose of the relationship between the Originating Party and the Related Party. Valid options - TAX, LIMIT, ADVICES, OTHERS or can be left blank"
          },
          "customerRelationGroupName" : {
            "maxLength" : 40,
            "minLength" : 0,
            "type" : "string",
            "description" : "Name of a Customer Relationship Group if applicable to the relationship"
          }
        }
      },
      "CustomerLegalDocumentsResponseBodyLegalDocuments" : {
        "type" : "object",
        "properties" : {
          "legalIssueDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Date of Issue of the legal document"
          },
          "legalExpiredDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Expiry date of the legal document submitted as proof"
          },
          "legalId" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Unique reference number of the legal documents submitted as identification proof"
          },
          "legalDocumentName" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Name of the legal documents such as passport, driving licence etc., provided as identification proof"
          },
          "legalIssueAuthorisedDate" : {
            "maxLength" : 75,
            "minLength" : 0,
            "type" : "string",
            "description" : "Authority who issued the legal document"
          },
          "legalHolderName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Name of the account holder in the Legal Document"
          }
        }
      },
      "PartyBasicDetailsResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/PartyBasicDetailsResponseBodyInner"
        }
      },
      "CustomerAddressOutputResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "unstructuredGroup" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "unstructuredAddress" : {
                  "type" : "string",
                  "description" : "Address output displayed as configured in the address output format in Transact"
                }
              }
            }
          },
          "structuredGroup" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "structuredAddress" : {
                  "type" : "string",
                  "description" : "A list with address related details from Transact in structured format"
                }
              }
            }
          },
          "customerId" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Identifier of the customer"
          }
        }
      },
      "FatcaCustomerBodyCitizenships" : {
        "type" : "object",
        "properties" : {
          "citizenship" : {
            "maxLength" : 9,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the citizenship details of Customer"
          }
        }
      },
      "CustomerRequestsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerRequestsResponseBody"
          }
        },
        "description" : "CustomerRequestsResponse"
      },
      "AlertRequestsResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "messageGroupId" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Contains the starting message id of the conversation"
          },
          "eventId" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Event identifier"
          },
          "accountId" : {
            "type" : "string",
            "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "displayName" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Contains the name used for display or enrichment purposes"
          },
          "fields" : {
            "type" : "array",
            "description" : "Input is the valid field name for the metrics evaluation of alerts",
            "items" : {
              "type" : "object",
              "properties" : {
                "fieldDisplayName" : {
                  "maxLength" : 50,
                  "type" : "string",
                  "description" : "Contains the name of the display for enrichment purposes"
                },
                "operand" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "This field along with fieldName and value, defines the conditions for the alert to be triggered."
                },
                "value" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "The value of the field on which the Alert criteria is based"
                }
              }
            }
          },
          "contractReference" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Contains the contract reference"
          },
          "alertRequestId" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "The unique identifier of the alert request"
          },
          "versionNumber" : {
            "maxLength" : 4,
            "type" : "string",
            "description" : "Current number of the record"
          },
          "productDescription" : {
            "type" : "string",
            "description" : "Indicates the description of the Product"
          }
        }
      },
      "ProspectCustomerBody" : {
        "type" : "object",
        "properties" : {
          "subDepartmentId" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains a sub-division identifier of a large organisation or building"
          },
          "addresses" : {
            "type" : "array",
            "description" : "Contains the communication address of the customer or full address of the property",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyAddresses"
            }
          },
          "locationName" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies specific location name with in the country or town"
          },
          "streets" : {
            "type" : "array",
            "description" : "Contains the street name of the customer or the property",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyStreets"
            }
          },
          "districtName" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Stores the district name of the  Beneficiary Customer"
          },
          "gender" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Gender of the Individual Customer"
          },
          "departmentId" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Department identifier"
          },
          "customerNames" : {
            "type" : "array",
            "description" : "Indicates the name of the customer. Originator is the party who requests the payment cancellation",
            "items" : {
              "$ref" : "#/components/schemas/ProspectCustomerBodyCustomerNames"
            }
          },
          "countries" : {
            "type" : "array",
            "description" : "Identifies the country of the customer or a property or organization",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyCountries"
            }
          },
          "registeredCountry" : {
            "maxLength" : 2,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identify which country an entity has been registered"
          },
          "phoneNumbers" : {
            "type" : "array",
            "description" : "The phone number of the customer or prospect",
            "items" : {
              "$ref" : "#/components/schemas/ProspectCustomerBodyPhoneNumbers"
            }
          },
          "personEntity" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies if the record is for a real person or a legal entity. Allowed Options: Person or Entity"
          },
          "emails" : {
            "type" : "array",
            "description" : "Email Identifier of the Customer",
            "items" : {
              "$ref" : "#/components/schemas/ProspectCustomerBodyEmails"
            }
          },
          "socialNetworkIds" : {
            "type" : "array",
            "description" : "Social Network Identification of the person/entity",
            "items" : {
              "$ref" : "#/components/schemas/ProspectCustomerBodySocialNetworkIds"
            }
          },
          "prospectLegalDetails" : {
            "type" : "array",
            "description" : "Identifies the legal entity details of prospect customer",
            "items" : {
              "$ref" : "#/components/schemas/ProspectCustomerBodyProspectLegalDetails"
            }
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "postCodes" : {
            "type" : "array",
            "description" : "Identifies the address postal code for the customer or the property",
            "items" : {
              "$ref" : "#/components/schemas/ProspectCustomerBodyPostCodes"
            }
          },
          "birthIncorpDate" : {
            "type" : "string",
            "description" : "Date on which the entity is incorporated",
            "format" : "date"
          },
          "townCountries" : {
            "type" : "array",
            "description" : "The town and country associated with the address",
            "items" : {
              "$ref" : "#/components/schemas/ProspectCustomerBodyTownCountries"
            }
          },
          "floorNumber" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the floor number of the customer address"
          }
        }
      },
      "CustomerLegalDocumentsResponseBody" : {
        "type" : "object",
        "properties" : {
          "legalDocuments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomerLegalDocumentsResponseBodyLegalDocuments"
            }
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "OverdueSettlementsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/OverdueSettlementsResponseBody"
          }
        },
        "description" : "OverdueSettlementsResponse"
      },
      "FatcaCustomerBodyJointOwner" : {
        "type" : "object",
        "properties" : {
          "firstName" : {
            "maxLength" : 65,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies customer's first name"
          },
          "holderName" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the Name of the  joint, substantial or beneficial owner"
          },
          "role" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the Role of the Customer"
          },
          "ownershipParticipation" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies the ownership in percentage terms for the account mentioned"
          },
          "surname" : {
            "maxLength" : 65,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the Surname of the Customers"
          },
          "holderTinCountry" : {
            "maxLength" : 9,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the Tax Country of the joint, substantial or beneficial owner"
          },
          "legalEntityType" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies whether the legal entity is individual or corporate"
          },
          "customerId" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the customer"
          },
          "holderCountry" : {
            "maxLength" : 9,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the Country of the joint, substantial or beneficial owner"
          },
          "holderReference" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies the Unique Identifier for joint, substantial or beneficial owner. Uniquely identifies the owner of the client, must be defined in format <id of the Customer> - <Sequence number>"
          }
        }
      },
      "OtherBanksToConnectToResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/OtherBanksToConnectToResponseBody"
          }
        },
        "description" : "OtherBanksToConnectToResponse"
      },
      "CustomerProfileResponseBodyNameAliases" : {
        "type" : "object",
        "properties" : {
          "nameAlias" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the alias name or additional surname of the customer"
          }
        }
      },
      "CustomerCharge" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerChargeBody"
          }
        },
        "description" : "CustomerCharge"
      },
      "BicOwnersResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/BicOwnersResponseBodyInner"
        }
      },
      "CustomerRelationshipsResponseBody" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "relations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomerRelationshipsResponseBodyRelations"
            }
          }
        }
      },
      "QueryErrorResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ErrorHeader"
          },
          "error" : {
            "$ref" : "#/components/schemas/QueryErrorResponseBody"
          }
        },
        "description" : "QueryErrorResponse"
      },
      "CustomerPersonalDetailsResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "isSecureMessage" : {
            "type" : "boolean",
            "description" : "If 'Yes', then the customer will receive a SECURE message"
          },
          "isMobileBankingService" : {
            "type" : "boolean",
            "description" : "Indicates whether is Customer is subscribed to the mobile banking service or not"
          },
          "assetAmount" : {
            "type" : "number",
            "description" : "The asset amount"
          },
          "customerLiability" : {
            "type" : "string",
            "description" : "Indicates the customer consolidation number for credit grouping purposes, within the same branch/country"
          },
          "isInternetBankingService" : {
            "type" : "boolean",
            "description" : "Indicates whether is Customer is subscribed to the internet banking service or not"
          },
          "customerVisitCount" : {
            "type" : "number",
            "description" : "Count of the Number of visits to the bank"
          },
          "residenceDetails" : {
            "type" : "array",
            "description" : "Indicates the residence details of Customer or entity like type, status, value",
            "items" : {
              "type" : "object",
              "properties" : {
                "residenceStatus" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Residence Status of the Customer for CRM purpose like Owner, Tenant, Householder, Nester etc."
                },
                "residenceType" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Residence type of the customer like Farmhouse, Independent house, Residential Apartment, Serviced Apartments"
                },
                "residenceValue" : {
                  "maximum" : 19,
                  "type" : "number",
                  "description" : "Market Value of the customer's residence"
                },
                "residenceMortgageValue" : {
                  "maximum" : 19,
                  "type" : "number",
                  "description" : "Mortgage value of the residence property of the customer"
                },
                "residenceSince" : {
                  "type" : "string",
                  "description" : "The date since the user has obtained the residence.",
                  "format" : "date"
                }
              }
            }
          },
          "customerName" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Indicates the name of the customer. Originator is the party who requests the payment cancellation"
          },
          "assetCurrency" : {
            "type" : "string",
            "description" : "Currency of the asset"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "communicationDevice" : {
            "type" : "array",
            "description" : "Indicates the communication details of the customer like PhoneNumber, email",
            "items" : {
              "type" : "object",
              "properties" : {
                "communicationType" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Communication type to the customer, as defined by the institution. E.g. Proposal, Alert, Campaign, New Product Update, Robinson List, Statement."
                },
                "preferredChannel" : {
                  "maxLength" : 20,
                  "type" : "string",
                  "description" : "Preferred method of contact to the customer"
                }
              }
            }
          },
          "customerSegment" : {
            "maxLength" : 6,
            "type" : "string",
            "description" : "Segment of the customer"
          },
          "customerId" : {
            "maximum" : 10,
            "type" : "number",
            "description" : "Identifier of the customer"
          },
          "customerRecentVisitDate" : {
            "type" : "string",
            "description" : "Recently visited date of the customer to the bank",
            "format" : "date"
          },
          "employDetails" : {
            "type" : "array",
            "description" : "Indicates the employment details of Customer like Status, title, occupation",
            "items" : {
              "type" : "object",
              "properties" : {
                "employStatus" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Employment status of the customer"
                },
                "occupation" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Occupation of the customer"
                },
                "employJobTitle" : {
                  "maxLength" : 10,
                  "type" : "string",
                  "description" : "Employment Job Title of the Customer"
                },
                "employerName" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Name of the customer's employer"
                },
                "employStartDate" : {
                  "type" : "string",
                  "description" : "Starting date of the customer's employment",
                  "format" : "date"
                },
                "salaryCurrency" : {
                  "maxLength" : 3,
                  "type" : "string",
                  "description" : "Currency in which the Salary information of the customer is maintained"
                },
                "salaryAmount" : {
                  "maximum" : 19,
                  "type" : "number",
                  "description" : "Gross Salary details of the customer"
                },
                "employerBusiness" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "The business of customer's employer involved."
                },
                "annualBonus" : {
                  "maximum" : 19,
                  "type" : "number",
                  "description" : "Indicates the Annual bonus received by customer"
                },
                "salaryFrequency" : {
                  "maxLength" : 17,
                  "type" : "string",
                  "description" : "Indicates the payment frequency of salary."
                },
                "netMonthlyIncome" : {
                  "maxLength" : 19,
                  "type" : "string",
                  "description" : "Net income earned by customer each month."
                },
                "netMonthlyExpense" : {
                  "maxLength" : 19,
                  "type" : "string",
                  "description" : "Net expenses of customer each month."
                },
                "Addresses" : {
                  "type" : "array",
                  "description" : "Contains the communication address of the customer or full address of the property",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "employerAddress" : {
                        "maxLength" : 35,
                        "type" : "string",
                        "description" : "The address of the customer's employer."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "UnapprovedCustomerGroupPurposeResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/UnapprovedCustomerGroupPurposeResponseBodyInner"
        }
      },
      "FatcaCustomerBody" : {
        "type" : "object",
        "properties" : {
          "tinDetails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FatcaCustomerBodyTinDetails"
            }
          },
          "Owner" : {
            "type" : "array",
            "description" : "User who defines the Campaign",
            "items" : {
              "$ref" : "#/components/schemas/FatcaCustomerBodyOwner"
            },
            "x-ballerina-name" : "owner"
          },
          "currentStatusExpiry" : {
            "type" : "string",
            "description" : "Specifies the date on which the current status got expired",
            "format" : "date"
          },
          "changeReason" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies the reason (if any) for any status change"
          },
          "isPoa" : {
            "maxLength" : 5,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies whether there is power of attorney(POA) to a person with US Address. Possible values YES/NO"
          },
          "isPlaceOfBirthUs" : {
            "maxLength" : 5,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the citizenship details of customer. If blank it defaults to US"
          },
          "socialSecurityNumber" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the Social Security number of the customer"
          },
          "fatcaClientType" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the type of client.E.g Individual, Entity etc"
          },
          "residenceId" : {
            "maxLength" : 9,
            "minLength" : 0,
            "type" : "string",
            "description" : "The identifier of the country of residence of a customer"
          },
          "statusChangeDate" : {
            "type" : "string",
            "description" : "Identifies the effective date of change of status",
            "format" : "date"
          },
          "fatcaStatus" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies the Fatca status or Account Classification of the client. "
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "standingInstructionOnUsAccount" : {
            "maxLength" : 5,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies whether there is any standing instruction to an account in US. Possible values YES/NO"
          },
          "phoneNumber" : {
            "maxLength" : 5,
            "minLength" : 0,
            "type" : "string",
            "description" : "The phone number of the customer or prospect"
          },
          "entityStatus" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies the self-classification received from entities "
          },
          "citizenships" : {
            "type" : "array",
            "description" : "Identifies the citizenship details of Customer",
            "items" : {
              "$ref" : "#/components/schemas/FatcaCustomerBodyCitizenships"
            }
          },
          "giin" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies the Global Intermediary Identification Numbers of financial institutions"
          },
          "domicile" : {
            "maxLength" : 9,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates country of domicile"
          },
          "accountInstructionfromUs" : {
            "maxLength" : 5,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies if account has any instructions from a US address. Possible values YES or NO"
          },
          "JointOwner" : {
            "type" : "array",
            "description" : "Indicates if customer is a joint owner",
            "items" : {
              "$ref" : "#/components/schemas/FatcaCustomerBodyJointOwner"
            },
            "x-ballerina-name" : "jointOwner"
          },
          "greencardDetails" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the greencard details of the client"
          },
          "isKycChecked" : {
            "maxLength" : 5,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies if the KYC check has been done or not. Possible values YES or NO"
          },
          "isDormantAccount" : {
            "maxLength" : 5,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies whether there is no contact that could be established with the client. Possible values YES or NO"
          },
          "statusNarrative" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies any free format narrative related to FATCA status"
          }
        }
      },
      "CustomerGroupsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerGroupsResponseBody"
          }
        },
        "description" : "CustomerGroupsResponse"
      },
      "CustomerRelationshipsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ScreenHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerRelationshipsResponseBody"
          }
        },
        "description" : "CustomerRelationshipsResponse"
      },
      "CustomerGroupPurpose" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerGroupPurposeBody"
          }
        },
        "description" : "CustomerGroupPurpose"
      },
      "DeliveryPreferenceResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ScreenHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/DeliveryPreferenceResponseBody"
          }
        },
        "description" : "DeliveryPreferenceResponse"
      },
      "CustomerKYCDetailsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerKYCDetailsResponseBody"
          }
        },
        "description" : "CustomerKYCDetailsResponse"
      },
      "CustomerEmailAddressResponse1" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ScreenHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerEmailAddressResponse1Body"
          }
        },
        "description" : "CustomerEmailAddressResponse1"
      },
      "CustomerCreditCardsResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "expiryDate" : {
            "type" : "string",
            "description" : "This indicates the  date  on which the offer or privilege terminates for the event",
            "format" : "date"
          },
          "accountId" : {
            "maxLength" : 12,
            "type" : "string",
            "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "accountName" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Display name or short name of the account specified"
          },
          "onlineActualBalance" : {
            "type" : "number",
            "description" : "Real-time balance including all authorised transactions posted against the account, excluding any entries with a future processing date"
          },
          "cardType" : {
            "type" : "string",
            "description" : "The type of the card, e.g. Visa, Mastercard, etc"
          },
          "limit" : {
            "type" : "string",
            "description" : "Limit details for the customer"
          },
          "currencyId" : {
            "maxLength" : 3,
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency"
          },
          "issueDate" : {
            "type" : "string",
            "description" : "The date the item was issued",
            "format" : "date"
          },
          "cardNumber" : {
            "maxLength" : 25,
            "type" : "string",
            "description" : "Cards issued are defined with an identifier consisting of three elements. The card type, a full stop and the card number. The card number may be any alphanumeric construction, commonly a 16 numeric number is used. VISA.5332870296579001. The id must be in the form of:  CCCC.AAAAAAAAAAAAAAAA  Where CCCC is the card type and AAAAAAAAAAAAAAAA is a unique identifier.  Examples:   VISA.1234567887654321   GC.1111222233334444   AB21.1111111122222222"
          }
        }
      },
      "BusinessScreenErrorResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ErrorHeader"
          },
          "error" : {
            "$ref" : "#/components/schemas/BusinessScreenErrorResponseBody"
          }
        },
        "description" : "BusinessScreenErrorResponse"
      },
      "CustomerGroupPurposeBodyGroupRelationships" : {
        "type" : "object",
        "properties" : {
          "allowedGroupRelationship" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the list of allowed group relations in a customer group using this purpose and group type. List of relations can be retrieved using /reference/relationships"
          }
        }
      },
      "UnapprovedCustomerGroupPurposeResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "allowGroupRelationship" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Indicates whether group relations have to be defaulted in customer group from party relationship. Allowed values are YES, NO or Blank"
          },
          "groupTypes" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "groupType" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Indicates the type of entity that identifies the group eg. Parent or Member"
                },
                "relationships" : {
                  "type" : "array",
                  "description" : "Details about the Customer Relationships and Party Relationships",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "allowedRelationship" : {
                        "maxLength" : 3,
                        "type" : "string",
                        "description" : "Indicates the list of allowed real relations in a customer group using this purpose and group type. List of relations can be retrieved using /reference/relationships"
                      }
                    }
                  }
                },
                "groupRelationships" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "allowedGroupRelationship" : {
                        "maxLength" : 3,
                        "type" : "string",
                        "description" : "Indicates the list of allowed group relations in a customer group using this purpose and group type. List of relations can be retrieved using /reference/relationships"
                      }
                    }
                  }
                },
                "aggregateRelationships" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "allowedAggregateRelationship" : {
                        "maxLength" : 3,
                        "type" : "string",
                        "description" : "Indicates the relations that must be considered for aggregating under a primary customer within the customer group. List of relations can be retrieved using /reference/relationships"
                      }
                    }
                  }
                }
              }
            }
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "groupLevelUniqueCustomer" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Indicates whether customers in a group are to be restricted from being defined in another customer group with same group purpose. YES - will restrict the customer from being defined in another group, NO/Blank - will allow customers to be defined in other groups"
          },
          "groupPurpose" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Indicates the type of customer group. Allowed values are RISK ,LIABILITY or Blank"
          },
          "allowRelationship" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Indicates whether customer relations have to be defaulted in customer group from party relationship. Allowed values are YES, NO or Blank"
          },
          "description" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Contains the description of purpose of the payment"
          },
          "groupPurposeId" : {
            "maxLength" : 15,
            "type" : "string",
            "description" : "Identifier of customer group purpose"
          },
          "subGroupLevelUniqueCustomer" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Indicates whether a customer is allowed to be part of multiple sub groups. Allowed values are UNIQUE, MULTIPLE, NONE or Blank"
          }
        }
      },
      "CustomerPrintAddressResponse1Body" : {
        "type" : "object",
        "properties" : {
          "subDepartmentId" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains a sub-division identifier of a large organisation or building"
          },
          "addresses" : {
            "type" : "array",
            "description" : "Contains the communication address of the customer or full address of the property",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyAddresses"
            }
          },
          "locationName" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies specific location name with in the country or town"
          },
          "streets" : {
            "type" : "array",
            "description" : "Contains the street name of the customer or the property",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyStreets"
            }
          },
          "districtName" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Stores the district name of the  Beneficiary Customer"
          },
          "flatNumber" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the flat number of the customer"
          },
          "departmentId" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Department identifier"
          },
          "customerNames" : {
            "type" : "array",
            "description" : "Indicates the name of the customer. Originator is the party who requests the payment cancellation",
            "items" : {
              "$ref" : "#/components/schemas/CustomerProfileResponseBodyCustomerNames"
            }
          },
          "iddPrefixPhone" : {
            "maxLength" : 16,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the international calling prefix code of the phone or mobile number"
          },
          "addressVerifier" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the party or service which was used for address confirmation purposes"
          },
          "addressPurpose" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the purpose or usage of the address. Allowed values are CTC (Communication to Customer), CTICOP(Communication to In Care Of Party) or CTOP(Communication to Other Party)"
          },
          "buildingName" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the name of the building where customer resides"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "postCodes" : {
            "type" : "array",
            "description" : "Identifies the address postal code for the customer or the property",
            "items" : {
              "$ref" : "#/components/schemas/CustomerPrintAddressBodyPostCodes"
            }
          },
          "phoneNumber" : {
            "maxLength" : 17,
            "minLength" : 0,
            "type" : "string",
            "description" : "The phone number of the customer or prospect"
          },
          "countryCode" : {
            "maxLength" : 2,
            "minLength" : 0,
            "type" : "string",
            "description" : "ISO Country code, IBAN number will be generated based on the structure of this country"
          },
          "towns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomerPrintAddressBodyTowns"
            }
          },
          "customerShortNames" : {
            "type" : "array",
            "description" : "Denotes the Short name registered for a customer",
            "items" : {
              "$ref" : "#/components/schemas/CustomerProfileResponseBodyCustomerShortNames"
            }
          },
          "floorNumber" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the floor number of the customer address"
          },
          "addressLocation" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the nature of the postal address, like primary, secondary or office address"
          },
          "buildingNumber" : {
            "maxLength" : 16,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the building number where customer resides"
          },
          "postBoxNumber" : {
            "maxLength" : 16,
            "minLength" : 0,
            "type" : "string",
            "description" : "Post Office Box (POB) number that relates to financial institution"
          },
          "state" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Represents a subdivision of a country such as state, region, country"
          }
        }
      },
      "CustomerResponseBodyPostingRestrictIds" : {
        "type" : "object",
        "properties" : {
          "postingRestrictId" : {
            "maximum" : 2,
            "minimum" : 0,
            "type" : "number",
            "description" : "Identifies any restrictions for posting entries that are imposed on a Customer"
          }
        }
      },
      "AlertRequestsResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/AlertRequestsResponseBodyInner"
        }
      },
      "BusinessQueryErrorResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ErrorHeader"
          },
          "error" : {
            "$ref" : "#/components/schemas/BusinessQueryErrorResponseBody"
          }
        },
        "description" : "BusinessQueryErrorResponse"
      },
      "CustomerShortNamesResponseBody" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "customerName" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the name of the customer. Originator is the party who requests the payment cancellation"
          }
        }
      },
      "CustomerClosureBody" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "exitReason" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "The field reflects the customer exit reason of the customer or prospect"
          },
          "reopenedDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates if the customer who had exited the relationship with the bank is reopened"
          },
          "customerId" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the customer"
          },
          "exitStatus" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "The field reflects the customer exit status of a customer or prospect"
          },
          "remarks" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "General comments / notes"
          },
          "requestStatus" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "The current status of the request. The possible values includes New, send to printer, cancelled and processed"
          },
          "exitDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "The field reflects the customer exit date of the customer or prospect"
          }
        }
      },
      "CustomerRelationshipResponse1BodyInner" : {
        "type" : "object",
        "properties" : {
          "originatingRelation" : {
            "type" : "array",
            "description" : "Details about the Customer Relationships and Party Relationships",
            "items" : {
              "type" : "object",
              "properties" : {
                "relationReference" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Customer Relationship of originating party. It is used in conjunction with the relatedRelationReference attribute."
                },
                "party" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Specifies customer information."
                },
                "partyId" : {
                  "maxLength" : 10,
                  "type" : "string",
                  "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field."
                },
                "owningPercent" : {
                  "maxLength" : 6,
                  "type" : "string",
                  "description" : "Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership"
                },
                "partyRelation" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Originating Party's relationship to the underlying portfolio. Should be a valid relationship."
                },
                "partyRole" : {
                  "maxLength" : 20,
                  "type" : "string",
                  "description" : "Contains the identifier used for the role played by the party or customer in the contract or account"
                },
                "partyEffectiveDate" : {
                  "type" : "string",
                  "description" : "Effective date from which there is a relationship between originating party and the portfolio.",
                  "format" : "date"
                },
                "relationships" : {
                  "type" : "array",
                  "description" : "Details about the Customer Relationships and Party Relationships",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "relatedRelationReference" : {
                        "maxLength" : 35,
                        "type" : "string",
                        "description" : "To relate the Customer Relationship between Originating party and other parties. It is used in conjunction with the relationReference attribute"
                      },
                      "relatedParty" : {
                        "maxLength" : 35,
                        "type" : "string",
                        "description" : "Whether the related party is an Active Customer or Individual/Corporate Prospect.Valid options - CUSTOMER, PERSON, ENTITY"
                      },
                      "relatedPartyId" : {
                        "maxLength" : 10,
                        "type" : "string",
                        "description" : "Identifier of the Related Party"
                      },
                      "relatedPartyRelation" : {
                        "maxLength" : 3,
                        "type" : "string",
                        "description" : "The relation between the originating party and the related party.For Example:Mother, Daughter"
                      },
                      "relatedPartyRole" : {
                        "maxLength" : 20,
                        "type" : "string",
                        "description" : "To define the role of the related party.For example: SOLICITOR, AUTHORISED SIGNATORY and POWER OF ATTORNEY"
                      },
                      "relatedPartyEffectiveDate" : {
                        "type" : "string",
                        "description" : "To state the effective date of the relationship.",
                        "format" : "date"
                      },
                      "owningPercent" : {
                        "maxLength" : 6,
                        "type" : "string",
                        "description" : "Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership"
                      }
                    }
                  }
                }
              }
            }
          },
          "customerRelationGroupId" : {
            "maxLength" : 15,
            "type" : "string",
            "description" : "Identifies the key to Customer Relationship Group to form a relation"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "purposeOfRelationship" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "The purpose of the relationship between the Originating Party and the Related Party. Valid options - TAX, LIMIT, ADVICES, OTHERS or can be left blank"
          },
          "relationId" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Identifier of the Customer Relationship and Party Relationship"
          },
          "customerRelationGroupName" : {
            "maxLength" : 40,
            "type" : "string",
            "description" : "Name of a Customer Relationship Group if applicable to the relationship"
          }
        }
      },
      "CustomerResponseBodyRoleDetails" : {
        "type" : "object",
        "properties" : {
          "jointRelationDeliveryOption" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "This is used to specify what delivery addressing is to be used for the link customer. "
          },
          "jointRelationRoleNote" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Additional notes about the role"
          },
          "jointRelationRoleId" : {
            "maximum" : 20,
            "minimum" : 0,
            "type" : "number",
            "description" : "Role of joint customer with the main customer"
          }
        }
      },
      "CustomerResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ScreenHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerResponseBody"
          }
        },
        "description" : "CustomerResponse"
      },
      "BusinessQueryErrorResponseBody" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The identifier of the error message"
          },
          "message" : {
            "type" : "string",
            "description" : "The actual Transact error message for bad requests"
          },
          "type" : {
            "type" : "string",
            "description" : "The identifier of error type: Business"
          }
        }
      },
      "CustomerConsentsResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "arrangementId" : {
            "type" : "string",
            "description" : "Indicates an unique identifier of an account"
          },
          "expiryDate" : {
            "type" : "string",
            "description" : "This indicates the  date  on which the offer or privilege terminates for the event",
            "format" : "date"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "productId" : {
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account"
          },
          "consentTypes" : {
            "type" : "array",
            "description" : "Consent Type for which the consent is given",
            "items" : {
              "type" : "object",
              "properties" : {
                "consentType" : {
                  "type" : "string",
                  "description" : "Consent Type for which the consent is given"
                },
                "consentGiven" : {
                  "type" : "string",
                  "description" : "Identifies whether the consent has been given to the customer to perform the transaction"
                },
                "consentBlock" : {
                  "type" : "string",
                  "description" : "Indicates whether consent is blocked or not. No personal data of the Client will be shared by the Bank for any purpose when the consent is blocked."
                },
                "blockNotes" : {
                  "type" : "string",
                  "description" : "Indicates the reason for which the consent is blocked."
                },
                "consentWithdraw" : {
                  "type" : "string",
                  "description" : "Identifies whether the consent has been withdrawn to the customer to perform the transaction"
                },
                "withdrawNotes" : {
                  "type" : "string",
                  "description" : "Notes to facilitate why the consent has been withdrawn"
                },
                "consentTypeName" : {
                  "type" : "string",
                  "description" : "Contains the name of the type of consent given to the customer"
                },
                "subTypes" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "consentSubType" : {
                        "type" : "string",
                        "description" : "Indicates the consent sub type linked to corresponding consent type."
                      },
                      "consentSubTypeGiven" : {
                        "type" : "string",
                        "description" : "Contains the sub type of consent given to the customer"
                      }
                    }
                  }
                }
              }
            }
          },
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          }
        }
      },
      "FatcaCustomerBodyTinDetails" : {
        "type" : "object",
        "properties" : {
          "tinId" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the Tax Identification Number of the Customer"
          },
          "tinCountry" : {
            "maxLength" : 9,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the country that the associated Tax Identification Number relates to"
          }
        }
      },
      "CustomerRestrictionsResponseBody" : {
        "type" : "object",
        "properties" : {
          "postingRestrictIds" : {
            "type" : "array",
            "description" : "Identifies any restrictions for posting entries that are imposed on a Customer",
            "items" : {
              "$ref" : "#/components/schemas/CustomerRestrictionsResponseBodyPostingRestrictIds"
            }
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "JointCustomerDetailsResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/JointCustomerDetailsResponseBodyInner"
        }
      },
      "CustomerResponseBodyOtherNationalityIds" : {
        "type" : "object",
        "properties" : {
          "otherNationalityId" : {
            "maxLength" : 9,
            "minLength" : 0,
            "type" : "string",
            "description" : "Other Nationality of the Customer"
          }
        }
      },
      "CustomerPhoneAddressResponse1Body" : {
        "type" : "object",
        "properties" : {
          "iddPrefixMobile" : {
            "maxLength" : 16,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the international calling prefix code of the mobile"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "mobileNumber" : {
            "maxLength" : 17,
            "minLength" : 0,
            "type" : "string",
            "description" : "Mobile number of the customer"
          },
          "customerShortNames" : {
            "type" : "array",
            "description" : "Denotes the Short name registered for a customer",
            "items" : {
              "$ref" : "#/components/schemas/CustomerProfileResponseBodyCustomerShortNames"
            }
          }
        }
      },
      "CustomerAddressOutputResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerAddressOutputResponseBody"
          }
        },
        "description" : "CustomerAddressOutputResponse"
      },
      "CustomerOpportunitiesResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CustomerOpportunitiesResponseBodyInner"
        }
      },
      "DirectDebitsResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/DirectDebitsResponseBodyInner"
        }
      },
      "BicOwnersResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "bicId" : {
            "maxLength" : 11,
            "type" : "string",
            "description" : "Bank Identifier Code (BIC) of the financial institution"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "bicdetails" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "companyCode" : {
                  "maxLength" : 9,
                  "type" : "string",
                  "description" : "The identifier of the underlying Entity/Company/Branch."
                },
                "customer" : {
                  "maxLength" : 10,
                  "type" : "string",
                  "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed."
                },
                "carrier" : {
                  "maxLength" : 10,
                  "type" : "string",
                  "description" : "Carrier to be used for processing the messages"
                }
              }
            }
          }
        }
      },
      "ScreenErrorResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ErrorHeader"
          },
          "error" : {
            "$ref" : "#/components/schemas/ScreenErrorResponseBody"
          }
        },
        "description" : "ScreenErrorResponse"
      },
      "CustomerPostingRestrictionsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerPostingRestrictionsResponseBody"
          }
        },
        "description" : "CustomerPostingRestrictionsResponse"
      },
      "CustomerClosure" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerClosureBody"
          }
        },
        "description" : "CustomerClosure"
      },
      "ProspectCustomerBodyTownCountries" : {
        "type" : "object",
        "properties" : {
          "townCountry" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "The town and country associated with the address"
          }
        }
      },
      "CustomerClosureResponseBody" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "exitReason" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "The field reflects the customer exit reason of the customer or prospect"
          },
          "reopenedDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates if the customer who had exited the relationship with the bank is reopened"
          },
          "customerId" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the customer"
          },
          "exitStatus" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "The field reflects the customer exit status of a customer or prospect"
          },
          "remarks" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "General comments / notes"
          },
          "requestStatus" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "The current status of the request. The possible values includes New, send to printer, cancelled and processed"
          },
          "exitDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "The field reflects the customer exit date of the customer or prospect"
          }
        }
      },
      "JointCustomerDetailsResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "jointCustomerDetails" : {
            "type" : "array",
            "description" : "Identifies the details of Customer in a Joint Relationship",
            "items" : {
              "type" : "object",
              "properties" : {
                "jointRelationCode" : {
                  "maximum" : 3,
                  "type" : "number",
                  "description" : "The identifier of the relationship between joint holder and owner "
                },
                "jointRelationDisplayName" : {
                  "maxLength" : 3,
                  "type" : "string",
                  "description" : "Display name of Joint Relationship identifier"
                },
                "jointCustomer" : {
                  "maximum" : 10,
                  "type" : "number",
                  "description" : "Joint or related customer id"
                },
                "jointCustomerName" : {
                  "maxLength" : 10,
                  "type" : "string",
                  "description" : "Name of Joint Customer"
                },
                "reverseJointRelationCode" : {
                  "maximum" : 3,
                  "type" : "number",
                  "description" : "Relationship code for the Related Customer"
                },
                "reverseJointRelationName" : {
                  "maxLength" : 3,
                  "type" : "string",
                  "description" : "Describes the Relation code and is used for the enrichment of the code for reverse joint relation."
                },
                "deliveryOption" : {
                  "type" : "array",
                  "description" : "Identifies the delivery options available to the customer",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "jointRelationRoleId" : {
                        "maximum" : 20,
                        "type" : "number",
                        "description" : "Role of joint customer with the main customer"
                      },
                      "jointRoleDisplayName" : {
                        "maxLength" : 20,
                        "type" : "string",
                        "description" : "Description of the joint customer role."
                      },
                      "jointRelationRoleNotes" : {
                        "maxLength" : 35,
                        "type" : "string",
                        "description" : "Additional notes about the role"
                      },
                      "jointRelationDeliveryOption" : {
                        "maxLength" : 8,
                        "type" : "string",
                        "description" : "This is used to specify what delivery addressing is to be used for the link customer. "
                      },
                      "jointRelationRoleInfo" : {
                        "maxLength" : 35,
                        "type" : "string",
                        "description" : "Additional information of the role."
                      }
                    }
                  }
                }
              }
            }
          },
          "customerId" : {
            "maximum" : 10,
            "type" : "number",
            "description" : "Identifier of the customer"
          }
        }
      },
      "CustomerDeliveryOptionsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerDeliveryOptionsResponseBody"
          }
        },
        "description" : "CustomerDeliveryOptionsResponse"
      },
      "CustomerPhoneAddressResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CustomerPhoneAddressResponseBodyInner"
        }
      },
      "StandingOrdersResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/StandingOrdersResponseBody"
          }
        },
        "description" : "StandingOrdersResponse"
      },
      "SystemQueryErrorResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ErrorHeader"
          },
          "error" : {
            "$ref" : "#/components/schemas/SystemQueryErrorResponseBody"
          }
        },
        "description" : "SystemQueryErrorResponse"
      },
      "CustomerPrintAddressBodyPostCodes" : {
        "type" : "object",
        "properties" : {
          "postCode" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the address postal code for the customer or the property"
          }
        }
      },
      "PartyRelationshipResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ScreenHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/PartyRelationshipResponseBody"
          }
        },
        "description" : "PartyRelationshipResponse"
      },
      "CustomerExitStatusBody" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "exitReason" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "The field reflects the customer exit reason of the customer or prospect"
          },
          "exitStatus" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "The field reflects the customer exit status of a customer or prospect"
          }
        }
      },
      "PartyRelationshipResponse1BodyInner" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "partyName" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Specifies the short name of the customer in CUSTOMER.GROUP"
          },
          "relatedParties" : {
            "type" : "array",
            "description" : "Whether the related party is an Active Customer or Individual/Corporate Prospect.Valid options - CUSTOMER, PERSON, ENTITY",
            "items" : {
              "type" : "object",
              "properties" : {
                "relationshipHierarchyType" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Identifies the hierarchy in the relationship. It is applicable primarily for relationship between Corporate Entities – Parent, Child or Other"
                },
                "relationshipType" : {
                  "maximum" : 35,
                  "type" : "number",
                  "description" : "Indicates the nature of the relationship between the two parties Parent-of, Subsidiary-of."
                },
                "relationshipName" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Indicates the description of the relationship between parties"
                },
                "relatedPartyId" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Identifier of the Related Party"
                },
                "relatedPartyName" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Name of the Party related to the Customer"
                },
                "ownershipPercentage" : {
                  "maximum" : 6,
                  "type" : "number",
                  "description" : "Contains the percentage contributed by specific owner of the asset or collateral"
                },
                "relationshipEffectiveDate" : {
                  "type" : "string",
                  "description" : "Specifies the date the relationship started.",
                  "format" : "date"
                },
                "relationshipEndDate" : {
                  "type" : "string",
                  "description" : "Specifies the date the relationship ended.",
                  "format" : "date"
                },
                "relatedPartyRoles" : {
                  "type" : "array",
                  "description" : "To define the role of the related party.For example: SOLICITOR, AUTHORISED SIGNATORY and POWER OF ATTORNEY",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "partyRoleType" : {
                        "maxLength" : 35,
                        "type" : "string",
                        "description" : "Indicates the role of the party in relation to the bank – Customer, Associated Party, Representative."
                      },
                      "partyRoleStatus" : {
                        "maxLength" : 35,
                        "type" : "string",
                        "description" : "Indicates the status for the party role – Active, Inactive or Prospect."
                      }
                    }
                  }
                }
              }
            }
          },
          "partyId" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field"
          },
          "partyRoles" : {
            "type" : "array",
            "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
            "items" : {
              "type" : "object",
              "properties" : {
                "partyRoleType" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Indicates the role of the party in relation to the bank – Customer, Associated Party, Representative."
                },
                "partyRoleStatus" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Indicates the status for the party role – Active, Inactive or Prospect."
                }
              }
            }
          }
        }
      },
      "CustomerPhoneAddressResponse1" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ScreenHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerPhoneAddressResponse1Body"
          }
        },
        "description" : "CustomerPhoneAddressResponse1"
      },
      "CustomerPrintAddressBodyTowns" : {
        "type" : "object",
        "properties" : {
          "town" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the town associated with the address of the customer or property"
          }
        }
      },
      "ProspectCustomer" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/ProspectCustomerBody"
          }
        },
        "description" : "ProspectCustomer"
      },
      "CustomerProfileResponseBodySpokenLanguages" : {
        "type" : "object",
        "properties" : {
          "spokenLanguage" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Customers native language or the language that can be used for communication"
          }
        }
      },
      "DeliveryPreferenceBodyMessageGroupDetail" : {
        "type" : "object",
        "properties" : {
          "role" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the Role of the Customer"
          },
          "carrierPosition" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the position of the carrier in the arrangement"
          },
          "endDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned"
          },
          "holdOutput" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Defines whether the output delivery message is to be held by the system before processing. Allowed option is Y"
          },
          "format" : {
            "maxLength" : 2,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the formatting version to be used for the delivery message"
          },
          "holdMailOption" : {
            "maxLength" : 7,
            "minLength" : 0,
            "type" : "string",
            "description" : "Defines the hold options to be used on the delivery messages during the hold period. Options are HELD - hold the delivery messages; DELETE - aviod generation of delivery messages; CLEAR - automatically clear hold messages after hold period expiry and SEND - automatically push the held messages for processing"
          },
          "language" : {
            "maxLength" : 2,
            "minLength" : 0,
            "type" : "string",
            "description" : "The language that the contents of the field are displayed in"
          },
          "holdMailStartDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Defines the start date of the hold period when the delivery message is to be held in the system"
          },
          "required" : {
            "maxLength" : 8,
            "minLength" : 0,
            "type" : "string",
            "description" : "Flag to set the channel to communicate"
          },
          "carrier" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Carrier to be used for processing the messages"
          },
          "copies" : {
            "maxLength" : 2,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies the number of copies of a message required"
          },
          "holdMailEndDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Defines the end date of the hold period when the delivery message is to be held in the system"
          },
          "startDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the date on which the transaction or payment gets initiated"
          }
        }
      },
      "CustomerGroupPurposeBodyRelationships" : {
        "type" : "object",
        "properties" : {
          "allowedRelationship" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the list of allowed real relations in a customer group using this purpose and group type. List of relations can be retrieved using /reference/relationships"
          }
        }
      },
      "CustomerRelationshipBodyRelationships" : {
        "type" : "object",
        "properties" : {
          "owningPercent" : {
            "maxLength" : 6,
            "minLength" : 0,
            "type" : "string",
            "description" : "Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership"
          },
          "relatedPartyRelation" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "The relation between the originating party and the related party.For Example:Mother, Daughter"
          },
          "relatedPartyRole" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "description" : "To define the role of the related party.For example: SOLICITOR, AUTHORISED SIGNATORY and POWER OF ATTORNEY"
          },
          "relatedPartyId" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the Related Party"
          },
          "relatedPartyEffectiveDate" : {
            "type" : "string",
            "description" : "To state the effective date of the relationship",
            "format" : "date"
          },
          "relatedRelationReference" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "To relate the Customer Relationship between Originating party and other parties. It is used in conjunction with the relationReference attribute"
          },
          "relatedParty" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Whether the related party is an Active Customer or Individual/Corporate Prospect.Valid options - CUSTOMER, PERSON, ENTITY"
          }
        }
      },
      "MessagesBody" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "subject" : {
            "maxLength" : 150,
            "minLength" : 0,
            "type" : "string",
            "description" : "The subject of the message to be sent or received"
          },
          "messages" : {
            "type" : "array",
            "description" : "Specifies the record ID of parent message. ",
            "items" : {
              "$ref" : "#/components/schemas/MessagesBodyMessages"
            }
          },
          "toCustomerId" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "The unique customer identifier of the Payee, to whom the payment message is to be sent"
          }
        }
      },
      "CustomerResponseBodyTaxIds" : {
        "type" : "object",
        "properties" : {
          "taxId" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Holds the Customer's TAX/SSN Id"
          }
        }
      },
      "OtherBanksToConnectToResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "globalUrn" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "globalURNSpecifies the GLOBAL.URN reference of the TPP (third party provider). This will be retrieved from the request and should match a GLOBAL.URN from a record within the Open Banking Directory"
          },
          "bankCode" : {
            "type" : "string",
            "description" : "Contains the code of the bank with which the transaction is performed"
          },
          "bankId" : {
            "type" : "string",
            "description" : "Contains the identifier of the bank with which the transaction is performed"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "paymentTemplates" : {
            "type" : "array",
            "description" : "Contains the templates used for payment transactions",
            "items" : {
              "type" : "object",
              "properties" : {
                "paymentTemplate" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Contains the template used for payment transactions"
                }
              }
            }
          },
          "bankName" : {
            "maxLength" : 150,
            "type" : "string",
            "description" : "The name of the bank being referred to"
          },
          "extSourceProvider" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Contains the name of the external source provider for the customer"
          },
          "logoURL" : {
            "maxLength" : 200,
            "type" : "string",
            "description" : "Contains the uniform resourcelocator of the logo"
          },
          "countryId" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "ISO country code of the financial institution. "
          }
        }
      },
      "CustomerReportingStatusResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerReportingStatusResponseBody"
          }
        },
        "description" : "CustomerReportingStatusResponse"
      },
      "CustomerExitStatusResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CustomerExitStatusResponseBodyInner"
        }
      },
      "CustomerResponseBodyAddresses" : {
        "type" : "object",
        "properties" : {
          "address" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the communication address of the customer or full address of the property"
          }
        }
      },
      "DirectDebitsResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "customerMnemonic" : {
            "maxLength" : 10,
            "type" : "string",
            "description" : "Specifies an alternative easy means of referencing the Customer"
          },
          "amount" : {
            "maximum" : 19,
            "type" : "number",
            "description" : "This is the payment amount"
          },
          "nextPaymentDate" : {
            "type" : "string",
            "description" : "Indicates next payment date for the contract",
            "format" : "date"
          },
          "creditorName" : {
            "maxLength" : 70,
            "type" : "string",
            "description" : "Name or short title of the credit account"
          },
          "standAloneDdi" : {
            "maxLength" : 1,
            "type" : "string",
            "description" : "Defines whether the direct debit mandate is for stand-alone purpose i.e. one-off instruction"
          },
          "accountName" : {
            "type" : "string",
            "description" : "Display name or short name of the account specified"
          },
          "displayName" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Contains the name used for display or enrichment purposes"
          },
          "directDebitId" : {
            "maxLength" : 25,
            "type" : "string",
            "description" : "The unique identifier of the direct debit mandate. "
          },
          "sortCode" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Contains bank sort code or iban branch identifier for the account"
          },
          "versionNumber" : {
            "maxLength" : 4,
            "type" : "string",
            "description" : "Current number of the record"
          },
          "frequency" : {
            "maxLength" : 50,
            "type" : "string",
            "description" : "Specifies the frequency in which the payment application(periodic payments) execute the payment instruction"
          },
          "accountId" : {
            "type" : "string",
            "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "currencyName" : {
            "type" : "string",
            "description" : "The name that is displayed for the currency"
          },
          "customerId" : {
            "maxLength" : 10,
            "type" : "string",
            "description" : "Identifier of the customer"
          },
          "currency" : {
            "maxLength" : 3,
            "type" : "string",
            "description" : "Identifies the currency. E.g. USD, GBP etc"
          },
          "creditAccountId" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Credit account identifier of the payment or transaction"
          },
          "startDate" : {
            "type" : "string",
            "description" : "Contains the date on which the transaction or payment gets initiated",
            "format" : "date"
          },
          "direction" : {
            "maxLength" : 10,
            "type" : "string",
            "description" : "Indicates the direction of the Direct debit claim for which mandate is received. The claim can be 'Outward' i.e. Claim is sent to the other bank or 'Inward'  i.e. other bank submit their claim to debit our customer's account. "
          },
          "status" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Contains status of the data rights request.Allowed values are INITIATED, INPROGESS, EXTENDED, COMPLETED, REJECTED"
          }
        }
      },
      "CustomerGroupPurposeBodyGroupTypes" : {
        "type" : "object",
        "properties" : {
          "relationships" : {
            "type" : "array",
            "description" : "Details about the Customer Relationships and Party Relationships",
            "items" : {
              "$ref" : "#/components/schemas/CustomerGroupPurposeBodyRelationships"
            }
          },
          "groupType" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the type of entity that identifies the group eg. Parent or Member"
          },
          "groupRelationships" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomerGroupPurposeBodyGroupRelationships"
            }
          },
          "aggregateRelationships" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomerGroupPurposeBodyAggregateRelationships"
            }
          }
        }
      },
      "ProspectCustomerBodyEmails" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string",
            "description" : "Email Identifier of the Customer"
          }
        }
      },
      "CustomerPrintAddressResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CustomerPrintAddressResponseBodyInner"
        }
      },
      "CustomerKYCDetailsResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CustomerKYCDetailsResponseBodyInner"
        }
      },
      "Messages" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/MessagesBody"
          }
        },
        "description" : "Messages"
      },
      "StandingOrdersResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/StandingOrdersResponseBodyInner"
        }
      },
      "ProspectCustomerResponseBody" : {
        "type" : "object",
        "properties" : {
          "subDepartmentId" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains a sub-division identifier of a large organisation or building"
          },
          "addresses" : {
            "type" : "array",
            "description" : "Contains the communication address of the customer or full address of the property",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyAddresses"
            }
          },
          "locationName" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies specific location name with in the country or town"
          },
          "streets" : {
            "type" : "array",
            "description" : "Contains the street name of the customer or the property",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyStreets"
            }
          },
          "districtName" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Stores the district name of the  Beneficiary Customer"
          },
          "gender" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Gender of the Individual Customer"
          },
          "departmentId" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Department identifier"
          },
          "customerNames" : {
            "type" : "array",
            "description" : "Indicates the name of the customer. Originator is the party who requests the payment cancellation",
            "items" : {
              "$ref" : "#/components/schemas/ProspectCustomerBodyCustomerNames"
            }
          },
          "countries" : {
            "type" : "array",
            "description" : "Identifies the country of the customer or a property or organization",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyCountries"
            }
          },
          "registeredCountry" : {
            "maxLength" : 2,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identify which country an entity has been registered"
          },
          "phoneNumbers" : {
            "type" : "array",
            "description" : "The phone number of the customer or prospect",
            "items" : {
              "$ref" : "#/components/schemas/ProspectCustomerBodyPhoneNumbers"
            }
          },
          "personEntity" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies if the record is for a real person or a legal entity. Allowed Options: Person or Entity"
          },
          "emails" : {
            "type" : "array",
            "description" : "Email Identifier of the Customer",
            "items" : {
              "$ref" : "#/components/schemas/ProspectCustomerBodyEmails"
            }
          },
          "socialNetworkIds" : {
            "type" : "array",
            "description" : "Social Network Identification of the person/entity",
            "items" : {
              "$ref" : "#/components/schemas/ProspectCustomerBodySocialNetworkIds"
            }
          },
          "prospectLegalDetails" : {
            "type" : "array",
            "description" : "Identifies the legal entity details of prospect customer",
            "items" : {
              "$ref" : "#/components/schemas/ProspectCustomerBodyProspectLegalDetails"
            }
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "postCodes" : {
            "type" : "array",
            "description" : "Identifies the address postal code for the customer or the property",
            "items" : {
              "$ref" : "#/components/schemas/ProspectCustomerBodyPostCodes"
            }
          },
          "birthIncorpDate" : {
            "type" : "string",
            "description" : "Date on which the entity is incorporated",
            "format" : "date"
          },
          "townCountries" : {
            "type" : "array",
            "description" : "The town and country associated with the address",
            "items" : {
              "$ref" : "#/components/schemas/ProspectCustomerBodyTownCountries"
            }
          },
          "floorNumber" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the floor number of the customer address"
          }
        }
      },
      "CustomerPhoneAddressDelete" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          }
        },
        "description" : "CustomerPhoneAddressDelete"
      },
      "CustomerGroupPurposeResponseBody" : {
        "type" : "object",
        "properties" : {
          "allowGroupRelationship" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates whether group relations have to be defaulted in customer group from party relationship. Allowed values are YES, NO or Blank"
          },
          "groupTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomerGroupPurposeBodyGroupTypes"
            }
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "groupLevelUniqueCustomer" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates whether customers in a group are to be restricted from being defined in another customer group with same group purpose. YES - will restrict the customer from being defined in another group, NO/Blank - will allow customers to be defined in other groups"
          },
          "groupPurpose" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the type of customer group. Allowed values are RISK ,LIABILITY or Blank"
          },
          "allowRelationship" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates whether customer relations have to be defaulted in customer group from party relationship. Allowed values are YES, NO or Blank"
          },
          "description" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the description of purpose of the payment"
          },
          "subGroupLevelUniqueCustomer" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates whether a customer is allowed to be part of multiple sub groups. Allowed values are UNIQUE, MULTIPLE, NONE or Blank"
          }
        }
      },
      "OtherBanksToConnectToResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/OtherBanksToConnectToResponseBodyInner"
        }
      },
      "CustomerPostingRestrictionsResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CustomerPostingRestrictionsResponseBodyInner"
        }
      },
      "SystemScreenErrorResponseBody" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "The identifier of error type: System"
          },
          "errorDetails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SystemScreenErrorResponseBodyErrorDetails"
            }
          }
        }
      },
      "CustomerRelationshipResponse1Body" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CustomerRelationshipResponse1BodyInner"
        }
      },
      "CustomerExitStatusParamBody" : {
        "type" : "object",
        "properties" : {
          "exitStatusDescription" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "The field reflects the description of, respective customer exit status"
          },
          "customerType" : {
            "maxLength" : 8,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the type of customers. Example Personal, Business, Corporate, etc"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "allowRemoveExitStatus" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies if the bank user will be allowed to re-open a professional relationship with the respective prospect or customer by removing its exit status"
          },
          "allowedExitReasons" : {
            "type" : "array",
            "description" : "The field indicates the reason for exiting a relation with a prospect or customer",
            "items" : {
              "$ref" : "#/components/schemas/CustomerExitStatusParamBodyAllowedExitReasons"
            }
          }
        }
      },
      "CustomerPersonalDetailsResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CustomerPersonalDetailsResponseBodyInner"
        }
      },
      "DeliveryPreference" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/DeliveryPreferenceBody"
          }
        },
        "description" : "DeliveryPreference"
      },
      "CustomerStaticChange" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerStaticChangeBody"
          }
        },
        "description" : "CustomerStaticChange"
      },
      "CustomerExitStatusParamResponse1" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ScreenHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerExitStatusParamResponse1Body"
          }
        },
        "description" : "CustomerExitStatusParamResponse1"
      },
      "CustomerOpportunitiesResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerOpportunitiesResponseBody"
          }
        },
        "description" : "CustomerOpportunitiesResponse"
      },
      "CustomerRelationship" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerRelationshipBody"
          }
        },
        "description" : "CustomerRelationship"
      },
      "CustomerPrintAddressResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "subDepartmentId" : {
            "maxLength" : 70,
            "type" : "string",
            "description" : "Contains a sub-division identifier of a large organisation or building"
          },
          "addresses" : {
            "type" : "array",
            "description" : "Contains the communication address of the customer or full address of the property",
            "items" : {
              "type" : "object",
              "properties" : {
                "address" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Contains the communication address of the customer or full address of the property"
                }
              }
            }
          },
          "locationName" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Identifies specific location name with in the country or town"
          },
          "streets" : {
            "type" : "array",
            "description" : "Contains the street name of the customer or the property",
            "items" : {
              "type" : "object",
              "properties" : {
                "street" : {
                  "maxLength" : 70,
                  "type" : "string",
                  "description" : "Contains the street name of the customer or the property"
                }
              }
            }
          },
          "districtName" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Stores the district name of the  Beneficiary Customer"
          },
          "flatNumber" : {
            "maxLength" : 70,
            "type" : "string",
            "description" : "Contains the flat number of the customer"
          },
          "departmentId" : {
            "maxLength" : 70,
            "type" : "string",
            "description" : "Department identifier"
          },
          "customerNames" : {
            "type" : "array",
            "description" : "Indicates the name of the customer. Originator is the party who requests the payment cancellation",
            "items" : {
              "type" : "object",
              "properties" : {
                "customerName" : {
                  "maxLength" : 70,
                  "type" : "string",
                  "description" : "Indicates the name of the customer. Originator is the party who requests the payment cancellation."
                }
              }
            }
          },
          "iddPrefixPhone" : {
            "maxLength" : 16,
            "type" : "string",
            "description" : "Identifies the international calling prefix code of the phone or mobile number"
          },
          "addressVerifier" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Contains the party or service which was used for address confirmation purposes"
          },
          "addressPurpose" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Identifies the purpose or usage of the address. Allowed values are CTC (Communication to Customer), CTICOP(Communication to In Care Of Party) or CTOP(Communication to Other Party)"
          },
          "customerAddressId" : {
            "maxLength" : 1000,
            "type" : "string",
            "description" : "Identifier of the customer address table"
          },
          "buildingName" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Identifies the name of the building where customer resides"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "postCodes" : {
            "type" : "array",
            "description" : "Identifies the address postal code for the customer or the property",
            "items" : {
              "type" : "object",
              "properties" : {
                "postCode" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Identifies the address postal code for the customer or the property"
                }
              }
            }
          },
          "phoneNumber" : {
            "maxLength" : 17,
            "type" : "string",
            "description" : "The phone number of the customer or prospect"
          },
          "countryCode" : {
            "maxLength" : 2,
            "type" : "string",
            "description" : "ISO Country code, IBAN number will be generated based on the structure of this country"
          },
          "towns" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "town" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Contains the town associated with the address of the customer or property"
                }
              }
            }
          },
          "customerShortNames" : {
            "type" : "array",
            "description" : "Denotes the Short name registered for a customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "customerShortName" : {
                  "type" : "string",
                  "description" : "Indicates the short name of Customer"
                }
              }
            }
          },
          "floorNumber" : {
            "maxLength" : 70,
            "type" : "string",
            "description" : "Contains the floor number of the customer address"
          },
          "addressLocation" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Identifies the nature of the postal address, like primary, secondary or office address"
          },
          "buildingNumber" : {
            "maxLength" : 16,
            "type" : "string",
            "description" : "Identifies the building number where customer resides"
          },
          "postBoxNumber" : {
            "maxLength" : 16,
            "type" : "string",
            "description" : "Post Office Box (POB) number that relates to financial institution"
          },
          "state" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Represents a subdivision of a country such as state, region, country"
          }
        }
      },
      "CustomerClosureResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ScreenHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerClosureResponseBody"
          }
        },
        "description" : "CustomerClosureResponse"
      },
      "ProspectCustomerBodySocialNetworkIds" : {
        "type" : "object",
        "properties" : {
          "socialNetworkId" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Social Network Identification of the person/entity"
          }
        }
      },
      "MessagesResponseBody" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "subject" : {
            "maxLength" : 150,
            "minLength" : 0,
            "type" : "string",
            "description" : "The subject of the message to be sent or received"
          },
          "messages" : {
            "type" : "array",
            "description" : "Specifies the record ID of parent message. ",
            "items" : {
              "$ref" : "#/components/schemas/MessagesBodyMessages"
            }
          },
          "toCustomerId" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "The unique customer identifier of the Payee, to whom the payment message is to be sent"
          }
        }
      },
      "CustomerSweepsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerSweepsResponseBody"
          }
        },
        "description" : "CustomerSweepsResponse"
      },
      "CustomerExitStatusParam" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerExitStatusParamBody"
          }
        },
        "description" : "CustomerExitStatusParam"
      },
      "CustomerRequestsResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "activityDisplayName" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Indicates the display name of the activity"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "activityStatus" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Business Activity Status  POSSIBLE VALUES: 0: Ready  1: Running  2: Completed successfully  3: On hold or in error"
          },
          "processDisplayName" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Indicates the display name of the current initiated process"
          }
        }
      },
      "ProspectCustomerBodyCustomerNames" : {
        "type" : "object",
        "properties" : {
          "customerName" : {
            "maxLength" : 40,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the name of the customer. Originator is the party who requests the payment cancellation"
          }
        }
      },
      "CustomerIdResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CustomerIdResponseBodyInner"
        }
      },
      "DeliveryPreferenceBodyOtherMessagesDetail" : {
        "type" : "object",
        "properties" : {
          "role" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the Role of the Customer"
          },
          "carrierPosition" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the position of the carrier in the arrangement"
          },
          "endDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned"
          },
          "holdOutput" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Defines whether the output delivery message is to be held by the system before processing. Allowed option is Y"
          },
          "format" : {
            "maxLength" : 2,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the formatting version to be used for the delivery message"
          },
          "holdMailOption" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Defines the hold options to be used on the delivery messages during the hold period. Options are HELD - hold the delivery messages; DELETE - aviod generation of delivery messages; CLEAR - automatically clear hold messages after hold period expiry and SEND - automatically push the held messages for processing"
          },
          "language" : {
            "maxLength" : 2,
            "minLength" : 0,
            "type" : "string",
            "description" : "The language that the contents of the field are displayed in"
          },
          "holdMailStartDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Defines the start date of the hold period when the delivery message is to be held in the system"
          },
          "required" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Flag to set the channel to communicate"
          },
          "carrier" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Carrier to be used for processing the messages"
          },
          "copies" : {
            "maxLength" : 2,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies the number of copies of a message required"
          },
          "holdMailEndDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Defines the end date of the hold period when the delivery message is to be held in the system"
          },
          "startDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the date on which the transaction or payment gets initiated"
          }
        }
      },
      "PartyRelationshipBodyPartyDisplayNames" : {
        "type" : "object",
        "properties" : {
          "partyDisplayName" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "A description of the Party Relationship"
          }
        }
      },
      "UnapprovedCustomerGroupResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/UnapprovedCustomerGroupResponseBody"
          }
        },
        "description" : "UnapprovedCustomerGroupResponse"
      },
      "PayloadHeader" : {
        "type" : "object",
        "properties" : {
          "audit" : {
            "$ref" : "#/components/schemas/PayloadHeaderAudit"
          }
        }
      },
      "CustomerInformationResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerInformationResponseBody"
          }
        },
        "description" : "CustomerInformationResponse"
      },
      "CustomerReportingStatusResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CustomerReportingStatusResponseBodyInner"
        }
      },
      "OverdueSettlementsResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/OverdueSettlementsResponseBodyInner"
        }
      },
      "CustomerResponseBodyRelationshipDetails" : {
        "type" : "object",
        "properties" : {
          "reverseJointRelationCode" : {
            "maximum" : 3,
            "minimum" : 0,
            "type" : "number",
            "description" : "Relationship code for the Related Customer"
          },
          "jointCustomer" : {
            "maximum" : 10,
            "minimum" : 0,
            "type" : "number",
            "description" : "Joint or related customer id"
          },
          "jointRelationCode" : {
            "maximum" : 3,
            "minimum" : 0,
            "type" : "number",
            "description" : "The identifier of the relationship between joint holder and owner "
          },
          "roleDetails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyRoleDetails"
            }
          }
        }
      },
      "ScreenErrorResponseBody" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "The identifier of error type: "
          },
          "errorDetails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ScreenErrorResponseBodyErrorDetails"
            }
          }
        }
      },
      "CustomerRelationshipBodyOriginatingRelation" : {
        "type" : "object",
        "properties" : {
          "owningPercent" : {
            "maxLength" : 6,
            "minLength" : 0,
            "type" : "string",
            "description" : "Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership"
          },
          "partyEffectiveDate" : {
            "type" : "string",
            "description" : "Effective date from which there is a relationship between originating party and the portfolio",
            "format" : "date"
          },
          "relationships" : {
            "type" : "array",
            "description" : "Details about the Customer Relationships and Party Relationships",
            "items" : {
              "$ref" : "#/components/schemas/CustomerRelationshipBodyRelationships"
            }
          },
          "relationReference" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Customer Relationship of originating party. It is used in conjunction with the relatedRelationReference attribute"
          },
          "partyRole" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the identifier used for the role played by the party or customer in the contract or account"
          },
          "partyRelation" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Originating Party's relationship to the underlying portfolio. Should be a valid relationship"
          },
          "partyId" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field"
          },
          "party" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies customer information"
          }
        }
      },
      "CustomerPhoneAddress" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerPhoneAddressBody"
          }
        },
        "description" : "CustomerPhoneAddress"
      },
      "CustomerPostingRestrictionsResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "customerId" : {
            "maxLength" : 10,
            "type" : "string",
            "description" : "Identifier of the customer"
          },
          "postingRestricts" : {
            "type" : "array",
            "description" : "Identifier of the Posting Restricts imposed on a customer or account",
            "items" : {
              "type" : "object",
              "properties" : {
                "customerName" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Indicates the name of the customer. Originator is the party who requests the payment cancellation."
                },
                "postingRestrictId" : {
                  "maxLength" : 2,
                  "type" : "string",
                  "description" : "Identifies any restrictions for posting entries that are imposed on a Customer"
                },
                "postingRestrictDisplayName" : {
                  "maxLength" : 2,
                  "type" : "string",
                  "description" : "Display name of Posting Restriction, if any, applicable for the customer"
                }
              }
            }
          }
        }
      },
      "CustomerProfileResponseBodyCitizenships" : {
        "type" : "object",
        "properties" : {
          "customerCountry" : {
            "maxLength" : 9,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies the country name of the beneficiary customer"
          }
        }
      },
      "CustomerChargeBodyTaxGroups" : {
        "type" : "object",
        "properties" : {
          "defaultTaxGroup" : {
            "maxLength" : 14,
            "minLength" : 0,
            "type" : "string",
            "description" : "Defines the Default Tax Group which the Customer is calculated to be a member of for the associated tax type"
          },
          "taxIdType" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Type of Tax identification number, eg, Social Security, Individual Tax Identification Number, etc,"
          },
          "taxGroup" : {
            "maxLength" : 14,
            "minLength" : 0,
            "type" : "string",
            "description" : "Defines the Actual Tax Group which the customer is calculated to be a member of for associated tax type"
          }
        }
      },
      "CustomerSwiftAddressResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "customerShortName" : {
            "maxLength" : 50,
            "type" : "string",
            "description" : "Indicates the short name of Customer"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "swiftTag25Indicator" : {
            "maxLength" : 3,
            "type" : "string",
            "description" : "Indicates that BIC Code to be included in the Tag25 or not"
          },
          "confidentialityText" : {
            "maxLength" : 3,
            "type" : "string",
            "description" : "Indicates that client name is not used in SWIFT Address for confidential purposes"
          },
          "BIC" : {
            "maxLength" : 18,
            "type" : "string",
            "description" : "The BIC code of the Beneficiary bank",
            "x-ballerina-name" : "bIC"
          }
        }
      },
      "CustomerPrintAddressBody" : {
        "type" : "object",
        "properties" : {
          "subDepartmentId" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains a sub-division identifier of a large organisation or building"
          },
          "addresses" : {
            "type" : "array",
            "description" : "Contains the communication address of the customer or full address of the property",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyAddresses"
            }
          },
          "locationName" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies specific location name with in the country or town"
          },
          "streets" : {
            "type" : "array",
            "description" : "Contains the street name of the customer or the property",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyStreets"
            }
          },
          "districtName" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Stores the district name of the  Beneficiary Customer"
          },
          "flatNumber" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the flat number of the customer"
          },
          "departmentId" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Department identifier"
          },
          "customerNames" : {
            "type" : "array",
            "description" : "Indicates the name of the customer. Originator is the party who requests the payment cancellation",
            "items" : {
              "$ref" : "#/components/schemas/CustomerProfileResponseBodyCustomerNames"
            }
          },
          "iddPrefixPhone" : {
            "maxLength" : 16,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the international calling prefix code of the phone or mobile number"
          },
          "addressVerifier" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the party or service which was used for address confirmation purposes"
          },
          "addressPurpose" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the purpose or usage of the address. Allowed values are CTC (Communication to Customer), CTICOP(Communication to In Care Of Party) or CTOP(Communication to Other Party)"
          },
          "buildingName" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the name of the building where customer resides"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "postCodes" : {
            "type" : "array",
            "description" : "Identifies the address postal code for the customer or the property",
            "items" : {
              "$ref" : "#/components/schemas/CustomerPrintAddressBodyPostCodes"
            }
          },
          "phoneNumber" : {
            "maxLength" : 17,
            "minLength" : 0,
            "type" : "string",
            "description" : "The phone number of the customer or prospect"
          },
          "countryCode" : {
            "maxLength" : 2,
            "minLength" : 0,
            "type" : "string",
            "description" : "ISO Country code, IBAN number will be generated based on the structure of this country"
          },
          "towns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomerPrintAddressBodyTowns"
            }
          },
          "customerShortNames" : {
            "type" : "array",
            "description" : "Denotes the Short name registered for a customer",
            "items" : {
              "$ref" : "#/components/schemas/CustomerProfileResponseBodyCustomerShortNames"
            }
          },
          "floorNumber" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the floor number of the customer address"
          },
          "addressLocation" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the nature of the postal address, like primary, secondary or office address"
          },
          "buildingNumber" : {
            "maxLength" : 16,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the building number where customer resides"
          },
          "postBoxNumber" : {
            "maxLength" : 16,
            "minLength" : 0,
            "type" : "string",
            "description" : "Post Office Box (POB) number that relates to financial institution"
          },
          "state" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Represents a subdivision of a country such as state, region, country"
          }
        }
      },
      "CustomerContactsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerContactsResponseBody"
          }
        },
        "description" : "CustomerContactsResponse"
      },
      "CustomerResponseBodyContactDetails" : {
        "type" : "object",
        "properties" : {
          "contactData" : {
            "maxLength" : 254,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the contact data of customer used for communication such as phone or mobile or e-mail address"
          },
          "iddPrefixPhone" : {
            "maxLength" : 16,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the international calling prefix code of the phone or mobile number"
          },
          "contactType" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Types of contacts available to users to communicate"
          }
        }
      },
      "ProspectCustomersResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "addresses" : {
            "type" : "array",
            "description" : "Contains the communication address of the customer or full address of the property",
            "items" : {
              "type" : "object",
              "properties" : {
                "address" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Contains the communication address of the customer or full address of the property"
                }
              }
            }
          },
          "streets" : {
            "type" : "array",
            "description" : "Contains the street name of the customer or the property",
            "items" : {
              "type" : "object",
              "properties" : {
                "street" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Contains the street name of the customer or the property"
                }
              }
            }
          },
          "countryNames" : {
            "type" : "array",
            "description" : "This is the country name that the financial institution resides in",
            "items" : {
              "type" : "object",
              "properties" : {
                "countryName" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "This is the country name that the financial institution resides in."
                }
              }
            }
          },
          "gender" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Gender of the Individual Customer"
          },
          "customerNames" : {
            "type" : "array",
            "description" : "Indicates the name of the customer. Originator is the party who requests the payment cancellation",
            "items" : {
              "type" : "object",
              "properties" : {
                "customerName" : {
                  "maxLength" : 40,
                  "type" : "string",
                  "description" : "Indicates the name of the customer. Originator is the party who requests the payment cancellation."
                }
              }
            }
          },
          "registeredCountry" : {
            "maxLength" : 2,
            "type" : "string",
            "description" : "Identify which country an entity has been registered"
          },
          "personEntity" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Identifies if the record is for a real person or a legal entity. Allowed Options: Person or Entity"
          },
          "prospectLegalDetails" : {
            "type" : "array",
            "description" : "Identifies the legal entity details of prospect customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "legalId" : {
                  "maxLength" : 20,
                  "type" : "string",
                  "description" : "Unique reference number of the legal documents submitted as identification proof"
                },
                "legalDocumentName" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Name of the legal documents such as passport, driving licence etc., provided as identification proof"
                }
              }
            }
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "postCodes" : {
            "type" : "array",
            "description" : "Identifies the address postal code for the customer or the property",
            "items" : {
              "type" : "object",
              "properties" : {
                "postCode" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Identifies the address postal code for the customer or the property"
                }
              }
            }
          },
          "birthIncorpDate" : {
            "type" : "string",
            "description" : "Date on which the entity is incorporated",
            "format" : "date"
          },
          "townCountries" : {
            "type" : "array",
            "description" : "The town and country associated with the address",
            "items" : {
              "type" : "object",
              "properties" : {
                "townCountry" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "The town and country associated with the address"
                }
              }
            }
          },
          "socialNetworks" : {
            "type" : "array",
            "description" : "Identifies the social networks of the Customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "socialNetworkId" : {
                  "maxLength" : 70,
                  "type" : "string",
                  "description" : "Social Network Identification of the person/entity"
                }
              }
            }
          },
          "prospectNetworks" : {
            "type" : "array",
            "description" : "Identifes the prospect customer network details like Phone number, email",
            "items" : {
              "type" : "object",
              "properties" : {
                "phoneNumber" : {
                  "maxLength" : 17,
                  "type" : "string",
                  "description" : "The phone number of the customer or prospect"
                },
                "email" : {
                  "maxLength" : 50,
                  "type" : "string",
                  "description" : "Email Identifier of the Customer"
                }
              }
            }
          }
        }
      },
      "CustomerClosureResponse1BodyInner" : {
        "type" : "object",
        "properties" : {
          "customerClosureId" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Identifier of customer closure request"
          },
          "exitReason" : {
            "maxLength" : 80,
            "type" : "string",
            "description" : "The field reflects the customer exit reason of the customer or prospect"
          },
          "reopenedDate" : {
            "maxLength" : 11,
            "type" : "string",
            "description" : "Indicates if the customer who had exited the relationship with the bank is reopened"
          },
          "customerId" : {
            "maxLength" : 10,
            "type" : "string",
            "description" : "Identifier of the customer"
          },
          "exitStatus" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "The field reflects the customer exit status of a customer or prospect"
          },
          "remarks" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "General comments / notes"
          },
          "requestStatus" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "The current status of the request. The possible values includes New, send to printer, cancelled and processed"
          },
          "exitDate" : {
            "maxLength" : 11,
            "type" : "string",
            "description" : "The field reflects the customer exit date of the customer or prospect"
          }
        }
      },
      "CustomerPhoneAddressBody" : {
        "type" : "object",
        "properties" : {
          "iddPrefixMobile" : {
            "maxLength" : 16,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the international calling prefix code of the mobile"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "mobileNumber" : {
            "maxLength" : 17,
            "minLength" : 0,
            "type" : "string",
            "description" : "Mobile number of the customer"
          },
          "customerShortNames" : {
            "type" : "array",
            "description" : "Denotes the Short name registered for a customer",
            "items" : {
              "$ref" : "#/components/schemas/CustomerProfileResponseBodyCustomerShortNames"
            }
          }
        }
      },
      "CustomerResponseBody" : {
        "type" : "object",
        "properties" : {
          "customerMnemonic" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies an alternative easy means of referencing the Customer"
          },
          "manualRiskClass" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Customer's risk class updated manually by the User overriding the risk class calculated by the KYC process"
          },
          "addresses" : {
            "type" : "array",
            "description" : "Contains the communication address of the customer or full address of the property",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyAddresses"
            }
          },
          "numberOfDependents" : {
            "maximum" : 2,
            "minimum" : 0,
            "type" : "number",
            "description" : "Specifies the number of dependents to the customer"
          },
          "streets" : {
            "type" : "array",
            "description" : "Contains the street name of the customer or the property",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyStreets"
            }
          },
          "introducer" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Name of the person who introduced the Customer to the bank"
          },
          "contactDate" : {
            "type" : "string",
            "description" : "Date that first contact was made with the Customer",
            "format" : "date"
          },
          "overrideReason" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Reason for changing the customer's risk class from the calculated risk class"
          },
          "language" : {
            "maximum" : 2,
            "minimum" : 0,
            "type" : "number",
            "description" : "The language that the contents of the field are displayed in"
          },
          "communicationDevices" : {
            "type" : "array",
            "description" : "Indicates the communication details of the customer like PhoneNumber, email",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyCommunicationDevices"
            }
          },
          "kycLastReviewDate" : {
            "type" : "string",
            "description" : "Date customer KYC information was last reviewed",
            "format" : "date"
          },
          "taxIds" : {
            "type" : "array",
            "description" : "Holds the Customer's TAX/SSN Id",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyTaxIds"
            }
          },
          "industryId" : {
            "maximum" : 10,
            "minimum" : 0,
            "type" : "number",
            "description" : "An institution-defined identifier of the industry in which the customer is trading, operating or is associated with"
          },
          "customerType" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the type of customers. Example Personal, Business, Corporate, etc"
          },
          "accountOfficerId" : {
            "maximum" : 4,
            "minimum" : 0,
            "type" : "number",
            "description" : "The identifier of the department head or specific account officer responsible for the customer"
          },
          "customerCompany" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Branch of the customer. Accepts the id of the COMPANY which shares customer with currently signed in company"
          },
          "isSecureMessage" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "If 'Yes', then the customer will receive a SECURE message"
          },
          "sectorId" : {
            "maximum" : 10,
            "minimum" : 0,
            "type" : "number",
            "description" : "An institution-defined identifier of the type of customer"
          },
          "customerLiability" : {
            "maximum" : 10,
            "minimum" : 0,
            "type" : "number",
            "description" : "Indicates the customer consolidation number for credit grouping purposes, within the same branch/country"
          },
          "addressCities" : {
            "type" : "array",
            "description" : "The town and/or city component of the base address of a customer",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyAddressCities"
            }
          },
          "nationalityId" : {
            "maxLength" : 2,
            "minLength" : 0,
            "type" : "string",
            "description" : "The identifier of the nationality of a customer"
          },
          "givenName" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string",
            "description" : "Customer's given name"
          },
          "amlLastResultDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "The last date when Anti Money Laundering result is performed and updated"
          },
          "countries" : {
            "type" : "array",
            "description" : "Identifies the country of the customer or a property or organization",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyCountries"
            }
          },
          "kycNextSystemReviewDate" : {
            "type" : "string",
            "description" : "Date system has calculated customer should next be reviewed",
            "format" : "date"
          },
          "residenceDetails" : {
            "type" : "array",
            "description" : "Indicates the residence details of Customer or entity like type, status, value",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyResidenceDetails"
            }
          },
          "amlCheck" : {
            "maxLength" : 4,
            "minLength" : 0,
            "type" : "string",
            "description" : "Describe the legal controls that is required by institutions to prevent or report Anti Money Laundering activities. It can have YES, SENT or NULL values"
          },
          "residenceId" : {
            "maxLength" : 2,
            "minLength" : 0,
            "type" : "string",
            "description" : "The identifier of the country of residence of a customer"
          },
          "otherNationalityIds" : {
            "type" : "array",
            "description" : "Other Nationality of the Customer",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyOtherNationalityIds"
            }
          },
          "postingRestrictIds" : {
            "type" : "array",
            "description" : "Identifies any restrictions for posting entries that are imposed on a Customer",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyPostingRestrictIds"
            }
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "kycNextReviewDate" : {
            "type" : "string",
            "description" : "Next date of KYC review defined manually by the User",
            "format" : "date"
          },
          "postCode" : {
            "maximum" : 35,
            "minimum" : 0,
            "type" : "number",
            "description" : "Identifies the address postal code for the customer or the property"
          },
          "maritalStatus" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Marital status of the customer"
          },
          "lastName" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string",
            "description" : "The last name of an individual customer"
          },
          "gender" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Gender of the Individual Customer"
          },
          "dateOfDeath" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "The death date of customer"
          },
          "faxIds" : {
            "type" : "array",
            "description" : "The fax (facsimile) number of the customer",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyFaxIds"
            }
          },
          "customerNames" : {
            "type" : "array",
            "description" : "Indicates the name of the customer. Originator is the party who requests the payment cancellation",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyCustomerNames"
            }
          },
          "taxResidenceRegion" : {
            "maxLength" : 9,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the residence region of country used for capital gains tax purposes"
          },
          "otherOfficers" : {
            "type" : "array",
            "description" : "Specifies the additional officers who can assist with a product/arrangement",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyOtherOfficers"
            }
          },
          "title" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Main menu title or header which the user wants to display on the screen when requesting the display of this main menu. This field can be expanded to allow the user to enter the description of the main menu in various languages"
          },
          "customerStatus" : {
            "maximum" : 4,
            "minimum" : 0,
            "type" : "number",
            "description" : "The internal bank status of a customer"
          },
          "officePhoneNumbers" : {
            "type" : "array",
            "description" : "The office phone number of the customer",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyOfficePhoneNumbers"
            }
          },
          "isKycComplete" : {
            "type" : "boolean",
            "description" : "Whether information related to the customer has been collected and verified"
          },
          "amlResult" : {
            "maxLength" : 14,
            "minLength" : 0,
            "type" : "string",
            "description" : "Describe the results of Anti Money Laundering"
          },
          "employDetails" : {
            "type" : "array",
            "description" : "Indicates the employment details of Customer like Status, title, occupation",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyEmployDetails"
            }
          },
          "displayNames" : {
            "type" : "array",
            "description" : "Contains the name used for display or enrichment purposes",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyDisplayNames"
            }
          },
          "kycRelationship" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the Customer Relationship details of the customer"
          },
          "dateOfBirth" : {
            "type" : "string",
            "description" : "The date of birth of an individual customer",
            "format" : "date"
          },
          "contactDetails" : {
            "type" : "array",
            "description" : "Contains the contact details of the customer",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyContactDetails"
            }
          },
          "target" : {
            "maximum" : 4,
            "minimum" : 0,
            "type" : "number",
            "description" : "Specifies how the Customer is considered by the bank and how he fits in with the Account Officer's overall marketing strategy"
          },
          "relationshipDetails" : {
            "type" : "array",
            "description" : "Indicates the details of Relationship maintained by the Customer or Entity",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyRelationshipDetails"
            }
          },
          "birthIncorpDate" : {
            "type" : "string",
            "description" : "Date on which the entity is incorporated",
            "format" : "date"
          },
          "domicile" : {
            "maxLength" : 9,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates country of domicile"
          },
          "legalDetails" : {
            "type" : "array",
            "description" : "Indicates the legal document details of the Customer",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyLegalDetails"
            }
          }
        }
      },
      "CustomerGroupDelete" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          }
        },
        "description" : "CustomerGroupDelete"
      },
      "ProspectCustomerBodyPostCodes" : {
        "type" : "object",
        "properties" : {
          "postCode" : {
            "maxLength" : 60,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the address postal code for the customer or the property"
          }
        }
      },
      "CustomerRelationshipResponseBody" : {
        "type" : "object",
        "properties" : {
          "originatingRelation" : {
            "type" : "array",
            "description" : "Details about the Customer Relationships and Party Relationships",
            "items" : {
              "$ref" : "#/components/schemas/CustomerRelationshipBodyOriginatingRelation"
            }
          },
          "customerRelationGroupId" : {
            "maximum" : 15,
            "minimum" : 0,
            "type" : "number",
            "description" : "Identifies the key to Customer Relationship Group to form a relation"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "purposeOfRelationship" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "The purpose of the relationship between the Originating Party and the Related Party. Valid options - TAX, LIMIT, ADVICES, OTHERS or can be left blank"
          },
          "customerRelationGroupName" : {
            "maxLength" : 40,
            "minLength" : 0,
            "type" : "string",
            "description" : "Name of a Customer Relationship Group if applicable to the relationship"
          }
        }
      },
      "CustomerChargeResponseBody" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "taxGroups" : {
            "type" : "array",
            "description" : "Defines the Actual Tax Group which the customer is calculated to be a member of for associated tax type",
            "items" : {
              "$ref" : "#/components/schemas/CustomerChargeBodyTaxGroups"
            }
          }
        }
      },
      "CustomerPrintAddressDelete" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          }
        },
        "description" : "CustomerPrintAddressDelete"
      },
      "PartyRelationshipResponse1Body" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/PartyRelationshipResponse1BodyInner"
        }
      },
      "CustomerPrintAddressResponse1" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ScreenHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerPrintAddressResponse1Body"
          }
        },
        "description" : "CustomerPrintAddressResponse1"
      },
      "CustomerDeliveryOptionsResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "deliveryPreferences" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "messageGroup" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Message group name that provides details of all Messages to be triggered."
                },
                "carrier" : {
                  "maxLength" : 10,
                  "type" : "string",
                  "description" : "Carrier to be used for processing the messages"
                },
                "isRequired" : {
                  "type" : "boolean",
                  "description" : "Indicates if the related delivery carrier details will be added or removed as a preferred carrier for communication"
                },
                "address" : {
                  "maxLength" : 3,
                  "type" : "string",
                  "description" : "Contains the communication address of the customer or full address of the property"
                }
              }
            }
          },
          "customerId" : {
            "maximum" : 35,
            "type" : "number",
            "description" : "Identifier of the customer"
          }
        }
      },
      "CustomerProfileResponseBody" : {
        "type" : "object",
        "properties" : {
          "country" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the country of the customer or a property or organization"
          },
          "subDepartmentId" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains a sub-division identifier of a large organisation or building"
          },
          "dateofBirth" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "The date of birth of an individual customer"
          },
          "numberOfDependents" : {
            "maxLength" : 2,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies the number of dependents to the customer"
          },
          "introducer" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Name of the person who introduced the Customer to the bank"
          },
          "contactDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Date that first contact was made with the Customer"
          },
          "departmentId" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Department identifier"
          },
          "residenceType" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Residence type of the customer like Farmhouse, Independent house, Residential Apartment, Serviced Apartments"
          },
          "customerType" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the type of customers. Example Personal, Business, Corporate, etc"
          },
          "buildingNumber" : {
            "maxLength" : 16,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the building number where customer resides"
          },
          "addressLine1" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates first line of the address of the BIC"
          },
          "addressLine2" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates second line of the address of the BIC"
          },
          "state" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Represents a subdivision of a country such as state, region, country"
          },
          "addressCity" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "The town and/or city component of the base address of a customer"
          },
          "sectorId" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "An institution-defined identifier of the type of customer"
          },
          "customerRatings" : {
            "type" : "array",
            "description" : "Indicates the rating of the customer",
            "items" : {
              "$ref" : "#/components/schemas/CustomerProfileResponseBodyCustomerRatings"
            }
          },
          "nationalityId" : {
            "maxLength" : 2,
            "minLength" : 0,
            "type" : "string",
            "description" : "The identifier of the nationality of a customer"
          },
          "residenceId" : {
            "maxLength" : 2,
            "minLength" : 0,
            "type" : "string",
            "description" : "The identifier of the country of residence of a customer"
          },
          "buildingName" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the name of the building where customer resides"
          },
          "accountOfficer" : {
            "maxLength" : 4,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of Department Account Officer"
          },
          "companyId" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "customerShortNames" : {
            "type" : "array",
            "description" : "Denotes the Short name registered for a customer",
            "items" : {
              "$ref" : "#/components/schemas/CustomerProfileResponseBodyCustomerShortNames"
            }
          },
          "spokenLanguages" : {
            "type" : "array",
            "description" : "Customers native language or the language that can be used for communication",
            "items" : {
              "$ref" : "#/components/schemas/CustomerProfileResponseBodySpokenLanguages"
            }
          },
          "postCode" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the address postal code for the customer or the property"
          },
          "nameAliases" : {
            "type" : "array",
            "description" : "Contains the alias name or additional surname of the customer",
            "items" : {
              "$ref" : "#/components/schemas/CustomerProfileResponseBodyNameAliases"
            }
          },
          "salutation" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the greeting to be used for communications with the customer"
          },
          "maritalStatus" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Marital status of the customer"
          },
          "apartmentNumber" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the apartment number of the customer address"
          },
          "otherOfficerIds" : {
            "type" : "array",
            "description" : "Other officers managing the Customer",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyOtherOfficers"
            }
          },
          "notificationDateOfDeath" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "The date on which the bank gets the notification that the customer is dead"
          },
          "gender" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Gender of the Individual Customer"
          },
          "dateOfDeath" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "The death date of customer"
          },
          "customerNames" : {
            "type" : "array",
            "description" : "Indicates the name of the customer. Originator is the party who requests the payment cancellation",
            "items" : {
              "$ref" : "#/components/schemas/CustomerProfileResponseBodyCustomerNames"
            }
          },
          "title" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Main menu title or header which the user wants to display on the screen when requesting the display of this main menu. This field can be expanded to allow the user to enter the description of the main menu in various languages"
          },
          "customerStatus" : {
            "maxLength" : 4,
            "minLength" : 0,
            "type" : "string",
            "description" : "The internal bank status of a customer"
          },
          "street" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the street name of the customer or the property"
          },
          "floorNumber" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the floor number of the customer address"
          },
          "customerNameAdditionals" : {
            "type" : "array",
            "description" : "Continuation/Extension to the Customer Name",
            "items" : {
              "$ref" : "#/components/schemas/CustomerProfileResponseBodyCustomerNameAdditionals"
            }
          },
          "industryName" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Industry associated with the Customer"
          },
          "locationName" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies specific location name with in the country or town"
          },
          "languageId" : {
            "maxLength" : 2,
            "minLength" : 0,
            "type" : "string",
            "description" : "Represents the language code of the underlying Entity/Company/Branch"
          },
          "addressVerifier" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the party or service which was used for address confirmation purposes"
          },
          "addressPurpose" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the purpose or usage of the address. Allowed values are CTC (Communication to Customer), CTICOP(Communication to In Care Of Party) or CTOP(Communication to Other Party)"
          },
          "target" : {
            "maxLength" : 4,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies how the Customer is considered by the bank and how he fits in with the Account Officer's overall marketing strategy"
          },
          "customerSince" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Date Since Customer is held in the system"
          },
          "birthIncorpDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Date on which the entity is incorporated"
          },
          "citizenships" : {
            "type" : "array",
            "description" : "Identifies the citizenship details of Customer",
            "items" : {
              "$ref" : "#/components/schemas/CustomerProfileResponseBodyCitizenships"
            }
          },
          "postBoxNumber" : {
            "maxLength" : 16,
            "minLength" : 0,
            "type" : "string",
            "description" : "Post Office Box (POB) number that relates to financial institution"
          },
          "townCountry" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "The town and country associated with the address"
          }
        }
      },
      "CustomerMandatesResponseBody" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "mandateDetails" : {
            "type" : "array",
            "description" : "Holds the Mandate details such as apllication and mandate rules to be followed for transactions done using that specific application",
            "items" : {
              "$ref" : "#/components/schemas/CustomerMandatesResponseBodyMandateDetails"
            }
          }
        }
      },
      "CustomerResponseBodyCommunicationDevices" : {
        "type" : "object",
        "properties" : {
          "phoneNumber" : {
            "maxLength" : 17,
            "minLength" : 0,
            "type" : "string",
            "description" : "The phone number of the customer or prospect"
          },
          "preferredChannel" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "description" : "Preferred method of contact to the customer"
          },
          "smsNumber" : {
            "maxLength" : 17,
            "minLength" : 0,
            "type" : "string",
            "description" : "The mobile SMS number of the customer"
          },
          "communicationType" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Communication type to the customer, as defined by the institution. E.g. Proposal, Alert, Campaign, New Product Update, Robinson List, Statement"
          },
          "email" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string",
            "description" : "Email Identifier of the Customer"
          }
        }
      },
      "CustomerPrintAddressResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerPrintAddressResponseBody"
          }
        },
        "description" : "CustomerPrintAddressResponse"
      },
      "ProspectCustomerBodyPhoneNumbers" : {
        "type" : "object",
        "properties" : {
          "phoneNumber" : {
            "maxLength" : 17,
            "minLength" : 0,
            "type" : "string",
            "description" : "The phone number of the customer or prospect"
          }
        }
      },
      "CustomerInformationResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "customerMnemonic" : {
            "maxLength" : 10,
            "type" : "string",
            "description" : "Specifies an alternative easy means of referencing the Customer"
          },
          "lastName" : {
            "maxLength" : 50,
            "type" : "string",
            "description" : "The last name of an individual customer"
          },
          "addresses" : {
            "type" : "array",
            "description" : "Contains the communication address of the customer or full address of the property",
            "items" : {
              "type" : "object",
              "properties" : {
                "street" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Contains the street name of the customer or the property"
                },
                "address" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Contains the communication address of the customer or full address of the property"
                },
                "addressCity" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "The town and/or city component of the base address of a customer"
                },
                "postCode" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Identifies the address postal code for the customer or the property"
                },
                "country" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Identifies the country of the customer or a property or organization"
                }
              }
            }
          },
          "targetName" : {
            "maxLength" : 4,
            "type" : "string",
            "description" : "Describes the target in an abbreviated form which can be used for reporting when space is limited.This can be expanded to allow the User to enter a short description of the Target code in various languages. "
          },
          "notificationDateOfDeath" : {
            "type" : "string",
            "description" : "The date on which the bank gets the notification that the customer is dead",
            "format" : "date"
          },
          "gender" : {
            "maxLength" : 10,
            "type" : "string",
            "description" : "Gender of the Individual Customer"
          },
          "dateOfDeath" : {
            "type" : "string",
            "description" : "The death date of customer",
            "format" : "date"
          },
          "postingRestrictions" : {
            "type" : "array",
            "description" : "Identifies any restrictions for posting entries that are to be imposed on the Account",
            "items" : {
              "type" : "object",
              "properties" : {
                "postingRestrictId" : {
                  "maxLength" : 2,
                  "type" : "string",
                  "description" : "Identifies any restrictions for posting entries that are imposed on a Customer"
                },
                "postingRestrictName" : {
                  "type" : "string",
                  "description" : "Contains the short name of the posting restrict identifier"
                }
              }
            }
          },
          "nationalityName" : {
            "maxLength" : 2,
            "type" : "string",
            "description" : "Name of the Nationality of the Customer"
          },
          "profileTypes" : {
            "type" : "array",
            "description" : "Identifies the type of profile that can be assigned to the customer. Bank needs to profile its clients in order to be effective in cross selling and campaign management",
            "items" : {
              "type" : "object",
              "properties" : {
                "profileType" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Identifies the type of profile that can be assigned to the customer. Bank needs to profile its clients in order to be effective in cross selling and campaign management."
                },
                "profileTypeName" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Specifies the description of the profile Type."
                },
                "profile" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Identifies the profile that can be assigned to the customer. Bank needs to profile its clients in order to be effective in cross selling and campaign management."
                },
                "profileName" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Specifies the description of the profile."
                }
              }
            }
          },
          "language" : {
            "maxLength" : 2,
            "type" : "string",
            "description" : "The language that the contents of the field are displayed in"
          },
          "title" : {
            "maxLength" : 15,
            "type" : "string",
            "description" : "Main menu title or header which the user wants to display on the screen when requesting the display of this main menu. This field can be expanded to allow the user to enter the description of the main menu in various languages"
          },
          "taxIds" : {
            "type" : "array",
            "description" : "Holds the Customer's TAX/SSN Id",
            "items" : {
              "type" : "object",
              "properties" : {
                "taxId" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Holds the Customer's TAX/SSN Id."
                }
              }
            }
          },
          "languageName" : {
            "maxLength" : 2,
            "type" : "string",
            "description" : "Represents the language name of the underlying Entity/Company/Branch"
          },
          "customerStatus" : {
            "maxLength" : 4,
            "type" : "string",
            "description" : "The internal bank status of a customer"
          },
          "industryId" : {
            "maximum" : 4,
            "type" : "number",
            "description" : "An institution-defined identifier of the industry in which the customer is trading, operating or is associated with"
          },
          "customerType" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Identifies the type of customers. Example Personal, Business, Corporate, etc"
          },
          "faxId" : {
            "maxLength" : 17,
            "type" : "string",
            "description" : "The fax (facsimile) number of the customer"
          },
          "accountOfficerId" : {
            "maximum" : 4,
            "type" : "number",
            "description" : "The identifier of the department head or specific account officer responsible for the customer"
          },
          "customerId" : {
            "maxLength" : 10,
            "type" : "string",
            "description" : "Identifier of the customer"
          },
          "statusName" : {
            "maxLength" : 4,
            "type" : "string",
            "description" : "An institution-defined high level description or segmentation of the customer"
          },
          "accountOfficerName" : {
            "maxLength" : 4,
            "type" : "string",
            "description" : "Name of the account or relationship officer attached to the Customer"
          },
          "residenceName" : {
            "maxLength" : 2,
            "type" : "string",
            "description" : "Name of the residence country"
          },
          "industryName" : {
            "maxLength" : 4,
            "type" : "string",
            "description" : "Industry associated with the Customer"
          },
          "sectorId" : {
            "maximum" : 4,
            "type" : "number",
            "description" : "An institution-defined identifier of the type of customer"
          },
          "customerLiability" : {
            "maxLength" : 10,
            "type" : "string",
            "description" : "Indicates the customer consolidation number for credit grouping purposes, within the same branch/country"
          },
          "employmentDetails" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "employmentStatus" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Identifies the employment status of the customer"
                }
              }
            }
          },
          "nationalityId" : {
            "maxLength" : 2,
            "type" : "string",
            "description" : "The identifier of the nationality of a customer"
          },
          "dateOfBirth" : {
            "type" : "string",
            "description" : "The date of birth of an individual customer",
            "format" : "date"
          },
          "sectorName" : {
            "maxLength" : 4,
            "type" : "string",
            "description" : "An institution-defined identifier of the type of customer"
          },
          "contactDetails" : {
            "type" : "array",
            "description" : "Contains the contact details of the customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "phoneNumbers" : {
                  "type" : "array",
                  "description" : "The phone number of the customer or prospect",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "phoneNumber" : {
                        "maxLength" : 17,
                        "type" : "string",
                        "description" : "The phone number of the customer or prospect"
                      }
                    }
                  }
                },
                "officePhoneNumbers" : {
                  "type" : "array",
                  "description" : "The office phone number of the customer",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "officePhoneNumber" : {
                        "maxLength" : 17,
                        "type" : "string",
                        "description" : "The office phone number of the customer"
                      }
                    }
                  }
                },
                "mobilePhoneNumbers" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "mobilePhoneNumber" : {
                        "maxLength" : 17,
                        "type" : "string",
                        "description" : "Represents the phone number of a customer"
                      }
                    }
                  }
                },
                "emails" : {
                  "type" : "array",
                  "description" : "Email Identifier of the Customer",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "email" : {
                        "maxLength" : 50,
                        "type" : "string",
                        "description" : "Email Identifier of the Customer"
                      }
                    }
                  }
                },
                "addressLocations" : {
                  "type" : "array",
                  "description" : "Identifies the nature of the postal address, like primary, secondary or office address",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "addressLocation" : {
                        "maxLength" : 10,
                        "type" : "string",
                        "description" : "Identifies the nature of the postal address, like primary, secondary or office address"
                      }
                    }
                  }
                },
                "Contacts" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "contactType" : {
                        "maxLength" : 35,
                        "type" : "string",
                        "description" : "Types of contacts available to users to communicate"
                      },
                      "contactData" : {
                        "maxLength" : 254,
                        "type" : "string",
                        "description" : "Indicates the contact data of customer used for communication such as phone or mobile or e-mail address."
                      },
                      "iddPrefixPhone" : {
                        "maxLength" : 16,
                        "type" : "string",
                        "description" : "Identifies the international calling prefix code of the phone or mobile number."
                      }
                    }
                  }
                }
              }
            }
          },
          "customerName" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Indicates the name of the customer. Originator is the party who requests the payment cancellation"
          },
          "residenceId" : {
            "maxLength" : 2,
            "type" : "string",
            "description" : "The identifier of the country of residence of a customer"
          },
          "versionNumber" : {
            "maxLength" : 6,
            "type" : "string",
            "description" : "Current number of the record"
          },
          "target" : {
            "maxLength" : 4,
            "type" : "string",
            "description" : "Specifies how the Customer is considered by the bank and how he fits in with the Account Officer's overall marketing strategy"
          },
          "legalDocuments" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "legalId" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Unique reference number of the legal documents submitted as identification proof"
                },
                "legalDocumentName" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Name of the legal documents such as passport, driving licence etc., provided as identification proof"
                },
                "legalHolderName" : {
                  "maxLength" : 100,
                  "type" : "string",
                  "description" : "Name of the account holder in the Legal Document"
                },
                "legalIssueAuthorisedDate" : {
                  "type" : "string",
                  "description" : "Authority who issued the legal document",
                  "format" : "date"
                },
                "legalIssueDate" : {
                  "type" : "string",
                  "description" : "Date of Issue of the legal document",
                  "format" : "date"
                },
                "legalExpiredDate" : {
                  "type" : "string",
                  "description" : "Expiry date of the legal document submitted as proof",
                  "format" : "date"
                }
              }
            }
          },
          "customerSince" : {
            "type" : "string",
            "description" : "Date Since Customer is held in the system",
            "format" : "date"
          },
          "firstName" : {
            "maxLength" : 50,
            "type" : "string",
            "description" : "Specifies customer's first name"
          },
          "otherNationalityIds" : {
            "type" : "array",
            "description" : "Other Nationality of the Customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "otherNationalityId" : {
                  "maxLength" : 9,
                  "type" : "string",
                  "description" : "Other Nationality of the Customer"
                }
              }
            }
          },
          "companyId" : {
            "maxLength" : 11,
            "type" : "string",
            "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "birthIncorpDate" : {
            "type" : "string",
            "description" : "Date on which the entity is incorporated",
            "format" : "date"
          },
          "customerNameAdditional" : {
            "maxLength" : 70,
            "type" : "string",
            "description" : "Continuation/Extension to the Customer Name"
          },
          "vulnerabilities" : {
            "type" : "array",
            "description" : "The type of vulnerability (physical impairment) the customer had",
            "items" : {
              "type" : "object",
              "properties" : {
                "vulnerability" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "The type of vulnerability (physical impairment) the customer had."
                }
              }
            }
          },
          "preferredChannels" : {
            "type" : "array",
            "description" : "Preferred method of contact to the customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "preferredChannel" : {
                  "maxLength" : 20,
                  "type" : "string",
                  "description" : "Preferred method of contact to the customer"
                }
              }
            }
          },
          "relCust" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "relCustomer" : {
                  "maxLength" : 10,
                  "type" : "string",
                  "description" : "Customers linked or related to the arrangement owner"
                },
                "relationshipCode" : {
                  "maxLength" : 3,
                  "type" : "string",
                  "description" : "Relationship identifier between the partyType and relatedPartyType"
                },
                "relCustomerFirstName" : {
                  "maxLength" : 10,
                  "type" : "string",
                  "description" : "Specifies related customer's first name"
                },
                "relCustomerLastName" : {
                  "maxLength" : 10,
                  "type" : "string",
                  "description" : "The last name of the related customer"
                },
                "relCustomerDateOfBirth" : {
                  "type" : "string",
                  "description" : "The date of birth of the related customer",
                  "format" : "date"
                },
                "relCustomerTaxId" : {
                  "maxLength" : 10,
                  "type" : "string",
                  "description" : "Holds the related Customer's TAX/SSN Id."
                },
                "relCustomerPhoneNumber" : {
                  "maxLength" : 10,
                  "type" : "string",
                  "description" : "The phone number of the related customer or prospect"
                },
                "relCustomerEmail" : {
                  "maxLength" : 10,
                  "type" : "string",
                  "description" : "Email Identifier of the related Customer"
                },
                "relCustomerPostCode" : {
                  "maxLength" : 10,
                  "type" : "string",
                  "description" : "Identifies the address postal code of the related customer."
                },
                "relCustomerStreet" : {
                  "maxLength" : 10,
                  "type" : "string",
                  "description" : "Contains the first line of the related customer's base address, example building number, street number etc."
                },
                "relCustomerTownCountry" : {
                  "maxLength" : 10,
                  "type" : "string",
                  "description" : "Indicates the town and country associated with the address of the related customer"
                },
                "relCustomerSalutation" : {
                  "maxLength" : 10,
                  "type" : "string",
                  "description" : "Identifies the greeting used for communicating with the related customer"
                },
                "relCustomerMaritalStatus" : {
                  "maxLength" : 10,
                  "type" : "string",
                  "description" : "Indicates the Marital status of the related customer"
                },
                "relCustomerEmploymentStatus" : {
                  "maxLength" : 10,
                  "type" : "string",
                  "description" : "Identifies the employment status of the related customer"
                }
              }
            }
          },
          "maritalStatus" : {
            "maxLength" : 15,
            "type" : "string",
            "description" : "Marital status of the customer"
          }
        }
      },
      "FatcaCustomerResponseBody" : {
        "type" : "object",
        "properties" : {
          "tinDetails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FatcaCustomerBodyTinDetails"
            }
          },
          "Owner" : {
            "type" : "array",
            "description" : "User who defines the Campaign",
            "items" : {
              "$ref" : "#/components/schemas/FatcaCustomerBodyOwner"
            },
            "x-ballerina-name" : "owner"
          },
          "currentStatusExpiry" : {
            "type" : "string",
            "description" : "Specifies the date on which the current status got expired",
            "format" : "date"
          },
          "changeReason" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies the reason (if any) for any status change"
          },
          "isPoa" : {
            "maxLength" : 5,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies whether there is power of attorney(POA) to a person with US Address. Possible values YES/NO"
          },
          "isPlaceOfBirthUs" : {
            "maxLength" : 5,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the citizenship details of customer. If blank it defaults to US"
          },
          "socialSecurityNumber" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the Social Security number of the customer"
          },
          "fatcaClientType" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the type of client.E.g Individual, Entity etc"
          },
          "residenceId" : {
            "maxLength" : 9,
            "minLength" : 0,
            "type" : "string",
            "description" : "The identifier of the country of residence of a customer"
          },
          "statusChangeDate" : {
            "type" : "string",
            "description" : "Identifies the effective date of change of status",
            "format" : "date"
          },
          "fatcaStatus" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies the Fatca status or Account Classification of the client. "
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "standingInstructionOnUsAccount" : {
            "maxLength" : 5,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies whether there is any standing instruction to an account in US. Possible values YES/NO"
          },
          "phoneNumber" : {
            "maxLength" : 5,
            "minLength" : 0,
            "type" : "string",
            "description" : "The phone number of the customer or prospect"
          },
          "entityStatus" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies the self-classification received from entities "
          },
          "citizenships" : {
            "type" : "array",
            "description" : "Identifies the citizenship details of Customer",
            "items" : {
              "$ref" : "#/components/schemas/FatcaCustomerBodyCitizenships"
            }
          },
          "giin" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies the Global Intermediary Identification Numbers of financial institutions"
          },
          "domicile" : {
            "maxLength" : 9,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates country of domicile"
          },
          "accountInstructionfromUs" : {
            "maxLength" : 5,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies if account has any instructions from a US address. Possible values YES or NO"
          },
          "JointOwner" : {
            "type" : "array",
            "description" : "Indicates if customer is a joint owner",
            "items" : {
              "$ref" : "#/components/schemas/FatcaCustomerBodyJointOwner"
            },
            "x-ballerina-name" : "jointOwner"
          },
          "greencardDetails" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the greencard details of the client"
          },
          "isKycChecked" : {
            "maxLength" : 5,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies if the KYC check has been done or not. Possible values YES or NO"
          },
          "isDormantAccount" : {
            "maxLength" : 5,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies whether there is no contact that could be established with the client. Possible values YES or NO"
          },
          "statusNarrative" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies any free format narrative related to FATCA status"
          }
        }
      },
      "CustomerExitStatusResponse1Body" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "exitReason" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "The field reflects the customer exit reason of the customer or prospect"
          },
          "exitStatus" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "The field reflects the customer exit status of a customer or prospect"
          }
        }
      },
      "CustomerRequestsResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CustomerRequestsResponseBodyInner"
        }
      },
      "CustomerResponseBodyResidenceDetails" : {
        "type" : "object",
        "properties" : {
          "residenceType" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Residence type of the customer like Farmhouse, Independent house, Residential Apartment, Serviced Apartments"
          },
          "residenceSince" : {
            "type" : "string",
            "description" : "The date since the user has obtained the residence",
            "format" : "date"
          },
          "residenceValue" : {
            "maximum" : 19,
            "minimum" : 0,
            "type" : "number",
            "description" : "Market Value of the customer's residence"
          },
          "residenceStatus" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Residence Status of the Customer for CRM purpose like Owner, Tenant, Householder, Nester etc"
          },
          "residenceMortgageValue" : {
            "maximum" : 19,
            "minimum" : 0,
            "type" : "number",
            "description" : "Mortgage value of the residence property of the customer"
          }
        }
      },
      "CustomerLegalDocumentsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ScreenHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerLegalDocumentsResponseBody"
          }
        },
        "description" : "CustomerLegalDocumentsResponse"
      },
      "CustomerPhoneAddressResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerPhoneAddressResponseBody"
          }
        },
        "description" : "CustomerPhoneAddressResponse"
      },
      "CustomerProfileResponseBodyCustomerNames" : {
        "type" : "object",
        "properties" : {
          "customerName" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the name of the customer. Originator is the party who requests the payment cancellation"
          }
        }
      },
      "CustomerResponseBodyStreets" : {
        "type" : "object",
        "properties" : {
          "street" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the street name of the customer or the property"
          }
        }
      },
      "CustomerPersonalDetailsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerPersonalDetailsResponseBody"
          }
        },
        "description" : "CustomerPersonalDetailsResponse"
      },
      "CustomerGroupBodyPrimaryPartyDetails" : {
        "type" : "object",
        "properties" : {
          "primaryPartyId" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the customer defined as the primary party in an aggregate relationship"
          },
          "primaryPartyType" : {
            "maxLength" : 8,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the type of primary customer which is part of the aggregate relationship. It may be Customer, Person or Entity"
          }
        }
      },
      "CustomerGroupsResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "primaryPartyDetails" : {
            "type" : "array",
            "description" : "Contains primary pary details such as primary party id and primary party type",
            "items" : {
              "type" : "object",
              "properties" : {
                "primaryPartyType" : {
                  "maxLength" : 8,
                  "type" : "string",
                  "description" : "Indicates the type of primary customer which is part of the aggregate relationship. It may be Customer, Person or Entity"
                },
                "primaryPartyId" : {
                  "maxLength" : 10,
                  "type" : "string",
                  "description" : "Identifier of the customer defined as the primary party in an aggregate relationship."
                }
              }
            }
          },
          "groupName" : {
            "maxLength" : 40,
            "type" : "string",
            "description" : "The name that is displayed for the group"
          },
          "groupType" : {
            "maxLength" : 25,
            "type" : "string",
            "description" : "Indicates the type of entity that identifies the group eg. Parent or Member"
          },
          "companyId" : {
            "maxLength" : 9,
            "type" : "string",
            "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "relationshipDetails" : {
            "type" : "array",
            "description" : "Indicates the details of Relationship maintained by the Customer or Entity",
            "items" : {
              "type" : "object",
              "properties" : {
                "partyType" : {
                  "maxLength" : 13,
                  "type" : "string",
                  "description" : "Defines the application id, to which the party id belongs to. Example, CUSTOMER/PERSON.ENTITY."
                },
                "partyId" : {
                  "maxLength" : 10,
                  "type" : "string",
                  "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field."
                },
                "relationshipType" : {
                  "maxLength" : 3,
                  "type" : "string",
                  "description" : "Indicates the nature of the relationship between the two parties Parent-of, Subsidiary-of."
                },
                "relationshipName" : {
                  "maxLength" : 13,
                  "type" : "string",
                  "description" : "Indicates the description of the relationship between parties"
                },
                "groupRelationshipType" : {
                  "maxLength" : 3,
                  "type" : "string",
                  "description" : "Indicates the nature of the relationship between the two group of parties."
                },
                "relatedPartyType" : {
                  "maxLength" : 13,
                  "type" : "string",
                  "description" : "Indicates the related party's customer type. It may be Customer, Person or Entity."
                },
                "relatedPartyId" : {
                  "maxLength" : 10,
                  "type" : "string",
                  "description" : "Identifier of the Related Party"
                },
                "ownershipPercentage" : {
                  "maxLength" : 6,
                  "type" : "string",
                  "description" : "Contains the percentage contributed by specific owner of the asset or collateral"
                },
                "startDate" : {
                  "maxLength" : 11,
                  "type" : "string",
                  "description" : "Contains the date on which the transaction or payment gets initiated."
                },
                "excludeParty" : {
                  "maxLength" : 3,
                  "type" : "string",
                  "description" : "Indicates whether the party can be excluded from the customer group. Allowed values are YES or Blank"
                }
              }
            }
          },
          "subGroupDetails" : {
            "type" : "array",
            "description" : "Contains sub group details such as sub group id, sub group name, sub group customer etc",
            "items" : {
              "type" : "object",
              "properties" : {
                "groupId" : {
                  "maxLength" : 15,
                  "type" : "string",
                  "description" : "Unique ID of the group"
                },
                "groupName" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "The name that is displayed for the group"
                },
                "companyId" : {
                  "maxLength" : 9,
                  "type" : "string",
                  "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001."
                },
                "accountOfficer" : {
                  "maxLength" : 6,
                  "type" : "string",
                  "description" : "Identifier of Department Account Officer"
                },
                "partyDetails" : {
                  "type" : "array",
                  "description" : "Indicates the identifier for party details in which party id and party owner are defined",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "partyType" : {
                        "maxLength" : 13,
                        "type" : "string",
                        "description" : "Defines the application id, to which the party id belongs to. Example, CUSTOMER/PERSON.ENTITY."
                      },
                      "partyId" : {
                        "maxLength" : 10,
                        "type" : "string",
                        "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field."
                      }
                    }
                  }
                }
              }
            }
          },
          "groupId" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Unique ID of the group"
          },
          "liabilityNumber" : {
            "maxLength" : 10,
            "type" : "string",
            "description" : "Identifier of the Liability Customer to the credit limit"
          },
          "description" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Contains the description of purpose of the payment"
          },
          "groupPurposeId" : {
            "maxLength" : 15,
            "type" : "string",
            "description" : "Identifier of customer group purpose"
          }
        }
      },
      "CustomerEmailAddressDelete" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          }
        },
        "description" : "CustomerEmailAddressDelete"
      },
      "CustomerResponseBodyOtherOfficers" : {
        "type" : "object",
        "properties" : {
          "otherOfficerId" : {
            "maxLength" : 4,
            "minLength" : 0,
            "type" : "string",
            "description" : "Other officers managing the Customer"
          }
        }
      },
      "CustomerGroup" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerGroupBody"
          }
        },
        "description" : "CustomerGroup"
      },
      "CustomerSwiftAddressResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CustomerSwiftAddressResponseBodyInner"
        }
      },
      "CustomerExitStatusResponse1" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ScreenHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerExitStatusResponse1Body"
          }
        },
        "description" : "CustomerExitStatusResponse1"
      },
      "CustomerBody" : {
        "type" : "object",
        "properties" : {
          "customerMnemonic" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies an alternative easy means of referencing the Customer"
          },
          "manualRiskClass" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Customer's risk class updated manually by the User overriding the risk class calculated by the KYC process"
          },
          "addresses" : {
            "type" : "array",
            "description" : "Contains the communication address of the customer or full address of the property",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyAddresses"
            }
          },
          "numberOfDependents" : {
            "maximum" : 2,
            "minimum" : 0,
            "type" : "number",
            "description" : "Specifies the number of dependents to the customer"
          },
          "streets" : {
            "type" : "array",
            "description" : "Contains the street name of the customer or the property",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyStreets"
            }
          },
          "introducer" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Name of the person who introduced the Customer to the bank"
          },
          "contactDate" : {
            "type" : "string",
            "description" : "Date that first contact was made with the Customer",
            "format" : "date"
          },
          "overrideReason" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Reason for changing the customer's risk class from the calculated risk class"
          },
          "language" : {
            "maximum" : 2,
            "minimum" : 0,
            "type" : "number",
            "description" : "The language that the contents of the field are displayed in"
          },
          "communicationDevices" : {
            "type" : "array",
            "description" : "Indicates the communication details of the customer like PhoneNumber, email",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyCommunicationDevices"
            }
          },
          "kycLastReviewDate" : {
            "type" : "string",
            "description" : "Date customer KYC information was last reviewed",
            "format" : "date"
          },
          "taxIds" : {
            "type" : "array",
            "description" : "Holds the Customer's TAX/SSN Id",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyTaxIds"
            }
          },
          "industryId" : {
            "maximum" : 10,
            "minimum" : 0,
            "type" : "number",
            "description" : "An institution-defined identifier of the industry in which the customer is trading, operating or is associated with"
          },
          "customerType" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the type of customers. Example Personal, Business, Corporate, etc"
          },
          "accountOfficerId" : {
            "maximum" : 4,
            "minimum" : 0,
            "type" : "number",
            "description" : "The identifier of the department head or specific account officer responsible for the customer"
          },
          "customerCompany" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Branch of the customer. Accepts the id of the COMPANY which shares customer with currently signed in company"
          },
          "isSecureMessage" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "If 'Yes', then the customer will receive a SECURE message"
          },
          "sectorId" : {
            "maximum" : 10,
            "minimum" : 0,
            "type" : "number",
            "description" : "An institution-defined identifier of the type of customer"
          },
          "customerLiability" : {
            "maximum" : 10,
            "minimum" : 0,
            "type" : "number",
            "description" : "Indicates the customer consolidation number for credit grouping purposes, within the same branch/country"
          },
          "addressCities" : {
            "type" : "array",
            "description" : "The town and/or city component of the base address of a customer",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyAddressCities"
            }
          },
          "nationalityId" : {
            "maxLength" : 2,
            "minLength" : 0,
            "type" : "string",
            "description" : "The identifier of the nationality of a customer"
          },
          "givenName" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string",
            "description" : "Customer's given name"
          },
          "amlLastResultDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "The last date when Anti Money Laundering result is performed and updated"
          },
          "countries" : {
            "type" : "array",
            "description" : "Identifies the country of the customer or a property or organization",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyCountries"
            }
          },
          "kycNextSystemReviewDate" : {
            "type" : "string",
            "description" : "Date system has calculated customer should next be reviewed",
            "format" : "date"
          },
          "residenceDetails" : {
            "type" : "array",
            "description" : "Indicates the residence details of Customer or entity like type, status, value",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyResidenceDetails"
            }
          },
          "amlCheck" : {
            "maxLength" : 4,
            "minLength" : 0,
            "type" : "string",
            "description" : "Describe the legal controls that is required by institutions to prevent or report Anti Money Laundering activities. It can have YES, SENT or NULL values"
          },
          "residenceId" : {
            "maxLength" : 2,
            "minLength" : 0,
            "type" : "string",
            "description" : "The identifier of the country of residence of a customer"
          },
          "otherNationalityIds" : {
            "type" : "array",
            "description" : "Other Nationality of the Customer",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyOtherNationalityIds"
            }
          },
          "postingRestrictIds" : {
            "type" : "array",
            "description" : "Identifies any restrictions for posting entries that are imposed on a Customer",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyPostingRestrictIds"
            }
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "kycNextReviewDate" : {
            "type" : "string",
            "description" : "Next date of KYC review defined manually by the User",
            "format" : "date"
          },
          "postCode" : {
            "maximum" : 35,
            "minimum" : 0,
            "type" : "number",
            "description" : "Identifies the address postal code for the customer or the property"
          },
          "maritalStatus" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Marital status of the customer"
          },
          "lastName" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string",
            "description" : "The last name of an individual customer"
          },
          "gender" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Gender of the Individual Customer"
          },
          "dateOfDeath" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "The death date of customer"
          },
          "faxIds" : {
            "type" : "array",
            "description" : "The fax (facsimile) number of the customer",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyFaxIds"
            }
          },
          "customerNames" : {
            "type" : "array",
            "description" : "Indicates the name of the customer. Originator is the party who requests the payment cancellation",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyCustomerNames"
            }
          },
          "taxResidenceRegion" : {
            "maxLength" : 9,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the residence region of country used for capital gains tax purposes"
          },
          "otherOfficers" : {
            "type" : "array",
            "description" : "Specifies the additional officers who can assist with a product/arrangement",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyOtherOfficers"
            }
          },
          "title" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Main menu title or header which the user wants to display on the screen when requesting the display of this main menu. This field can be expanded to allow the user to enter the description of the main menu in various languages"
          },
          "customerStatus" : {
            "maximum" : 4,
            "minimum" : 0,
            "type" : "number",
            "description" : "The internal bank status of a customer"
          },
          "officePhoneNumbers" : {
            "type" : "array",
            "description" : "The office phone number of the customer",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyOfficePhoneNumbers"
            }
          },
          "isKycComplete" : {
            "type" : "boolean",
            "description" : "Whether information related to the customer has been collected and verified"
          },
          "amlResult" : {
            "maxLength" : 14,
            "minLength" : 0,
            "type" : "string",
            "description" : "Describe the results of Anti Money Laundering"
          },
          "employDetails" : {
            "type" : "array",
            "description" : "Indicates the employment details of Customer like Status, title, occupation",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyEmployDetails"
            }
          },
          "displayNames" : {
            "type" : "array",
            "description" : "Contains the name used for display or enrichment purposes",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyDisplayNames"
            }
          },
          "kycRelationship" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the Customer Relationship details of the customer"
          },
          "dateOfBirth" : {
            "type" : "string",
            "description" : "The date of birth of an individual customer",
            "format" : "date"
          },
          "contactDetails" : {
            "type" : "array",
            "description" : "Contains the contact details of the customer",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyContactDetails"
            }
          },
          "target" : {
            "maximum" : 4,
            "minimum" : 0,
            "type" : "number",
            "description" : "Specifies how the Customer is considered by the bank and how he fits in with the Account Officer's overall marketing strategy"
          },
          "relationshipDetails" : {
            "type" : "array",
            "description" : "Indicates the details of Relationship maintained by the Customer or Entity",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyRelationshipDetails"
            }
          },
          "birthIncorpDate" : {
            "type" : "string",
            "description" : "Date on which the entity is incorporated",
            "format" : "date"
          },
          "domicile" : {
            "maxLength" : 9,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates country of domicile"
          },
          "legalDetails" : {
            "type" : "array",
            "description" : "Indicates the legal document details of the Customer",
            "items" : {
              "$ref" : "#/components/schemas/CustomerResponseBodyLegalDetails"
            }
          }
        }
      },
      "CustomerExitStatusParamResponse1Body" : {
        "type" : "object",
        "properties" : {
          "exitStatusDescription" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "The field reflects the description of, respective customer exit status"
          },
          "customerType" : {
            "maxLength" : 8,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the type of customers. Example Personal, Business, Corporate, etc"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "allowRemoveExitStatus" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies if the bank user will be allowed to re-open a professional relationship with the respective prospect or customer by removing its exit status"
          },
          "allowedExitReasons" : {
            "type" : "array",
            "description" : "The field indicates the reason for exiting a relation with a prospect or customer",
            "items" : {
              "$ref" : "#/components/schemas/CustomerExitStatusParamBodyAllowedExitReasons"
            }
          }
        }
      },
      "CustomerContactsResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "emailIds" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "emailId" : {
                  "type" : "string",
                  "description" : "Contains the email identifier of the customer"
                }
              }
            }
          },
          "smsNumbers" : {
            "type" : "array",
            "description" : "The mobile SMS number of the customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "smsNumber" : {
                  "type" : "string",
                  "description" : "The mobile SMS number of the customer"
                }
              }
            }
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "faxIds" : {
            "type" : "array",
            "description" : "The fax (facsimile) number of the customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "faxId" : {
                  "type" : "string",
                  "description" : "The fax (facsimile) number of the customer"
                }
              }
            }
          },
          "customerId" : {
            "type" : "string",
            "description" : "Identifier of the customer"
          },
          "phoneNumbers" : {
            "type" : "array",
            "description" : "The phone number of the customer or prospect",
            "items" : {
              "type" : "object",
              "properties" : {
                "phoneNumber" : {
                  "type" : "string",
                  "description" : "The phone number of the customer or prospect"
                }
              }
            }
          }
        }
      },
      "CustomerDigitalChannelsResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "isMobileBankingService" : {
            "type" : "boolean",
            "description" : "Indicates whether is Customer is subscribed to the mobile banking service or not"
          },
          "externalUserId" : {
            "maxLength" : 70,
            "type" : "string",
            "description" : "Contains the external user identifier for which the consent is created"
          },
          "isInternetBankingService" : {
            "type" : "boolean",
            "description" : "Indicates whether is Customer is subscribed to the internet banking service or not"
          },
          "customerId" : {
            "maximum" : 10,
            "type" : "number",
            "description" : "Identifier of the customer"
          },
          "digitalChannels" : {
            "type" : "array",
            "description" : "Specific channels details for a customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "channelName" : {
                  "maxLength" : 20,
                  "type" : "string",
                  "description" : "Name of the (digital) channel registered by the Customer"
                },
                "status" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Contains status of the data rights request.Allowed values are INITIATED, INPROGESS, EXTENDED, COMPLETED, REJECTED."
                },
                "productLine" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "The top level product line, which the product is ultimately attached to. May be a Temenos-defined product line such as ACCOUNTS, AGENT, BUNDLE, CONSENT, DEPOSITS, LENDING, REWARDS, etc. or one defined by the institution to manage external products."
                },
                "arrangementId" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Indicates an unique identifier of an account"
                },
                "startDate" : {
                  "type" : "string",
                  "description" : "Contains the date on which the transaction or payment gets initiated.",
                  "format" : "date"
                },
                "endDate" : {
                  "type" : "string",
                  "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                  "format" : "date"
                },
                "userType" : {
                  "maxLength" : 12,
                  "type" : "string",
                  "description" : "The type of the user. Can be CORPORATE, INTERMEDIARY,PERSONAL"
                },
                "loginMethod" : {
                  "maxLength" : 20,
                  "type" : "string",
                  "description" : "The type of login method e.g. password, PIN, OTP"
                },
                "lastSignOnDate" : {
                  "type" : "string",
                  "description" : "Last date and time the user last logged in.",
                  "format" : "date"
                }
              }
            }
          },
          "authenticationType" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "The type of authentication for this external user. It should be either External or User Maintained"
          },
          "externalUserName" : {
            "maxLength" : 70,
            "type" : "string",
            "description" : "External or Digital Channel User Name"
          },
          "customerName" : {
            "maxLength" : 10,
            "type" : "string",
            "description" : "Indicates the name of the customer. Originator is the party who requests the payment cancellation"
          }
        }
      },
      "PartyRelationship" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/PartyRelationshipBody"
          }
        },
        "description" : "PartyRelationship"
      },
      "CustomerShortNamesResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ScreenHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerShortNamesResponseBody"
          }
        },
        "description" : "CustomerShortNamesResponse"
      },
      "CustomerStaticChangeResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ScreenHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerStaticChangeResponseBody"
          }
        },
        "description" : "CustomerStaticChangeResponse"
      },
      "CustomerKYCDetailsResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "kycNextReviewDate" : {
            "type" : "string",
            "description" : "Next date of KYC review defined manually by the User",
            "format" : "date"
          },
          "introducer" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Name of the person who introduced the Customer to the bank"
          },
          "contactDate" : {
            "type" : "string",
            "description" : "Date that first contact was made with the Customer",
            "format" : "date"
          },
          "kycRelationship" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Indicates the Customer Relationship details of the customer"
          },
          "amlLastResultDate" : {
            "type" : "string",
            "description" : "The last date when Anti Money Laundering result is performed and updated",
            "format" : "date"
          },
          "kycNextSystemReviewDate" : {
            "type" : "string",
            "description" : "Date system has calculated customer should next be reviewed",
            "format" : "date"
          },
          "isKycComplete" : {
            "type" : "boolean",
            "description" : "Whether information related to the customer has been collected and verified"
          },
          "kycLastReviewDate" : {
            "type" : "string",
            "description" : "Date customer KYC information was last reviewed",
            "format" : "date"
          },
          "amlResult" : {
            "maxLength" : 14,
            "type" : "string",
            "description" : "Describe the results of Anti Money Laundering"
          },
          "amlCheck" : {
            "maxLength" : 4,
            "type" : "string",
            "description" : "Describe the legal controls that is required by institutions to prevent or report Anti Money Laundering activities. It can have YES, SENT or NULL values"
          }
        }
      },
      "CustomerGroupBodyRelationshipDetails" : {
        "type" : "object",
        "properties" : {
          "relationshipName" : {
            "maxLength" : 13,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the description of the relationship between parties"
          },
          "relatedPartyType" : {
            "maxLength" : 13,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the related party's customer type. It may be Customer, Person or Entity"
          },
          "relationshipType" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the nature of the relationship between the two parties Parent-of, Subsidiary-of"
          },
          "groupRelationshipType" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the nature of the relationship between the two group of parties"
          },
          "relatedPartyId" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the Related Party"
          },
          "excludeParty" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates whether the party can be excluded from the customer group. Allowed values are YES or Blank"
          },
          "partyType" : {
            "maxLength" : 13,
            "minLength" : 0,
            "type" : "string",
            "description" : "Defines the application id, to which the party id belongs to. Example, CUSTOMER/PERSON.ENTITY"
          },
          "partyId" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field"
          },
          "startDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the date on which the transaction or payment gets initiated"
          },
          "ownershipPercentage" : {
            "maxLength" : 6,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the percentage contributed by specific owner of the asset or collateral"
          }
        }
      },
      "QueryHeader" : {
        "type" : "object",
        "properties" : {
          "audit" : {
            "$ref" : "#/components/schemas/ScreenHeaderAudit"
          },
          "page_start" : {
            "type" : "integer",
            "description" : "The record from which the response should be displayed",
            "format" : "int32",
            "x-ballerina-name" : "pageStart"
          },
          "total_size" : {
            "type" : "integer",
            "description" : "The total number of records present",
            "format" : "int32",
            "x-ballerina-name" : "totalSize"
          },
          "page_token" : {
            "type" : "string",
            "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
            "x-ballerina-name" : "pageToken"
          },
          "status" : {
            "type" : "string",
            "description" : "Status of the API(success/failed)"
          },
          "page_size" : {
            "type" : "integer",
            "description" : "The total number of records per page",
            "format" : "int32",
            "x-ballerina-name" : "pageSize"
          }
        }
      },
      "JointCustomerDetailsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/JointCustomerDetailsResponseBody"
          }
        },
        "description" : "JointCustomerDetailsResponse"
      },
      "CustomerConsentsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerConsentsResponseBody"
          }
        },
        "description" : "CustomerConsentsResponse"
      },
      "CustomerMandatesResponseBodyMandateDetails" : {
        "type" : "object",
        "properties" : {
          "mandateApplication" : {
            "maxLength" : 55,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the application name for which the mandates check need to be followed. Any transaction processed by the application specified in this field will undergo mandate processing"
          },
          "mandateRuleId" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the identifier of the rule that needs to executed before applying mandate processing"
          },
          "mandates" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains mandate details of an account"
          }
        }
      },
      "CustomerSweepsResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "fromAccountDetails" : {
            "type" : "array",
            "description" : "Debit account details for sweep record",
            "items" : {
              "type" : "object",
              "properties" : {
                "accountId" : {
                  "type" : "string",
                  "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN"
                },
                "accountName" : {
                  "type" : "string",
                  "description" : "Display name or short name of the account specified."
                },
                "accountCurrency" : {
                  "type" : "string",
                  "description" : "Currency of the account. For example: USD, GBP."
                }
              }
            }
          },
          "toAccountDetails" : {
            "type" : "array",
            "description" : "Creditor unique account details",
            "items" : {
              "type" : "object",
              "properties" : {
                "accountId" : {
                  "type" : "string",
                  "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN"
                },
                "accountName" : {
                  "type" : "string",
                  "description" : "Display name or short name of the account specified."
                },
                "accountCurrency" : {
                  "type" : "string",
                  "description" : "Currency of the account. For example: USD, GBP."
                },
                "minimumBalance" : {
                  "type" : "string",
                  "description" : "The minimum account balance required"
                },
                "maximumBalance" : {
                  "type" : "string",
                  "description" : "The maximum account balance allowed"
                }
              }
            }
          },
          "chargeId" : {
            "type" : "string",
            "description" : "This indicates the charge code which will be triggered for payment stop instruction. Applicable when financial institutions would like to charge for stop payment of cheque etc. "
          },
          "chargeAmount" : {
            "type" : "string",
            "description" : "Retrieves the charge amount after redeem"
          },
          "chargeAccountId" : {
            "type" : "string",
            "description" : "Indicates the account to which the charges has to be levied. Used when charges are to be taken from a separate account"
          },
          "sweepId" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Identifier of the Retail account sweep"
          },
          "sweepType" : {
            "type" : "string",
            "description" : "Sweep types defined to the user"
          },
          "frequency" : {
            "type" : "string",
            "description" : "Specifies the frequency in which the payment application(periodic payments) execute the payment instruction"
          }
        }
      },
      "CustomerEmailAddressResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "customerAddressId" : {
            "maxLength" : 1000,
            "type" : "string",
            "description" : "Identifier of the customer address table"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "customerShortNames" : {
            "type" : "array",
            "description" : "Denotes the Short name registered for a customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "customerShortName" : {
                  "maxLength" : 50,
                  "type" : "string",
                  "description" : "Indicates the short name of Customer"
                }
              }
            }
          },
          "email" : {
            "maxLength" : 254,
            "type" : "string",
            "description" : "Email Identifier of the Customer"
          }
        }
      },
      "CustomerRestrictionsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ScreenHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerRestrictionsResponseBody"
          }
        },
        "description" : "CustomerRestrictionsResponse"
      },
      "CustomerCreditCardsResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CustomerCreditCardsResponseBodyInner"
        }
      },
      "CustomerStaticChangeResponseBody" : {
        "type" : "object",
        "properties" : {
          "requestTime" : {
            "maxLength" : 5,
            "minLength" : 0,
            "type" : "string",
            "description" : "This will capture the request time"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "customerId" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the customer"
          },
          "eventName" : {
            "maxLength" : 90,
            "minLength" : 0,
            "type" : "string",
            "description" : "The name that is displayed for the event"
          },
          "creationDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the creation date"
          }
        }
      },
      "ScreenErrorResponseBodyErrorDetails" : {
        "type" : "object",
        "properties" : {
          "fieldName" : {
            "type" : "string",
            "description" : "The name of the field"
          },
          "code" : {
            "type" : "string",
            "description" : "The identifier of the error message"
          },
          "message" : {
            "type" : "string",
            "description" : "The actual Transact error message "
          }
        }
      },
      "CustomerEmailAddress" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerEmailAddressBody"
          }
        },
        "description" : "CustomerEmailAddress"
      },
      "CustomerChargeBody" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "taxGroups" : {
            "type" : "array",
            "description" : "Defines the Actual Tax Group which the customer is calculated to be a member of for associated tax type",
            "items" : {
              "$ref" : "#/components/schemas/CustomerChargeBodyTaxGroups"
            }
          }
        }
      },
      "CustomerExitStatusResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "customerType" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Identifies the type of customers. Example Personal, Business, Corporate, etc"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "exitReason" : {
            "maxLength" : 80,
            "type" : "string",
            "description" : "The field reflects the customer exit reason of the customer or prospect"
          },
          "exitStatus" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "The field reflects the customer exit status of a customer or prospect"
          },
          "exitDate" : {
            "type" : "string",
            "description" : "The field reflects the customer exit date of the customer or prospect",
            "format" : "date"
          }
        }
      },
      "CustomerGroupPurposeDelete" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          }
        },
        "description" : "CustomerGroupPurposeDelete"
      },
      "CustomerOpportunitiesResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "score" : {
            "maxLength" : 5,
            "type" : "string",
            "description" : "Indicates the sales opportunity score of a product"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "displayName" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Contains the name used for display or enrichment purposes"
          },
          "status" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Contains status of the data rights request.Allowed values are INITIATED, INPROGESS, EXTENDED, COMPLETED, REJECTED"
          }
        }
      },
      "CustomerEmailAddressResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CustomerEmailAddressResponseBodyInner"
        }
      },
      "SystemScreenErrorResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ErrorHeader"
          },
          "error" : {
            "$ref" : "#/components/schemas/SystemScreenErrorResponseBody"
          }
        },
        "description" : "SystemScreenErrorResponse"
      },
      "CustomerGroupPurposeBody" : {
        "type" : "object",
        "properties" : {
          "allowGroupRelationship" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates whether group relations have to be defaulted in customer group from party relationship. Allowed values are YES, NO or Blank"
          },
          "groupTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomerGroupPurposeBodyGroupTypes"
            }
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "groupLevelUniqueCustomer" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates whether customers in a group are to be restricted from being defined in another customer group with same group purpose. YES - will restrict the customer from being defined in another group, NO/Blank - will allow customers to be defined in other groups"
          },
          "groupPurpose" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the type of customer group. Allowed values are RISK ,LIABILITY or Blank"
          },
          "allowRelationship" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates whether customer relations have to be defaulted in customer group from party relationship. Allowed values are YES, NO or Blank"
          },
          "description" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the description of purpose of the payment"
          },
          "subGroupLevelUniqueCustomer" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates whether a customer is allowed to be part of multiple sub groups. Allowed values are UNIQUE, MULTIPLE, NONE or Blank"
          }
        }
      },
      "CustomerGroupResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ScreenHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerGroupResponseBody"
          }
        },
        "description" : "CustomerGroupResponse"
      },
      "CustomerReportingStatusResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "fatcaStatus" : {
            "maxLength" : 2,
            "type" : "string",
            "description" : "Specifies the Fatca status or Account Classification of the client. "
          },
          "postingRestriction" : {
            "type" : "string",
            "description" : "Identifies any restrictions for posting entries that are to be imposed on the Account"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "crsStatuses" : {
            "type" : "array",
            "description" : "Holds the status of the customer as Reportable or Non-reportable",
            "items" : {
              "type" : "object",
              "properties" : {
                "crsStatus" : {
                  "type" : "array",
                  "description" : "Holds the status of the customer as Reportable or Non-reportable.",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "reportableJurisdictions" : {
            "type" : "array",
            "description" : "Indicates the residences of the participating jurisdictions of the reporting customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "reportableJurisdiction" : {
                  "type" : "array",
                  "description" : "Indicates the residences of the participating jurisdictions of the reporting customer.",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "amlResult" : {
            "type" : "string",
            "description" : "Describe the results of Anti Money Laundering"
          }
        }
      },
      "CustomerResponseBodyCustomerNames" : {
        "type" : "object",
        "properties" : {
          "customerNameAdditional" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Continuation/Extension to the Customer Name"
          },
          "customerName" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the name of the customer. Originator is the party who requests the payment cancellation"
          }
        }
      },
      "DeliveryPreferenceResponseBody" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "otherMessagesDetail" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeliveryPreferenceBodyOtherMessagesDetail"
            }
          },
          "applyOtherMessages" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the default customer preferences for receiving any message group for which specific preferences have not been defined"
          },
          "messageGroup" : {
            "type" : "array",
            "description" : "Message group name that provides details of all Messages to be triggered",
            "items" : {
              "$ref" : "#/components/schemas/DeliveryPreferenceBodyMessageGroup"
            }
          }
        }
      },
      "CustomerExitStatusResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerExitStatusResponseBody"
          }
        },
        "description" : "CustomerExitStatusResponse"
      },
      "CustomerClosureResponse1" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerClosureResponse1Body"
          }
        },
        "description" : "CustomerClosureResponse1"
      },
      "CustomerDigitalChannelsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerDigitalChannelsResponseBody"
          }
        },
        "description" : "CustomerDigitalChannelsResponse"
      },
      "UnapprovedCustomerGroupResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/UnapprovedCustomerGroupResponseBodyInner"
        }
      },
      "CustomerGroupBody" : {
        "type" : "object",
        "properties" : {
          "primaryPartyDetails" : {
            "type" : "array",
            "description" : "Contains primary pary details such as primary party id and primary party type",
            "items" : {
              "$ref" : "#/components/schemas/CustomerGroupBodyPrimaryPartyDetails"
            }
          },
          "groupName" : {
            "maxLength" : 40,
            "minLength" : 0,
            "type" : "string",
            "description" : "The name that is displayed for the group"
          },
          "groupType" : {
            "maxLength" : 25,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the type of entity that identifies the group eg. Parent or Member"
          },
          "companyId" : {
            "maxLength" : 9,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001"
          },
          "accountOfficer" : {
            "maxLength" : 6,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of Department Account Officer"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "relationshipDetails" : {
            "type" : "array",
            "description" : "Indicates the details of Relationship maintained by the Customer or Entity",
            "items" : {
              "$ref" : "#/components/schemas/CustomerGroupBodyRelationshipDetails"
            }
          },
          "subGroupDetails" : {
            "type" : "array",
            "description" : "Contains sub group details such as sub group id, sub group name, sub group customer etc",
            "items" : {
              "$ref" : "#/components/schemas/CustomerGroupBodySubGroupDetails"
            }
          },
          "liabilityNumber" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the Liability Customer to the credit limit"
          },
          "closureDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "The date when the Security Account is to be closed"
          },
          "description" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the description of purpose of the payment"
          },
          "groupPurposeId" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of customer group purpose"
          }
        }
      },
      "PartyRelationshipResponse1" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/PartyRelationshipResponse1Body"
          }
        },
        "description" : "PartyRelationshipResponse1"
      },
      "DeliveryPreferenceBody" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "otherMessagesDetail" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeliveryPreferenceBodyOtherMessagesDetail"
            }
          },
          "applyOtherMessages" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the default customer preferences for receiving any message group for which specific preferences have not been defined"
          },
          "messageGroup" : {
            "type" : "array",
            "description" : "Message group name that provides details of all Messages to be triggered",
            "items" : {
              "$ref" : "#/components/schemas/DeliveryPreferenceBodyMessageGroup"
            }
          }
        }
      },
      "CustomerEmailAddressResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerEmailAddressResponseBody"
          }
        },
        "description" : "CustomerEmailAddressResponse"
      },
      "CustomerAddressOutputResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CustomerAddressOutputResponseBodyInner"
        }
      },
      "CustomerIdResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerIdResponseBody"
          }
        },
        "description" : "CustomerIdResponse"
      },
      "CustomerClosureResponse1Body" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CustomerClosureResponse1BodyInner"
        }
      },
      "CustomerInformationResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CustomerInformationResponseBodyInner"
        }
      },
      "CustomerMandatesResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ScreenHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerMandatesResponseBody"
          }
        },
        "description" : "CustomerMandatesResponse"
      },
      "CustomerResponseBodyEmployDetails" : {
        "type" : "object",
        "properties" : {
          "occupation" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Occupation of the customer"
          },
          "salaryAmount" : {
            "maximum" : 19,
            "minimum" : 0,
            "type" : "number",
            "description" : "Gross Salary details of the customer"
          },
          "employStartDate" : {
            "type" : "string",
            "description" : "Starting date of the customer's employment",
            "format" : "date"
          },
          "salaryCurrency" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Currency in which the Salary information of the customer is maintained"
          },
          "employerName" : {
            "maxLength" : 150,
            "minLength" : 0,
            "type" : "string",
            "description" : "Name of the customer's employer"
          },
          "employJobTitle" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Employment Job Title of the Customer"
          },
          "employStatus" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Employment status of the customer"
          }
        }
      }
    },
    "securitySchemes" : {
      "apiKey" : {
        "type" : "apiKey",
        "name" : "apikey",
        "in" : "header"
      }
    }
  },
  "x-original-swagger-version" : "2.0"
}